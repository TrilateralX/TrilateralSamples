// Generated by Haxe 4.3.0-rc.1+88ebbd0
#ifndef INCLUDED_hxGeomAlgo__HxPoint_HxPoint_Impl_
#define INCLUDED_hxGeomAlgo__HxPoint_HxPoint_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(hxGeomAlgo,HxPointData)
HX_DECLARE_CLASS2(hxGeomAlgo,_HxPoint,HxPoint_Impl_)

namespace hxGeomAlgo{
namespace _HxPoint{


class HXCPP_CLASS_ATTRIBUTES HxPoint_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef HxPoint_Impl__obj OBJ_;
		HxPoint_Impl__obj();

	public:
		enum { _hx_ClassId = 0x00051a40 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxGeomAlgo._HxPoint.HxPoint_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hxGeomAlgo._HxPoint.HxPoint_Impl_"); }

		inline static ::hx::ObjectPtr< HxPoint_Impl__obj > __new() {
			::hx::ObjectPtr< HxPoint_Impl__obj > __this = new HxPoint_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< HxPoint_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			HxPoint_Impl__obj *__this = (HxPoint_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HxPoint_Impl__obj), false, "hxGeomAlgo._HxPoint.HxPoint_Impl_"));
			*(void **)__this = HxPoint_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~HxPoint_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HxPoint_Impl_",a0,53,9e,52); }

		static void __boot();
		static  ::hxGeomAlgo::HxPointData EMPTY;
		static Float get_x( ::hxGeomAlgo::HxPointData this1);
		static ::Dynamic get_x_dyn();

		static Float set_x( ::hxGeomAlgo::HxPointData this1,Float value);
		static ::Dynamic set_x_dyn();

		static Float get_y( ::hxGeomAlgo::HxPointData this1);
		static ::Dynamic get_y_dyn();

		static Float set_y( ::hxGeomAlgo::HxPointData this1,Float value);
		static ::Dynamic set_y_dyn();

		static  ::hxGeomAlgo::HxPointData _new(::hx::Null< Float >  x,::hx::Null< Float >  y);
		static ::Dynamic _new_dyn();

		static void setTo( ::hxGeomAlgo::HxPointData this1,Float newX,Float newY);
		static ::Dynamic setTo_dyn();

		static bool equals( ::hxGeomAlgo::HxPointData this1, ::hxGeomAlgo::HxPointData p);
		static ::Dynamic equals_dyn();

		static  ::hxGeomAlgo::HxPointData clone( ::hxGeomAlgo::HxPointData this1);
		static ::Dynamic clone_dyn();

		static ::String toString( ::hxGeomAlgo::HxPointData this1);
		static ::Dynamic toString_dyn();

		static  ::hxGeomAlgo::HxPointData fromPointStruct( ::Dynamic p);
		static ::Dynamic fromPointStruct_dyn();

		static  ::Dynamic toPointStruct( ::hxGeomAlgo::HxPointData this1);
		static ::Dynamic toPointStruct_dyn();

};

} // end namespace hxGeomAlgo
} // end namespace _HxPoint

#endif /* INCLUDED_hxGeomAlgo__HxPoint_HxPoint_Impl_ */ 
