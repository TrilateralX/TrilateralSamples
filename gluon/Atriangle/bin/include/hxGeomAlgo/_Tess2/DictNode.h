// Generated by Haxe 4.3.0-rc.1+88ebbd0
#ifndef INCLUDED_hxGeomAlgo__Tess2_DictNode
#define INCLUDED_hxGeomAlgo__Tess2_DictNode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,ActiveRegion)
HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,DictNode)

namespace hxGeomAlgo{
namespace _Tess2{


class HXCPP_CLASS_ATTRIBUTES DictNode_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DictNode_obj OBJ_;
		DictNode_obj();

	public:
		enum { _hx_ClassId = 0x071dfdc1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxGeomAlgo._Tess2.DictNode")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxGeomAlgo._Tess2.DictNode"); }
		static ::hx::ObjectPtr< DictNode_obj > __new();
		static ::hx::ObjectPtr< DictNode_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DictNode_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DictNode",b8,3e,67,d3); }

		 ::hxGeomAlgo::_Tess2::ActiveRegion key;
		 ::hxGeomAlgo::_Tess2::DictNode next;
		 ::hxGeomAlgo::_Tess2::DictNode prev;
};

} // end namespace hxGeomAlgo
} // end namespace _Tess2

#endif /* INCLUDED_hxGeomAlgo__Tess2_DictNode */ 
