// Generated by Haxe 4.3.0-rc.1+88ebbd0
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessMesh
#define INCLUDED_hxGeomAlgo__Tess2_TessMesh

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,TessFace)
HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,TessHalfEdge)
HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,TessMesh)
HX_DECLARE_CLASS2(hxGeomAlgo,_Tess2,TessVertex)

namespace hxGeomAlgo{
namespace _Tess2{


class HXCPP_CLASS_ATTRIBUTES TessMesh_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TessMesh_obj OBJ_;
		TessMesh_obj();

	public:
		enum { _hx_ClassId = 0x7780d73f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxGeomAlgo._Tess2.TessMesh")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxGeomAlgo._Tess2.TessMesh"); }
		static ::hx::ObjectPtr< TessMesh_obj > __new();
		static ::hx::ObjectPtr< TessMesh_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TessMesh_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TessMesh",fe,f6,d6,91); }

		static void flipEdge( ::hxGeomAlgo::_Tess2::TessMesh mesh, ::hxGeomAlgo::_Tess2::TessHalfEdge edge);
		static ::Dynamic flipEdge_dyn();

		 ::hxGeomAlgo::_Tess2::TessVertex v;
		 ::hxGeomAlgo::_Tess2::TessFace f;
		 ::hxGeomAlgo::_Tess2::TessHalfEdge e;
		 ::hxGeomAlgo::_Tess2::TessHalfEdge eSym;
		 ::hxGeomAlgo::_Tess2::TessVertex vHead;
		 ::hxGeomAlgo::_Tess2::TessFace fHead;
		 ::hxGeomAlgo::_Tess2::TessHalfEdge eHead;
		 ::hxGeomAlgo::_Tess2::TessHalfEdge eHeadSym;
		 ::hxGeomAlgo::_Tess2::TessHalfEdge makeEdge_( ::hxGeomAlgo::_Tess2::TessHalfEdge eNext);
		::Dynamic makeEdge__dyn();

		void splice_( ::hxGeomAlgo::_Tess2::TessHalfEdge a, ::hxGeomAlgo::_Tess2::TessHalfEdge b);
		::Dynamic splice__dyn();

		void makeVertex_( ::hxGeomAlgo::_Tess2::TessVertex newVertex, ::hxGeomAlgo::_Tess2::TessHalfEdge eOrig, ::hxGeomAlgo::_Tess2::TessVertex vNext);
		::Dynamic makeVertex__dyn();

		void makeFace_( ::hxGeomAlgo::_Tess2::TessFace newFace, ::hxGeomAlgo::_Tess2::TessHalfEdge eOrig, ::hxGeomAlgo::_Tess2::TessFace fNext);
		::Dynamic makeFace__dyn();

		void killEdge_( ::hxGeomAlgo::_Tess2::TessHalfEdge eDel);
		::Dynamic killEdge__dyn();

		void killVertex_( ::hxGeomAlgo::_Tess2::TessVertex vDel, ::hxGeomAlgo::_Tess2::TessVertex newOrg);
		::Dynamic killVertex__dyn();

		void killFace_( ::hxGeomAlgo::_Tess2::TessFace fDel, ::hxGeomAlgo::_Tess2::TessFace newLface);
		::Dynamic killFace__dyn();

		 ::hxGeomAlgo::_Tess2::TessHalfEdge makeEdge();
		::Dynamic makeEdge_dyn();

		void splice( ::hxGeomAlgo::_Tess2::TessHalfEdge eOrg, ::hxGeomAlgo::_Tess2::TessHalfEdge eDst);
		::Dynamic splice_dyn();

		void _hx_delete( ::hxGeomAlgo::_Tess2::TessHalfEdge eDel);
		::Dynamic _hx_delete_dyn();

		 ::hxGeomAlgo::_Tess2::TessHalfEdge addEdgeVertex( ::hxGeomAlgo::_Tess2::TessHalfEdge eOrg);
		::Dynamic addEdgeVertex_dyn();

		 ::hxGeomAlgo::_Tess2::TessHalfEdge splitEdge( ::hxGeomAlgo::_Tess2::TessHalfEdge eOrg);
		::Dynamic splitEdge_dyn();

		 ::hxGeomAlgo::_Tess2::TessHalfEdge connect( ::hxGeomAlgo::_Tess2::TessHalfEdge eOrg, ::hxGeomAlgo::_Tess2::TessHalfEdge eDst);
		::Dynamic connect_dyn();

		void zapFace( ::hxGeomAlgo::_Tess2::TessFace fZap);
		::Dynamic zapFace_dyn();

		int countFaceVerts_( ::hxGeomAlgo::_Tess2::TessFace f);
		::Dynamic countFaceVerts__dyn();

		bool mergeConvexFaces(int maxVertsPerFace);
		::Dynamic mergeConvexFaces_dyn();

		void check();
		::Dynamic check_dyn();

};

} // end namespace hxGeomAlgo
} // end namespace _Tess2

#endif /* INCLUDED_hxGeomAlgo__Tess2_TessMesh */ 
