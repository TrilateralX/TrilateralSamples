// Generated by Haxe 4.3.0-rc.1+88ebbd0
#include <hxcpp.h>

#ifndef INCLUDED_typedarray__BufferSource_BufferSourceType
#include <typedarray/_BufferSource/BufferSourceType.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_ResultType
#include <hxGeomAlgo/ResultType.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_WindingRule
#include <hxGeomAlgo/WindingRule.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_fracs_DifferencePreference
#include <fracs/DifferencePreference.h>
#endif
#ifndef INCLUDED_trilateral3_nodule_PenNodule
#include <trilateral3/nodule/PenNodule.h>
#endif
#ifndef INCLUDED_trilateral3_Trilateral
#include <trilateral3/Trilateral.h>
#endif
#ifndef INCLUDED_sys_thread__Thread_HaxeThread
#include <sys/thread/_Thread/HaxeThread.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_PolyTools
#include <hxGeomAlgo/PolyTools.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__HxPoint_HxPoint_Impl_
#include <hxGeomAlgo/_HxPoint/HxPoint_Impl_.h>
#endif
#ifndef INCLUDED_haxe_MainLoop
#include <haxe/MainLoop.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_glfw_GLFWWindowSizeHandler
#include <glfw/GLFWWindowSizeHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWMouseWheelHandler
#include <glfw/GLFWMouseWheelHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWMouseButtonHandler
#include <glfw/GLFWMouseButtonHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWMouseMoveHandler
#include <glfw/GLFWMouseMoveHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWKeyHandler
#include <glfw/GLFWKeyHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWCharHandler
#include <glfw/GLFWCharHandler.h>
#endif
#ifndef INCLUDED_typedarray_Uint8ArrayImpl
#include <typedarray/Uint8ArrayImpl.h>
#endif
#ifndef INCLUDED_typedarray__Uint8Array_Uint8Array_Impl_
#include <typedarray/_Uint8Array/Uint8Array_Impl_.h>
#endif
#ifndef INCLUDED_typedarray_Int32ArrayImpl
#include <typedarray/Int32ArrayImpl.h>
#endif
#ifndef INCLUDED_typedarray__Int32Array_Int32Array_Impl_
#include <typedarray/_Int32Array/Int32Array_Impl_.h>
#endif
#ifndef INCLUDED_typedarray_Float32ArrayImpl
#include <typedarray/Float32ArrayImpl.h>
#endif
#ifndef INCLUDED_typedarray__Float32Array_Float32Array_Impl_
#include <typedarray/_Float32Array/Float32Array_Impl_.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewImplIterator_typedarray__Uint8Array_UInt8
#include <typedarray/ArrayBufferViewImplIterator_typedarray__Uint8Array_UInt8.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewImplIterator_typedarray__Int32Array_Int32
#include <typedarray/ArrayBufferViewImplIterator_typedarray__Int32Array_Int32.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewImplIterator_typedarray__Float32Array_ArrayType
#include <typedarray/ArrayBufferViewImplIterator_typedarray__Float32Array_ArrayType.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewBase
#include <typedarray/ArrayBufferViewBase.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferView
#include <typedarray/ArrayBufferView.h>
#endif
#ifndef INCLUDED_trilateral3_structure_Triangle3D
#include <trilateral3/structure/Triangle3D.h>
#endif
#ifndef INCLUDED_trilateral3_structure_TriInt
#include <trilateral3/structure/TriInt.h>
#endif
#ifndef INCLUDED_trilateral3_structure_StartEnd
#include <trilateral3/structure/StartEnd.h>
#endif
#ifndef INCLUDED_trilateral3_matrix_Vertex
#include <trilateral3/matrix/Vertex.h>
#endif
#ifndef INCLUDED_trilateral3_matrix_MatrixDozen
#include <trilateral3/matrix/MatrixDozen.h>
#endif
#ifndef INCLUDED_trilateral3_geom__FlatColorTriangles_FlatColorTriangles_Impl_
#include <trilateral3/geom/_FlatColorTriangles/FlatColorTriangles_Impl_.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Sketch
#include <trilateral3/drawing/Sketch.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Pen
#include <trilateral3/drawing/Pen.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Contour
#include <trilateral3/drawing/Contour.h>
#endif
#ifndef INCLUDED_sys_thread__Thread_Thread_Impl_
#include <sys/thread/_Thread/Thread_Impl_.h>
#endif
#ifndef INCLUDED_sys_thread_NoEventLoopException
#include <sys/thread/NoEventLoopException.h>
#endif
#ifndef INCLUDED_sys_thread_Lock
#include <sys/thread/Lock.h>
#endif
#ifndef INCLUDED_sys_thread__EventLoop_RegularEvent
#include <sys/thread/_EventLoop/RegularEvent.h>
#endif
#ifndef INCLUDED_sys_thread_EventLoop
#include <sys/thread/EventLoop.h>
#endif
#ifndef INCLUDED_kitGL_gluon_Glwrapper
#include <kitGL/gluon/Glwrapper.h>
#endif
#ifndef INCLUDED_kitGL_gluon_Animate
#include <kitGL/gluon/Animate.h>
#endif
#ifndef INCLUDED_justPath_IPathContext
#include <justPath/IPathContext.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_Tesselator
#include <hxGeomAlgo/Tesselator.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_Sweep
#include <hxGeomAlgo/_Tess2/Sweep.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_ActiveRegion
#include <hxGeomAlgo/_Tess2/ActiveRegion.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_PriorityQ
#include <hxGeomAlgo/_Tess2/PriorityQ.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_PQHandleElem
#include <hxGeomAlgo/_Tess2/PQHandleElem.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_PQNode
#include <hxGeomAlgo/_Tess2/PQNode.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_Dict
#include <hxGeomAlgo/_Tess2/Dict.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_DictNode
#include <hxGeomAlgo/_Tess2/DictNode.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_Geom
#include <hxGeomAlgo/_Tess2/Geom.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessMesh
#include <hxGeomAlgo/_Tess2/TessMesh.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessHalfEdge
#include <hxGeomAlgo/_Tess2/TessHalfEdge.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessFace
#include <hxGeomAlgo/_Tess2/TessFace.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessVertex
#include <hxGeomAlgo/_Tess2/TessVertex.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_Tess2
#include <hxGeomAlgo/Tess2.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_HxPointData
#include <hxGeomAlgo/HxPointData.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_HomogCoord
#include <hxGeomAlgo/HomogCoord.h>
#endif
#ifndef INCLUDED_hxGeomAlgo_Debug
#include <hxGeomAlgo/Debug.h>
#endif
#ifndef INCLUDED_haxe_iterators_ArrayIterator
#include <haxe/iterators/ArrayIterator.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ValueException
#include <haxe/ValueException.h>
#endif
#ifndef INCLUDED_haxe_NativeStackTrace
#include <haxe/NativeStackTrace.h>
#endif
#ifndef INCLUDED_haxe_MainEvent
#include <haxe/MainEvent.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_EntryPoint
#include <haxe/EntryPoint.h>
#endif
#ifndef INCLUDED_sys_thread_Mutex
#include <sys/thread/Mutex.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe__CallStack_CallStack_Impl_
#include <haxe/_CallStack/CallStack_Impl_.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLShader
#include <gluon/webgl/native/GLShader.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLProgram
#include <gluon/webgl/native/GLProgram.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLFramebuffer
#include <gluon/webgl/native/GLFramebuffer.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLContext
#include <gluon/webgl/native/GLContext.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLBuffer
#include <gluon/webgl/native/GLBuffer.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLObject
#include <gluon/webgl/native/GLObject.h>
#endif
#ifndef INCLUDED_gluon_webgl__GLContext_GLContext_Impl_
#include <gluon/webgl/_GLContext/GLContext_Impl_.h>
#endif
#ifndef INCLUDED_glfw_GLFWJoystickHandler
#include <glfw/GLFWJoystickHandler.h>
#endif
#ifndef INCLUDED_glfw_GLFWErrorHandler
#include <glfw/GLFWErrorHandler.h>
#endif
#ifndef INCLUDED_dsHelper_flatInterleave__FloatColorTrianglesUV_FloatColorTrianglesUV_Impl_
#include <dsHelper/flatInterleave/_FloatColorTrianglesUV/FloatColorTrianglesUV_Impl_.h>
#endif
#ifndef INCLUDED_dsHelper_flatInterleave__FloatColorTriangles_FloatColorTriangles_Impl_
#include <dsHelper/flatInterleave/_FloatColorTriangles/FloatColorTriangles_Impl_.h>
#endif
#ifndef INCLUDED_dsHelper_flat_io__Float32FlatDepth_Float32FlatDepth_Impl_
#include <dsHelper/flat/io/_Float32FlatDepth/Float32FlatDepth_Impl_.h>
#endif
#ifndef INCLUDED_dsHelper_flat_io__Float32Flat_Float32Flat_Impl_
#include <dsHelper/flat/io/_Float32Flat/Float32Flat_Impl_.h>
#endif
#ifndef INCLUDED_TrilateralTriangle
#include <TrilateralTriangle.h>
#endif
#ifndef INCLUDED_kitGL_gluon_Ply
#include <kitGL/gluon/Ply.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED__Main_Main_Fields_
#include <_Main/Main_Fields_.h>
#endif

void __files__boot();

void __boot_all()
{
__files__boot();
::hx::RegisterResources( ::hx::GetResources() );
::typedarray::_BufferSource::BufferSourceType_obj::__register();
::hxGeomAlgo::ResultType_obj::__register();
::hxGeomAlgo::WindingRule_obj::__register();
::haxe::io::Error_obj::__register();
::haxe::StackItem_obj::__register();
::fracs::DifferencePreference_obj::__register();
::trilateral3::nodule::PenNodule_obj::__register();
::trilateral3::Trilateral_obj::__register();
::sys::thread::_Thread::HaxeThread_obj::__register();
::hxGeomAlgo::PolyTools_obj::__register();
::hxGeomAlgo::_HxPoint::HxPoint_Impl__obj::__register();
::haxe::MainLoop_obj::__register();
::haxe::Log_obj::__register();
::glfw::GLFWWindowSizeHandler_obj::__register();
::glfw::GLFWMouseWheelHandler_obj::__register();
::glfw::GLFWMouseButtonHandler_obj::__register();
::glfw::GLFWMouseMoveHandler_obj::__register();
::glfw::GLFWKeyHandler_obj::__register();
::glfw::GLFWCharHandler_obj::__register();
::typedarray::Uint8ArrayImpl_obj::__register();
::typedarray::_Uint8Array::Uint8Array_Impl__obj::__register();
::typedarray::Int32ArrayImpl_obj::__register();
::typedarray::_Int32Array::Int32Array_Impl__obj::__register();
::typedarray::Float32ArrayImpl_obj::__register();
::typedarray::_Float32Array::Float32Array_Impl__obj::__register();
::typedarray::ArrayBufferViewImplIterator_typedarray__Uint8Array_UInt8_obj::__register();
::typedarray::ArrayBufferViewImplIterator_typedarray__Int32Array_Int32_obj::__register();
::typedarray::ArrayBufferViewImplIterator_typedarray__Float32Array_ArrayType_obj::__register();
::typedarray::ArrayBufferViewBase_obj::__register();
::typedarray::ArrayBufferView_obj::__register();
::trilateral3::structure::Triangle3D_obj::__register();
::trilateral3::structure::TriInt_obj::__register();
::trilateral3::structure::StartEnd_obj::__register();
::trilateral3::matrix::Vertex_obj::__register();
::trilateral3::matrix::MatrixDozen_obj::__register();
::trilateral3::geom::_FlatColorTriangles::FlatColorTriangles_Impl__obj::__register();
::trilateral3::drawing::Sketch_obj::__register();
::trilateral3::drawing::Pen_obj::__register();
::trilateral3::drawing::Contour_obj::__register();
::sys::thread::_Thread::Thread_Impl__obj::__register();
::sys::thread::NoEventLoopException_obj::__register();
::sys::thread::Lock_obj::__register();
::sys::thread::_EventLoop::RegularEvent_obj::__register();
::sys::thread::EventLoop_obj::__register();
::kitGL::gluon::Glwrapper_obj::__register();
::kitGL::gluon::Animate_obj::__register();
::justPath::IPathContext_obj::__register();
::hxGeomAlgo::Tesselator_obj::__register();
::hxGeomAlgo::_Tess2::Sweep_obj::__register();
::hxGeomAlgo::_Tess2::ActiveRegion_obj::__register();
::hxGeomAlgo::_Tess2::PriorityQ_obj::__register();
::hxGeomAlgo::_Tess2::PQHandleElem_obj::__register();
::hxGeomAlgo::_Tess2::PQNode_obj::__register();
::hxGeomAlgo::_Tess2::Dict_obj::__register();
::hxGeomAlgo::_Tess2::DictNode_obj::__register();
::hxGeomAlgo::_Tess2::Geom_obj::__register();
::hxGeomAlgo::_Tess2::TessMesh_obj::__register();
::hxGeomAlgo::_Tess2::TessHalfEdge_obj::__register();
::hxGeomAlgo::_Tess2::TessFace_obj::__register();
::hxGeomAlgo::_Tess2::TessVertex_obj::__register();
::hxGeomAlgo::Tess2_obj::__register();
::hxGeomAlgo::HxPointData_obj::__register();
::hxGeomAlgo::HomogCoord_obj::__register();
::hxGeomAlgo::Debug_obj::__register();
::haxe::iterators::ArrayIterator_obj::__register();
::haxe::io::Bytes_obj::__register();
::haxe::ds::StringMap_obj::__register();
::haxe::ValueException_obj::__register();
::haxe::NativeStackTrace_obj::__register();
::haxe::MainEvent_obj::__register();
::haxe::Exception_obj::__register();
::haxe::EntryPoint_obj::__register();
::sys::thread::Mutex_obj::__register();
::haxe::IMap_obj::__register();
::haxe::_CallStack::CallStack_Impl__obj::__register();
::gluon::webgl::native::GLShader_obj::__register();
::gluon::webgl::native::GLProgram_obj::__register();
::gluon::webgl::native::GLFramebuffer_obj::__register();
::gluon::webgl::native::GLContext_obj::__register();
::gluon::webgl::native::GLBuffer_obj::__register();
::gluon::webgl::native::GLObject_obj::__register();
::gluon::webgl::_GLContext::GLContext_Impl__obj::__register();
::glfw::GLFWJoystickHandler_obj::__register();
::glfw::GLFWErrorHandler_obj::__register();
::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::__register();
::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::__register();
::dsHelper::flat::io::_Float32FlatDepth::Float32FlatDepth_Impl__obj::__register();
::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::__register();
::TrilateralTriangle_obj::__register();
::kitGL::gluon::Ply_obj::__register();
::Sys_obj::__register();
::Std_obj::__register();
::_Main::Main_Fields__obj::__register();
::typedarray::_BufferSource::BufferSourceType_obj::__boot();
::hxGeomAlgo::ResultType_obj::__boot();
::hxGeomAlgo::WindingRule_obj::__boot();
::haxe::io::Error_obj::__boot();
::haxe::StackItem_obj::__boot();
::fracs::DifferencePreference_obj::__boot();
::haxe::Log_obj::__boot();
::glfw::GLFWCharHandler_obj::__boot();
::glfw::GLFWKeyHandler_obj::__boot();
::glfw::GLFWMouseMoveHandler_obj::__boot();
::glfw::GLFWMouseButtonHandler_obj::__boot();
::glfw::GLFWMouseWheelHandler_obj::__boot();
::glfw::GLFWWindowSizeHandler_obj::__boot();
::haxe::MainLoop_obj::__boot();
::hxGeomAlgo::_HxPoint::HxPoint_Impl__obj::__boot();
::hxGeomAlgo::PolyTools_obj::__boot();
::sys::thread::_Thread::HaxeThread_obj::__boot();
::trilateral3::Trilateral_obj::__boot();
::trilateral3::nodule::PenNodule_obj::__boot();
}

