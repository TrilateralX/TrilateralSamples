// Generated by Haxe 4.3.0-rc.1+88ebbd0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_dsHelper_flatInterleave__FloatColorTrianglesUV_FloatColorTrianglesUV_Impl_
#include <dsHelper/flatInterleave/_FloatColorTrianglesUV/FloatColorTrianglesUV_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferView
#include <typedarray/ArrayBufferView.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewBase
#include <typedarray/ArrayBufferViewBase.h>
#endif
#ifndef INCLUDED_typedarray_Float32ArrayImpl
#include <typedarray/Float32ArrayImpl.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_15_get_ax,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_ax",0x08de5488,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_ax","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",15,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_17_set_ax,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_ax",0xd526a8fc,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_ax","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",17,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_23_get_ay,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_ay",0x08de5489,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_ay","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",23,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_25_set_ay,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_ay",0xd526a8fd,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_ay","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",25,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_33_set_az,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_az",0xd526a8fe,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_az","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",33,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_100_get_bx,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_bx",0x08de5567,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_bx","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",100,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_102_set_bx,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_bx",0xd526a9db,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_bx","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",102,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_108_get_by,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_by",0x08de5568,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_by","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",108,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_110_set_by,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_by",0xd526a9dc,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_by","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",110,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_118_set_bz,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_bz",0xd526a9dd,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_bz","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",118,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_185_get_cx,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_cx",0x08de5646,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_cx","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",185,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_187_set_cx,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_cx",0xd526aaba,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_cx","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",187,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_193_get_cy,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","get_cy",0x08de5647,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.get_cy","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",193,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_195_set_cy,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_cy",0xd526aabb,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_cy","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",195,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_203_set_cz,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","set_cz",0xd526aabc,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.set_cz","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",203,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_271_triangle,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","triangle",0x8a14c910,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.triangle","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",271,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_297_triangleUV,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","triangleUV",0xcfa57771,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.triangleUV","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",297,0xa6f96762)
HX_LOCAL_STACK_FRAME(_hx_pos_ce0e8811cc2217c8_315_adjustWinding,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_","adjustWinding",0x1e859503,"dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_.adjustWinding","dsHelper/flatInterleave/FloatColorTrianglesUV.hx",315,0xa6f96762)
namespace dsHelper{
namespace flatInterleave{
namespace _FloatColorTrianglesUV{

void FloatColorTrianglesUV_Impl__obj::__construct() { }

Dynamic FloatColorTrianglesUV_Impl__obj::__CreateEmpty() { return new FloatColorTrianglesUV_Impl__obj; }

void *FloatColorTrianglesUV_Impl__obj::_hx_vtable = 0;

Dynamic FloatColorTrianglesUV_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FloatColorTrianglesUV_Impl__obj > _hx_result = new FloatColorTrianglesUV_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FloatColorTrianglesUV_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4ab2ad0a;
}

Float FloatColorTrianglesUV_Impl__obj::get_ax( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_15_get_ax)
HXDLIN(  15)		if ((0 >= this1->length)) {
HXDLIN(  15)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN(  15)		int p = this1->byteOffset;
HXDLIN(  15)		int i = ((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 2);
HXDLIN(  15)		bool _hx_tmp;
HXDLIN(  15)		if ((i >= 0)) {
HXDLIN(  15)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN(  15)			_hx_tmp = true;
            		}
HXDLIN(  15)		if (_hx_tmp) {
HXDLIN(  15)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN(  15)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN(  15)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_ax,return )

Float FloatColorTrianglesUV_Impl__obj::set_ax( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_17_set_ax)
HXLINE(  18)		{
HXLINE(  18)			if ((0 >= this1->length)) {
HXLINE(  18)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN(  18)			int p = this1->byteOffset;
HXDLIN(  18)			{
HXLINE(  18)				int i = ((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 2);
HXDLIN(  18)				{
HXLINE(  18)					bool _hx_tmp;
HXDLIN(  18)					if ((i >= 0)) {
HXLINE(  18)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE(  18)						_hx_tmp = true;
            					}
HXDLIN(  18)					if (_hx_tmp) {
HXLINE(  18)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN(  18)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN(  18)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE(  19)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_ax,return )

Float FloatColorTrianglesUV_Impl__obj::get_ay( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_23_get_ay)
HXDLIN(  23)		if ((0 >= this1->length)) {
HXDLIN(  23)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN(  23)		int p = this1->byteOffset;
HXDLIN(  23)		int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 1) + 2);
HXDLIN(  23)		bool _hx_tmp;
HXDLIN(  23)		if ((i >= 0)) {
HXDLIN(  23)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN(  23)			_hx_tmp = true;
            		}
HXDLIN(  23)		if (_hx_tmp) {
HXDLIN(  23)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN(  23)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN(  23)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_ay,return )

Float FloatColorTrianglesUV_Impl__obj::set_ay( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_25_set_ay)
HXLINE(  26)		{
HXLINE(  26)			if ((0 >= this1->length)) {
HXLINE(  26)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN(  26)			int p = this1->byteOffset;
HXDLIN(  26)			{
HXLINE(  26)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 1) + 2);
HXDLIN(  26)				{
HXLINE(  26)					bool _hx_tmp;
HXDLIN(  26)					if ((i >= 0)) {
HXLINE(  26)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE(  26)						_hx_tmp = true;
            					}
HXDLIN(  26)					if (_hx_tmp) {
HXLINE(  26)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN(  26)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN(  26)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE(  27)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_ay,return )

Float FloatColorTrianglesUV_Impl__obj::set_az( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_33_set_az)
HXLINE(  34)		{
HXLINE(  34)			if ((0 >= this1->length)) {
HXLINE(  34)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN(  34)			int p = this1->byteOffset;
HXDLIN(  34)			{
HXLINE(  34)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 2) + 2);
HXDLIN(  34)				{
HXLINE(  34)					bool _hx_tmp;
HXDLIN(  34)					if ((i >= 0)) {
HXLINE(  34)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE(  34)						_hx_tmp = true;
            					}
HXDLIN(  34)					if (_hx_tmp) {
HXLINE(  34)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN(  34)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN(  34)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE(  35)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_az,return )

Float FloatColorTrianglesUV_Impl__obj::get_bx( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_100_get_bx)
HXDLIN( 100)		if ((0 >= this1->length)) {
HXDLIN( 100)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 100)		int p = this1->byteOffset;
HXDLIN( 100)		int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 9) + 2);
HXDLIN( 100)		bool _hx_tmp;
HXDLIN( 100)		if ((i >= 0)) {
HXDLIN( 100)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN( 100)			_hx_tmp = true;
            		}
HXDLIN( 100)		if (_hx_tmp) {
HXDLIN( 100)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 100)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 100)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_bx,return )

Float FloatColorTrianglesUV_Impl__obj::set_bx( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_102_set_bx)
HXLINE( 103)		{
HXLINE( 103)			if ((0 >= this1->length)) {
HXLINE( 103)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 103)			int p = this1->byteOffset;
HXDLIN( 103)			{
HXLINE( 103)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 9) + 2);
HXDLIN( 103)				{
HXLINE( 103)					bool _hx_tmp;
HXDLIN( 103)					if ((i >= 0)) {
HXLINE( 103)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 103)						_hx_tmp = true;
            					}
HXDLIN( 103)					if (_hx_tmp) {
HXLINE( 103)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 103)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 103)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 104)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_bx,return )

Float FloatColorTrianglesUV_Impl__obj::get_by( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_108_get_by)
HXDLIN( 108)		if ((0 >= this1->length)) {
HXDLIN( 108)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 108)		int p = this1->byteOffset;
HXDLIN( 108)		int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 10) + 2);
HXDLIN( 108)		bool _hx_tmp;
HXDLIN( 108)		if ((i >= 0)) {
HXDLIN( 108)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN( 108)			_hx_tmp = true;
            		}
HXDLIN( 108)		if (_hx_tmp) {
HXDLIN( 108)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 108)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 108)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_by,return )

Float FloatColorTrianglesUV_Impl__obj::set_by( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_110_set_by)
HXLINE( 111)		{
HXLINE( 111)			if ((0 >= this1->length)) {
HXLINE( 111)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 111)			int p = this1->byteOffset;
HXDLIN( 111)			{
HXLINE( 111)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 10) + 2);
HXDLIN( 111)				{
HXLINE( 111)					bool _hx_tmp;
HXDLIN( 111)					if ((i >= 0)) {
HXLINE( 111)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 111)						_hx_tmp = true;
            					}
HXDLIN( 111)					if (_hx_tmp) {
HXLINE( 111)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 111)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 111)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 112)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_by,return )

Float FloatColorTrianglesUV_Impl__obj::set_bz( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_118_set_bz)
HXLINE( 119)		{
HXLINE( 119)			if ((0 >= this1->length)) {
HXLINE( 119)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 119)			int p = this1->byteOffset;
HXDLIN( 119)			{
HXLINE( 119)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 11) + 2);
HXDLIN( 119)				{
HXLINE( 119)					bool _hx_tmp;
HXDLIN( 119)					if ((i >= 0)) {
HXLINE( 119)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 119)						_hx_tmp = true;
            					}
HXDLIN( 119)					if (_hx_tmp) {
HXLINE( 119)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 119)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 119)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 120)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_bz,return )

Float FloatColorTrianglesUV_Impl__obj::get_cx( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_185_get_cx)
HXDLIN( 185)		if ((0 >= this1->length)) {
HXDLIN( 185)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 185)		int p = this1->byteOffset;
HXDLIN( 185)		int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 18) + 2);
HXDLIN( 185)		bool _hx_tmp;
HXDLIN( 185)		if ((i >= 0)) {
HXDLIN( 185)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN( 185)			_hx_tmp = true;
            		}
HXDLIN( 185)		if (_hx_tmp) {
HXDLIN( 185)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 185)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 185)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_cx,return )

Float FloatColorTrianglesUV_Impl__obj::set_cx( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_187_set_cx)
HXLINE( 188)		{
HXLINE( 188)			if ((0 >= this1->length)) {
HXLINE( 188)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 188)			int p = this1->byteOffset;
HXDLIN( 188)			{
HXLINE( 188)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 18) + 2);
HXDLIN( 188)				{
HXLINE( 188)					bool _hx_tmp;
HXDLIN( 188)					if ((i >= 0)) {
HXLINE( 188)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 188)						_hx_tmp = true;
            					}
HXDLIN( 188)					if (_hx_tmp) {
HXLINE( 188)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 188)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 188)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 189)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_cx,return )

Float FloatColorTrianglesUV_Impl__obj::get_cy( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_193_get_cy)
HXDLIN( 193)		if ((0 >= this1->length)) {
HXDLIN( 193)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 193)		int p = this1->byteOffset;
HXDLIN( 193)		int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 19) + 2);
HXDLIN( 193)		bool _hx_tmp;
HXDLIN( 193)		if ((i >= 0)) {
HXDLIN( 193)			_hx_tmp = (i >= this1->length);
            		}
            		else {
HXDLIN( 193)			_hx_tmp = true;
            		}
HXDLIN( 193)		if (_hx_tmp) {
HXDLIN( 193)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXDLIN( 193)		int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 193)		return ( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,get_cy,return )

Float FloatColorTrianglesUV_Impl__obj::set_cy( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_195_set_cy)
HXLINE( 196)		{
HXLINE( 196)			if ((0 >= this1->length)) {
HXLINE( 196)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 196)			int p = this1->byteOffset;
HXDLIN( 196)			{
HXLINE( 196)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 19) + 2);
HXDLIN( 196)				{
HXLINE( 196)					bool _hx_tmp;
HXDLIN( 196)					if ((i >= 0)) {
HXLINE( 196)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 196)						_hx_tmp = true;
            					}
HXDLIN( 196)					if (_hx_tmp) {
HXLINE( 196)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 196)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 196)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 197)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_cy,return )

Float FloatColorTrianglesUV_Impl__obj::set_cz( ::typedarray::Float32ArrayImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_203_set_cz)
HXLINE( 204)		{
HXLINE( 204)			if ((0 >= this1->length)) {
HXLINE( 204)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 204)			int p = this1->byteOffset;
HXDLIN( 204)			{
HXLINE( 204)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 20) + 2);
HXDLIN( 204)				{
HXLINE( 204)					bool _hx_tmp;
HXDLIN( 204)					if ((i >= 0)) {
HXLINE( 204)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 204)						_hx_tmp = true;
            					}
HXDLIN( 204)					if (_hx_tmp) {
HXLINE( 204)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 204)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 204)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,v);
            				}
            			}
            		}
HXLINE( 205)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTrianglesUV_Impl__obj,set_cz,return )

bool FloatColorTrianglesUV_Impl__obj::triangle( ::typedarray::Float32ArrayImpl this1,Float ax_,Float ay_,Float az_,Float bx_,Float by_,Float bz_,Float cx_,Float cy_,Float cz_){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_271_triangle)
HXLINE( 272)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_ax(this1,ax_);
HXLINE( 273)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_ay(this1,ay_);
HXLINE( 274)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_az(this1,az_);
HXLINE( 275)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_bx(this1,bx_);
HXLINE( 276)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_by(this1,by_);
HXLINE( 277)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_bz(this1,bz_);
HXLINE( 278)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_cx(this1,cx_);
HXLINE( 279)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_cy(this1,cy_);
HXLINE( 280)		::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_cz(this1,cz_);
HXLINE( 282)		bool windingAdjusted = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::adjustWinding(this1);
HXLINE( 283)		if (windingAdjusted) {
HXLINE( 286)			::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_bx(this1,cx_);
HXLINE( 287)			::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_by(this1,cy_);
HXLINE( 288)			::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_cx(this1,bx_);
HXLINE( 289)			::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::set_cy(this1,by_);
            		}
HXLINE( 291)		return windingAdjusted;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(FloatColorTrianglesUV_Impl__obj,triangle,return )

bool FloatColorTrianglesUV_Impl__obj::triangleUV( ::typedarray::Float32ArrayImpl this1,Float uA_,Float vA_,Float uB_,Float vB_,Float uC_,Float vC_, ::Dynamic windAdjust_){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_297_triangleUV)
HXLINE( 298)		bool windAdjust;
HXDLIN( 298)		if (::hx::IsNull( windAdjust_ )) {
HXLINE( 298)			windAdjust = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::adjustWinding(this1);
            		}
            		else {
HXLINE( 298)			windAdjust = ( (bool)(windAdjust_) );
            		}
HXLINE( 299)		{
HXLINE( 299)			if ((0 >= this1->length)) {
HXLINE( 299)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 299)			int p = this1->byteOffset;
HXDLIN( 299)			{
HXLINE( 299)				int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 7) + 2);
HXDLIN( 299)				{
HXLINE( 299)					bool _hx_tmp;
HXDLIN( 299)					if ((i >= 0)) {
HXLINE( 299)						_hx_tmp = (i >= this1->length);
            					}
            					else {
HXLINE( 299)						_hx_tmp = true;
            					}
HXDLIN( 299)					if (_hx_tmp) {
HXLINE( 299)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 299)					int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 299)					 ::__hxcpp_memory_set_float(this1->buffer->b,p1,uA_);
            				}
            			}
            		}
HXLINE( 300)		{
HXLINE( 300)			if ((0 >= this1->length)) {
HXLINE( 300)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            			}
HXDLIN( 300)			int p2 = this1->byteOffset;
HXDLIN( 300)			{
HXLINE( 300)				int i1 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p2)) )) * 27) + 8) + 2);
HXDLIN( 300)				{
HXLINE( 300)					bool _hx_tmp1;
HXDLIN( 300)					if ((i1 >= 0)) {
HXLINE( 300)						_hx_tmp1 = (i1 >= this1->length);
            					}
            					else {
HXLINE( 300)						_hx_tmp1 = true;
            					}
HXDLIN( 300)					if (_hx_tmp1) {
HXLINE( 300)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            					}
HXDLIN( 300)					int p3 = ((i1 * 4) + this1->byteOffset);
HXDLIN( 300)					 ::__hxcpp_memory_set_float(this1->buffer->b,p3,vA_);
            				}
            			}
            		}
HXLINE( 301)		if (windAdjust) {
HXLINE( 302)			{
HXLINE( 302)				if ((0 >= this1->length)) {
HXLINE( 302)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 302)				int p = this1->byteOffset;
HXDLIN( 302)				{
HXLINE( 302)					int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 16) + 2);
HXDLIN( 302)					{
HXLINE( 302)						bool _hx_tmp;
HXDLIN( 302)						if ((i >= 0)) {
HXLINE( 302)							_hx_tmp = (i >= this1->length);
            						}
            						else {
HXLINE( 302)							_hx_tmp = true;
            						}
HXDLIN( 302)						if (_hx_tmp) {
HXLINE( 302)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 302)						int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 302)						 ::__hxcpp_memory_set_float(this1->buffer->b,p1,uC_);
            					}
            				}
            			}
HXLINE( 303)			{
HXLINE( 303)				if ((0 >= this1->length)) {
HXLINE( 303)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 303)				int p2 = this1->byteOffset;
HXDLIN( 303)				{
HXLINE( 303)					int i1 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p2)) )) * 27) + 17) + 2);
HXDLIN( 303)					{
HXLINE( 303)						bool _hx_tmp1;
HXDLIN( 303)						if ((i1 >= 0)) {
HXLINE( 303)							_hx_tmp1 = (i1 >= this1->length);
            						}
            						else {
HXLINE( 303)							_hx_tmp1 = true;
            						}
HXDLIN( 303)						if (_hx_tmp1) {
HXLINE( 303)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 303)						int p3 = ((i1 * 4) + this1->byteOffset);
HXDLIN( 303)						 ::__hxcpp_memory_set_float(this1->buffer->b,p3,vC_);
            					}
            				}
            			}
HXLINE( 304)			{
HXLINE( 304)				if ((0 >= this1->length)) {
HXLINE( 304)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 304)				int p4 = this1->byteOffset;
HXDLIN( 304)				{
HXLINE( 304)					int i2 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p4)) )) * 27) + 25) + 2);
HXDLIN( 304)					{
HXLINE( 304)						bool _hx_tmp2;
HXDLIN( 304)						if ((i2 >= 0)) {
HXLINE( 304)							_hx_tmp2 = (i2 >= this1->length);
            						}
            						else {
HXLINE( 304)							_hx_tmp2 = true;
            						}
HXDLIN( 304)						if (_hx_tmp2) {
HXLINE( 304)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 304)						int p5 = ((i2 * 4) + this1->byteOffset);
HXDLIN( 304)						 ::__hxcpp_memory_set_float(this1->buffer->b,p5,uB_);
            					}
            				}
            			}
HXLINE( 305)			{
HXLINE( 305)				if ((0 >= this1->length)) {
HXLINE( 305)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 305)				int p6 = this1->byteOffset;
HXDLIN( 305)				{
HXLINE( 305)					int i3 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p6)) )) * 27) + 26) + 2);
HXDLIN( 305)					{
HXLINE( 305)						bool _hx_tmp3;
HXDLIN( 305)						if ((i3 >= 0)) {
HXLINE( 305)							_hx_tmp3 = (i3 >= this1->length);
            						}
            						else {
HXLINE( 305)							_hx_tmp3 = true;
            						}
HXDLIN( 305)						if (_hx_tmp3) {
HXLINE( 305)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 305)						int p7 = ((i3 * 4) + this1->byteOffset);
HXDLIN( 305)						 ::__hxcpp_memory_set_float(this1->buffer->b,p7,vB_);
            					}
            				}
            			}
            		}
            		else {
HXLINE( 307)			{
HXLINE( 307)				if ((0 >= this1->length)) {
HXLINE( 307)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 307)				int p = this1->byteOffset;
HXDLIN( 307)				{
HXLINE( 307)					int i = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p)) )) * 27) + 16) + 2);
HXDLIN( 307)					{
HXLINE( 307)						bool _hx_tmp;
HXDLIN( 307)						if ((i >= 0)) {
HXLINE( 307)							_hx_tmp = (i >= this1->length);
            						}
            						else {
HXLINE( 307)							_hx_tmp = true;
            						}
HXDLIN( 307)						if (_hx_tmp) {
HXLINE( 307)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 307)						int p1 = ((i * 4) + this1->byteOffset);
HXDLIN( 307)						 ::__hxcpp_memory_set_float(this1->buffer->b,p1,uB_);
            					}
            				}
            			}
HXLINE( 308)			{
HXLINE( 308)				if ((0 >= this1->length)) {
HXLINE( 308)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 308)				int p2 = this1->byteOffset;
HXDLIN( 308)				{
HXLINE( 308)					int i1 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p2)) )) * 27) + 17) + 2);
HXDLIN( 308)					{
HXLINE( 308)						bool _hx_tmp1;
HXDLIN( 308)						if ((i1 >= 0)) {
HXLINE( 308)							_hx_tmp1 = (i1 >= this1->length);
            						}
            						else {
HXLINE( 308)							_hx_tmp1 = true;
            						}
HXDLIN( 308)						if (_hx_tmp1) {
HXLINE( 308)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 308)						int p3 = ((i1 * 4) + this1->byteOffset);
HXDLIN( 308)						 ::__hxcpp_memory_set_float(this1->buffer->b,p3,vB_);
            					}
            				}
            			}
HXLINE( 309)			{
HXLINE( 309)				if ((0 >= this1->length)) {
HXLINE( 309)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 309)				int p4 = this1->byteOffset;
HXDLIN( 309)				{
HXLINE( 309)					int i2 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p4)) )) * 27) + 25) + 2);
HXDLIN( 309)					{
HXLINE( 309)						bool _hx_tmp2;
HXDLIN( 309)						if ((i2 >= 0)) {
HXLINE( 309)							_hx_tmp2 = (i2 >= this1->length);
            						}
            						else {
HXLINE( 309)							_hx_tmp2 = true;
            						}
HXDLIN( 309)						if (_hx_tmp2) {
HXLINE( 309)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 309)						int p5 = ((i2 * 4) + this1->byteOffset);
HXDLIN( 309)						 ::__hxcpp_memory_set_float(this1->buffer->b,p5,uC_);
            					}
            				}
            			}
HXLINE( 310)			{
HXLINE( 310)				if ((0 >= this1->length)) {
HXLINE( 310)					HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            				}
HXDLIN( 310)				int p6 = this1->byteOffset;
HXDLIN( 310)				{
HXLINE( 310)					int i3 = (((::Std_obj::_hx_int(( (Float)( ::__hxcpp_memory_get_float(this1->buffer->b,p6)) )) * 27) + 26) + 2);
HXDLIN( 310)					{
HXLINE( 310)						bool _hx_tmp3;
HXDLIN( 310)						if ((i3 >= 0)) {
HXLINE( 310)							_hx_tmp3 = (i3 >= this1->length);
            						}
            						else {
HXLINE( 310)							_hx_tmp3 = true;
            						}
HXDLIN( 310)						if (_hx_tmp3) {
HXLINE( 310)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            						}
HXDLIN( 310)						int p7 = ((i3 * 4) + this1->byteOffset);
HXDLIN( 310)						 ::__hxcpp_memory_set_float(this1->buffer->b,p7,vC_);
            					}
            				}
            			}
            		}
HXLINE( 312)		return windAdjust;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(FloatColorTrianglesUV_Impl__obj,triangleUV,return )

bool FloatColorTrianglesUV_Impl__obj::adjustWinding( ::typedarray::Float32ArrayImpl this1){
            	HX_STACKFRAME(&_hx_pos_ce0e8811cc2217c8_315_adjustWinding)
HXDLIN( 315)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_ax(this1);
HXDLIN( 315)		Float _hx_tmp1 = (_hx_tmp * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_by(this1));
HXDLIN( 315)		Float _hx_tmp2 = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_bx(this1);
HXDLIN( 315)		Float _hx_tmp3 = (_hx_tmp1 - (_hx_tmp2 * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_ay(this1)));
HXDLIN( 315)		Float _hx_tmp4 = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_bx(this1);
HXDLIN( 315)		Float _hx_tmp5 = (_hx_tmp4 * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_cy(this1));
HXDLIN( 315)		Float _hx_tmp6 = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_cx(this1);
HXDLIN( 315)		Float _hx_tmp7 = (_hx_tmp3 + (_hx_tmp5 - (_hx_tmp6 * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_by(this1))));
HXDLIN( 315)		Float _hx_tmp8 = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_cx(this1);
HXDLIN( 315)		Float _hx_tmp9 = (_hx_tmp8 * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_ay(this1));
HXDLIN( 315)		Float _hx_tmp10 = ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_ax(this1);
HXDLIN( 315)		return ((_hx_tmp7 + (_hx_tmp9 - (_hx_tmp10 * ::dsHelper::flatInterleave::_FloatColorTrianglesUV::FloatColorTrianglesUV_Impl__obj::get_cy(this1)))) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTrianglesUV_Impl__obj,adjustWinding,return )


FloatColorTrianglesUV_Impl__obj::FloatColorTrianglesUV_Impl__obj()
{
}

bool FloatColorTrianglesUV_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"get_ax") ) { outValue = get_ax_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_ax") ) { outValue = set_ax_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_ay") ) { outValue = get_ay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_ay") ) { outValue = set_ay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_az") ) { outValue = set_az_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bx") ) { outValue = get_bx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_bx") ) { outValue = set_bx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_by") ) { outValue = get_by_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_by") ) { outValue = set_by_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_bz") ) { outValue = set_bz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cx") ) { outValue = get_cx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cx") ) { outValue = set_cx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cy") ) { outValue = get_cy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cy") ) { outValue = set_cy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cz") ) { outValue = set_cz_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"triangle") ) { outValue = triangle_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"triangleUV") ) { outValue = triangleUV_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"adjustWinding") ) { outValue = adjustWinding_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FloatColorTrianglesUV_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FloatColorTrianglesUV_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class FloatColorTrianglesUV_Impl__obj::__mClass;

static ::String FloatColorTrianglesUV_Impl__obj_sStaticFields[] = {
	HX_("get_ax",40,ec,2f,a3),
	HX_("set_ax",b4,40,78,6f),
	HX_("get_ay",41,ec,2f,a3),
	HX_("set_ay",b5,40,78,6f),
	HX_("set_az",b6,40,78,6f),
	HX_("get_bx",1f,ed,2f,a3),
	HX_("set_bx",93,41,78,6f),
	HX_("get_by",20,ed,2f,a3),
	HX_("set_by",94,41,78,6f),
	HX_("set_bz",95,41,78,6f),
	HX_("get_cx",fe,ed,2f,a3),
	HX_("set_cx",72,42,78,6f),
	HX_("get_cy",ff,ed,2f,a3),
	HX_("set_cy",73,42,78,6f),
	HX_("set_cz",74,42,78,6f),
	HX_("triangle",c8,be,c5,8d),
	HX_("triangleUV",29,4b,c9,d9),
	HX_("adjustWinding",4b,e4,e6,bd),
	::String(null())
};

void FloatColorTrianglesUV_Impl__obj::__register()
{
	FloatColorTrianglesUV_Impl__obj _hx_dummy;
	FloatColorTrianglesUV_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("dsHelper.flatInterleave._FloatColorTrianglesUV.FloatColorTrianglesUV_Impl_",26,bf,af,17);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FloatColorTrianglesUV_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FloatColorTrianglesUV_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FloatColorTrianglesUV_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FloatColorTrianglesUV_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FloatColorTrianglesUV_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace dsHelper
} // end namespace flatInterleave
} // end namespace _FloatColorTrianglesUV
