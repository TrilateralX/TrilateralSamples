// Generated by Haxe 4.3.0-rc.1+88ebbd0
#include <hxcpp.h>

#ifndef INCLUDED_6a37b2496ecd24d2
#define INCLUDED_6a37b2496ecd24d2
#include "/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/ES2Context.h"
#endif
#ifndef INCLUDED_gluon_webgl_native_GLContext
#include <gluon/webgl/native/GLContext.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLObject
#include <gluon/webgl/native/GLObject.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLShader
#include <gluon/webgl/native/GLShader.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_28d246f2e9306616_4_new,"gluon.webgl.native.GLShader","new",0xc21b65bf,"gluon.webgl.native.GLShader.new","gluon/webgl/native/GLShader.hx",4,0xedf89372)
HX_LOCAL_STACK_FRAME(_hx_pos_28d246f2e9306616_7_finalize,"gluon.webgl.native.GLShader","finalize",0x8abdd7df,"gluon.webgl.native.GLShader.finalize","gluon/webgl/native/GLShader.hx",7,0xedf89372)
namespace gluon{
namespace webgl{
namespace native{

void GLShader_obj::__construct( ::gluon::webgl::native::GLContext context,unsigned int handle){
            	HX_STACKFRAME(&_hx_pos_28d246f2e9306616_4_new)
HXDLIN(   4)		super::__construct(context,handle);
            	}

Dynamic GLShader_obj::__CreateEmpty() { return new GLShader_obj; }

void *GLShader_obj::_hx_vtable = 0;

Dynamic GLShader_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GLShader_obj > _hx_result = new GLShader_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool GLShader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x6d90cfad) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x6d90cfad;
	} else {
		return inClassId==(int)0x75721013;
	}
}

void GLShader_obj::finalize(){
            	HX_STACKFRAME(&_hx_pos_28d246f2e9306616_7_finalize)
HXLINE(   8)		{
HXLINE(   8)			 ::gluon::webgl::native::GLContext _this = this->context;
HXDLIN(   8)			{
HXLINE(   8)				if ((this->handle != 0)) {
HXLINE(   8)					glDeleteShader(this->handle);
            				}
HXDLIN(   8)				this->handle = ( (unsigned int)(0) );
            			}
            		}
HXLINE(   9)		this->handle = ( (unsigned int)(0) );
            	}



::hx::ObjectPtr< GLShader_obj > GLShader_obj::__new( ::gluon::webgl::native::GLContext context,unsigned int handle) {
	::hx::ObjectPtr< GLShader_obj > __this = new GLShader_obj();
	__this->__construct(context,handle);
	return __this;
}

::hx::ObjectPtr< GLShader_obj > GLShader_obj::__alloc(::hx::Ctx *_hx_ctx, ::gluon::webgl::native::GLContext context,unsigned int handle) {
	GLShader_obj *__this = (GLShader_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GLShader_obj), true, "gluon.webgl.native.GLShader"));
	*(void **)__this = GLShader_obj::_hx_vtable;
	__this->__construct(context,handle);
	return __this;
}

GLShader_obj::GLShader_obj()
{
}

::hx::Val GLShader_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"finalize") ) { return ::hx::Val( finalize_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GLShader_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *GLShader_obj_sStaticStorageInfo = 0;
#endif

static ::String GLShader_obj_sMemberFields[] = {
	HX_("finalize",9e,45,3a,f5),
	::String(null()) };

::hx::Class GLShader_obj::__mClass;

void GLShader_obj::__register()
{
	GLShader_obj _hx_dummy;
	GLShader_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gluon.webgl.native.GLShader",4d,1a,70,ea);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GLShader_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GLShader_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GLShader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GLShader_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gluon
} // end namespace webgl
} // end namespace native
