// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_hxGeomAlgo_ResultType
#include <hxGeomAlgo/ResultType.h>
#endif
namespace hxGeomAlgo{

::hxGeomAlgo::ResultType ResultType_obj::BOUNDARY_CONTOURS;

::hxGeomAlgo::ResultType ResultType_obj::CONNECTED_POLYGONS;

::hxGeomAlgo::ResultType ResultType_obj::EXPERIMENTAL_DELAUNAY;

::hxGeomAlgo::ResultType ResultType_obj::POLYGONS;

bool ResultType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOUNDARY_CONTOURS",8e,76,d3,33)) { outValue = ResultType_obj::BOUNDARY_CONTOURS; return true; }
	if (inName==HX_("CONNECTED_POLYGONS",4f,40,cc,38)) { outValue = ResultType_obj::CONNECTED_POLYGONS; return true; }
	if (inName==HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e)) { outValue = ResultType_obj::EXPERIMENTAL_DELAUNAY; return true; }
	if (inName==HX_("POLYGONS",b9,b8,d6,85)) { outValue = ResultType_obj::POLYGONS; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ResultType_obj)

int ResultType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BOUNDARY_CONTOURS",8e,76,d3,33)) return 2;
	if (inName==HX_("CONNECTED_POLYGONS",4f,40,cc,38)) return 1;
	if (inName==HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e)) return 3;
	if (inName==HX_("POLYGONS",b9,b8,d6,85)) return 0;
	return super::__FindIndex(inName);
}

int ResultType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BOUNDARY_CONTOURS",8e,76,d3,33)) return 0;
	if (inName==HX_("CONNECTED_POLYGONS",4f,40,cc,38)) return 0;
	if (inName==HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e)) return 0;
	if (inName==HX_("POLYGONS",b9,b8,d6,85)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val ResultType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOUNDARY_CONTOURS",8e,76,d3,33)) return BOUNDARY_CONTOURS;
	if (inName==HX_("CONNECTED_POLYGONS",4f,40,cc,38)) return CONNECTED_POLYGONS;
	if (inName==HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e)) return EXPERIMENTAL_DELAUNAY;
	if (inName==HX_("POLYGONS",b9,b8,d6,85)) return POLYGONS;
	return super::__Field(inName,inCallProp);
}

static ::String ResultType_obj_sStaticFields[] = {
	HX_("POLYGONS",b9,b8,d6,85),
	HX_("CONNECTED_POLYGONS",4f,40,cc,38),
	HX_("BOUNDARY_CONTOURS",8e,76,d3,33),
	HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e),
	::String(null())
};

::hx::Class ResultType_obj::__mClass;

Dynamic __Create_ResultType_obj() { return new ResultType_obj; }

void ResultType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("hxGeomAlgo.ResultType",86,02,7d,d0), ::hx::TCanCast< ResultType_obj >,ResultType_obj_sStaticFields,0,
	&__Create_ResultType_obj, &__Create,
	&super::__SGetClass(), &CreateResultType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ResultType_obj::__GetStatic;
}

void ResultType_obj::__boot()
{
BOUNDARY_CONTOURS = ::hx::CreateConstEnum< ResultType_obj >(HX_("BOUNDARY_CONTOURS",8e,76,d3,33),2);
CONNECTED_POLYGONS = ::hx::CreateConstEnum< ResultType_obj >(HX_("CONNECTED_POLYGONS",4f,40,cc,38),1);
EXPERIMENTAL_DELAUNAY = ::hx::CreateConstEnum< ResultType_obj >(HX_("EXPERIMENTAL_DELAUNAY",fe,6e,f2,7e),3);
POLYGONS = ::hx::CreateConstEnum< ResultType_obj >(HX_("POLYGONS",b9,b8,d6,85),0);
}


} // end namespace hxGeomAlgo
