// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_hxGeomAlgo__Tess2_PQHandleElem
#include <hxGeomAlgo/_Tess2/PQHandleElem.h>
#endif
#ifndef INCLUDED_hxGeomAlgo__Tess2_TessVertex
#include <hxGeomAlgo/_Tess2/TessVertex.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e83f529d160463ec_1533_new,"hxGeomAlgo._Tess2.PQHandleElem","new",0x2967e127,"hxGeomAlgo._Tess2.PQHandleElem.new","hxGeomAlgo/Tess2.hx",1533,0xf73e622d)
namespace hxGeomAlgo{
namespace _Tess2{

void PQHandleElem_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_e83f529d160463ec_1533_new)
HXLINE(1536)		this->node = -1;
HXLINE(1535)		this->key = null();
            	}

Dynamic PQHandleElem_obj::__CreateEmpty() { return new PQHandleElem_obj; }

void *PQHandleElem_obj::_hx_vtable = 0;

Dynamic PQHandleElem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PQHandleElem_obj > _hx_result = new PQHandleElem_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PQHandleElem_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x47c34679;
}


::hx::ObjectPtr< PQHandleElem_obj > PQHandleElem_obj::__new() {
	::hx::ObjectPtr< PQHandleElem_obj > __this = new PQHandleElem_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PQHandleElem_obj > PQHandleElem_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PQHandleElem_obj *__this = (PQHandleElem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PQHandleElem_obj), true, "hxGeomAlgo._Tess2.PQHandleElem"));
	*(void **)__this = PQHandleElem_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PQHandleElem_obj::PQHandleElem_obj()
{
}

void PQHandleElem_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PQHandleElem);
	HX_MARK_MEMBER_NAME(key,"key");
	HX_MARK_MEMBER_NAME(node,"node");
	HX_MARK_END_CLASS();
}

void PQHandleElem_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(key,"key");
	HX_VISIT_MEMBER_NAME(node,"node");
}

::hx::Val PQHandleElem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"key") ) { return ::hx::Val( key ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"node") ) { return ::hx::Val( node ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PQHandleElem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"key") ) { key=inValue.Cast<  ::hxGeomAlgo::_Tess2::TessVertex >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"node") ) { node=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PQHandleElem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("key",9f,89,51,00));
	outFields->push(HX_("node",02,0a,0a,49));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PQHandleElem_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::hxGeomAlgo::_Tess2::TessVertex */ ,(int)offsetof(PQHandleElem_obj,key),HX_("key",9f,89,51,00)},
	{::hx::fsInt,(int)offsetof(PQHandleElem_obj,node),HX_("node",02,0a,0a,49)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PQHandleElem_obj_sStaticStorageInfo = 0;
#endif

static ::String PQHandleElem_obj_sMemberFields[] = {
	HX_("key",9f,89,51,00),
	HX_("node",02,0a,0a,49),
	::String(null()) };

::hx::Class PQHandleElem_obj::__mClass;

void PQHandleElem_obj::__register()
{
	PQHandleElem_obj _hx_dummy;
	PQHandleElem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxGeomAlgo._Tess2.PQHandleElem",b5,c1,30,25);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PQHandleElem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PQHandleElem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PQHandleElem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PQHandleElem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxGeomAlgo
} // end namespace _Tess2
