// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_trilateral3_matrix_UV
#include <trilateral3/matrix/UV.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_707d577000d0e738_42_new,"trilateral3.matrix.UV","new",0xf5e9d1b9,"trilateral3.matrix.UV.new","trilateral3/matrix/UV.hx",42,0x798d61b7)
namespace trilateral3{
namespace matrix{

void UV_obj::__construct(Float u,Float v){
            	HX_STACKFRAME(&_hx_pos_707d577000d0e738_42_new)
HXLINE(  44)		this->v = ((Float)0.);
HXLINE(  43)		this->u = ((Float)0.);
HXLINE(  46)		this->u = u;
HXLINE(  47)		this->v = v;
            	}

Dynamic UV_obj::__CreateEmpty() { return new UV_obj; }

void *UV_obj::_hx_vtable = 0;

Dynamic UV_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< UV_obj > _hx_result = new UV_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool UV_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3c060785;
}


UV_obj::UV_obj()
{
}

::hx::Val UV_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"u") ) { return ::hx::Val( u ); }
		if (HX_FIELD_EQ(inName,"v") ) { return ::hx::Val( v ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val UV_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"u") ) { u=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"v") ) { v=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void UV_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("u",75,00,00,00));
	outFields->push(HX_("v",76,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo UV_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(UV_obj,u),HX_("u",75,00,00,00)},
	{::hx::fsFloat,(int)offsetof(UV_obj,v),HX_("v",76,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *UV_obj_sStaticStorageInfo = 0;
#endif

static ::String UV_obj_sMemberFields[] = {
	HX_("u",75,00,00,00),
	HX_("v",76,00,00,00),
	::String(null()) };

::hx::Class UV_obj::__mClass;

void UV_obj::__register()
{
	UV_obj _hx_dummy;
	UV_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("trilateral3.matrix.UV",47,81,e6,59);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(UV_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< UV_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = UV_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = UV_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace trilateral3
} // end namespace matrix
