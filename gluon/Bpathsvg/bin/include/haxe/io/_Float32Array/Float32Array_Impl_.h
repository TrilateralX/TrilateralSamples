// Generated by Haxe 4.2.0-rc.1+3ef20749a
#ifndef INCLUDED_haxe_io__Float32Array_Float32Array_Impl_
#define INCLUDED_haxe_io__Float32Array_Float32Array_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,ArrayBufferViewImpl)
HX_DECLARE_CLASS3(haxe,io,_Float32Array,Float32Array_Impl_)

namespace haxe{
namespace io{
namespace _Float32Array{


class HXCPP_CLASS_ATTRIBUTES Float32Array_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Float32Array_Impl__obj OBJ_;
		Float32Array_Impl__obj();

	public:
		enum { _hx_ClassId = 0x199cdb8b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.io._Float32Array.Float32Array_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe.io._Float32Array.Float32Array_Impl_"); }

		inline static ::hx::ObjectPtr< Float32Array_Impl__obj > __new() {
			::hx::ObjectPtr< Float32Array_Impl__obj > __this = new Float32Array_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Float32Array_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Float32Array_Impl__obj *__this = (Float32Array_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Float32Array_Impl__obj), false, "haxe.io._Float32Array.Float32Array_Impl_"));
			*(void **)__this = Float32Array_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Float32Array_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Float32Array_Impl_",9e,71,1e,f4); }

		static  ::haxe::io::ArrayBufferViewImpl fromData( ::haxe::io::ArrayBufferViewImpl d);
		static ::Dynamic fromData_dyn();

};

} // end namespace haxe
} // end namespace io
} // end namespace _Float32Array

#endif /* INCLUDED_haxe_io__Float32Array_Float32Array_Impl_ */ 
