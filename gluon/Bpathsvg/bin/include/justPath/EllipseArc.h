// Generated by Haxe 4.2.0-rc.1+3ef20749a
#ifndef INCLUDED_justPath_EllipseArc
#define INCLUDED_justPath_EllipseArc

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(justPath,EllipseArc)

namespace justPath{


class HXCPP_CLASS_ATTRIBUTES EllipseArc_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef EllipseArc_obj OBJ_;
		EllipseArc_obj();

	public:
		enum { _hx_ClassId = 0x062e2e19 };

		void __construct( ::Dynamic arc_);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="justPath.EllipseArc")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"justPath.EllipseArc"); }
		static ::hx::ObjectPtr< EllipseArc_obj > __new( ::Dynamic arc_);
		static ::hx::ObjectPtr< EllipseArc_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic arc_);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EllipseArc_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EllipseArc",34,d8,81,43); }

		 ::Dynamic arc;
		Float x;
		Float y;
		void lineRender( ::Dynamic moveTo, ::Dynamic lineTo,Float dA, ::Dynamic renderFirst);
		::Dynamic lineRender_dyn();

};

} // end namespace justPath

#endif /* INCLUDED_justPath_EllipseArc */ 
