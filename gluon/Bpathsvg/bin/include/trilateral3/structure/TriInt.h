// Generated by Haxe 4.2.0-rc.1+3ef20749a
#ifndef INCLUDED_trilateral3_structure_TriInt
#define INCLUDED_trilateral3_structure_TriInt

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(trilateral3,structure,TriInt)

namespace trilateral3{
namespace structure{


class HXCPP_CLASS_ATTRIBUTES TriInt_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TriInt_obj OBJ_;
		TriInt_obj();

	public:
		enum { _hx_ClassId = 0x2b1fa8f0 };

		void __construct(int a,int b,int c);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.structure.TriInt")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.structure.TriInt"); }

		inline static ::hx::ObjectPtr< TriInt_obj > __new(int a,int b,int c) {
			::hx::ObjectPtr< TriInt_obj > __this = new TriInt_obj();
			__this->__construct(a,b,c);
			return __this;
		}

		inline static ::hx::ObjectPtr< TriInt_obj > __alloc(::hx::Ctx *_hx_ctx,int a,int b,int c) {
			TriInt_obj *__this = (TriInt_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TriInt_obj), false, "trilateral3.structure.TriInt"));
			*(void **)__this = TriInt_obj::_hx_vtable;
{
	( ( ::trilateral3::structure::TriInt)(__this) )->a = a;
	( ( ::trilateral3::structure::TriInt)(__this) )->b = b;
	( ( ::trilateral3::structure::TriInt)(__this) )->c = c;
}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TriInt_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TriInt",a4,9c,47,7f); }

		int a;
		int b;
		int c;
};

} // end namespace trilateral3
} // end namespace structure

#endif /* INCLUDED_trilateral3_structure_TriInt */ 
