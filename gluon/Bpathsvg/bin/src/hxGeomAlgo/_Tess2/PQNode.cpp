// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_hxGeomAlgo__Tess2_PQNode
#include <hxGeomAlgo/_Tess2/PQNode.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d8d78959518acbed_1528_new,"hxGeomAlgo._Tess2.PQNode","new",0xa26765d2,"hxGeomAlgo._Tess2.PQNode.new","hxGeomAlgo/Tess2.hx",1528,0xf73e622d)
namespace hxGeomAlgo{
namespace _Tess2{

void PQNode_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d8d78959518acbed_1528_new)
HXDLIN(1528)		this->handle = -1;
            	}

Dynamic PQNode_obj::__CreateEmpty() { return new PQNode_obj; }

void *PQNode_obj::_hx_vtable = 0;

Dynamic PQNode_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PQNode_obj > _hx_result = new PQNode_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PQNode_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x25c5bd08;
}


PQNode_obj::PQNode_obj()
{
}

::hx::Val PQNode_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return ::hx::Val( handle ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PQNode_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PQNode_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("handle",a8,83,fd,b7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PQNode_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(PQNode_obj,handle),HX_("handle",a8,83,fd,b7)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PQNode_obj_sStaticStorageInfo = 0;
#endif

static ::String PQNode_obj_sMemberFields[] = {
	HX_("handle",a8,83,fd,b7),
	::String(null()) };

::hx::Class PQNode_obj::__mClass;

void PQNode_obj::__register()
{
	PQNode_obj _hx_dummy;
	PQNode_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxGeomAlgo._Tess2.PQNode",e0,d4,6f,b3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PQNode_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PQNode_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PQNode_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PQNode_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxGeomAlgo
} // end namespace _Tess2
