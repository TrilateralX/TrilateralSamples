// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_gluon_webgl_native_GLShader
#define INCLUDED_gluon_webgl_native_GLShader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_gluon_webgl_native_GLObject
#include <gluon/webgl/native/GLObject.h>
#endif
HX_DECLARE_CLASS3(gluon,webgl,native,GLContext)
HX_DECLARE_CLASS3(gluon,webgl,native,GLObject)
HX_DECLARE_CLASS3(gluon,webgl,native,GLShader)

namespace gluon{
namespace webgl{
namespace native{


class HXCPP_CLASS_ATTRIBUTES GLShader_obj : public  ::gluon::webgl::native::GLObject_obj
{
	public:
		typedef  ::gluon::webgl::native::GLObject_obj super;
		typedef GLShader_obj OBJ_;
		GLShader_obj();

	public:
		enum { _hx_ClassId = 0x75721013 };

		void __construct( ::gluon::webgl::native::GLContext context,unsigned int handle);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="gluon.webgl.native.GLShader")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"gluon.webgl.native.GLShader"); }
		static ::hx::ObjectPtr< GLShader_obj > __new( ::gluon::webgl::native::GLContext context,unsigned int handle);
		static ::hx::ObjectPtr< GLShader_obj > __alloc(::hx::Ctx *_hx_ctx, ::gluon::webgl::native::GLContext context,unsigned int handle);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GLShader_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GLShader",2a,1b,12,87); }

		void finalize();

};

} // end namespace gluon
} // end namespace webgl
} // end namespace native

#endif /* INCLUDED_gluon_webgl_native_GLShader */ 
