// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_TrilateralEllipse
#include <TrilateralEllipse.h>
#endif
#ifndef INCLUDED_gluon_webgl_native_GLContext
#include <gluon/webgl/native/GLContext.h>
#endif
#ifndef INCLUDED_justPath_IPathContext
#include <justPath/IPathContext.h>
#endif
#ifndef INCLUDED_justPath_SvgPath
#include <justPath/SvgPath.h>
#endif
#ifndef INCLUDED_justPath_transform_ScaleTranslateContext
#include <justPath/transform/ScaleTranslateContext.h>
#endif
#ifndef INCLUDED_kitGL_gluon_InterleaveAlterGL
#include <kitGL/gluon/InterleaveAlterGL.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Pen
#include <trilateral3/drawing/Pen.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Sketch
#include <trilateral3/drawing/Sketch.h>
#endif
#ifndef INCLUDED_trilateral3_nodule_PenNodule
#include <trilateral3/nodule/PenNodule.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferView
#include <typedarray/ArrayBufferView.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewBase
#include <typedarray/ArrayBufferViewBase.h>
#endif
#ifndef INCLUDED_typedarray_Float32ArrayImpl
#include <typedarray/Float32ArrayImpl.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dbaaa3dc1cf7f041_22_new,"TrilateralEllipse","new",0xfe7a6f64,"TrilateralEllipse.new","TrilateralEllipse.hx",22,0x06e1888c)
HX_LOCAL_STACK_FRAME(_hx_pos_dbaaa3dc1cf7f041_65_draw,"TrilateralEllipse","draw",0xa614b080,"TrilateralEllipse.draw","TrilateralEllipse.hx",65,0x06e1888c)
static const int _hx_array_data_80f62d72_3[] = {
	(int)-30,(int)100,(int)250,(int)400,
};
HX_LOCAL_STACK_FRAME(_hx_pos_dbaaa3dc1cf7f041_88_drawSet,"TrilateralEllipse","drawSet",0x08d3f302,"TrilateralEllipse.drawSet","TrilateralEllipse.hx",88,0x06e1888c)
HX_LOCAL_STACK_FRAME(_hx_pos_dbaaa3dc1cf7f041_91_draw_d,"TrilateralEllipse","draw_d",0xd90223a5,"TrilateralEllipse.draw_d","TrilateralEllipse.hx",91,0x06e1888c)

void TrilateralEllipse_obj::__construct( ::gluon::webgl::native::GLContext gl){
            	HX_GC_STACKFRAME(&_hx_pos_dbaaa3dc1cf7f041_22_new)
HXLINE(  60)		this->penNodule =  ::trilateral3::nodule::PenNodule_obj::__alloc( HX_CTX ,null());
HXLINE(  58)		this->arc7_3 = HX_("M 100 200 A 100 50 -45 1 1 250 150",62,fe,ca,1e);
HXLINE(  57)		this->arc7_2 = HX_("M 100 200 A 100 50 -45 1 0 250 150",61,95,d9,4b);
HXLINE(  56)		this->arc7_1 = HX_("M 100 200 A 100 50 -45 0 1 250 150",21,93,ec,9d);
HXLINE(  55)		this->arc7_0 = HX_("M 100 200 A 100 50 -45 0 0 250 150",20,2a,fb,ca);
HXLINE(  54)		this->arc6_3 = HX_("M 100 200 A 100 50 -45 1 0 250 150",61,95,d9,4b);
HXLINE(  53)		this->arc6_2 = HX_("M 100 200 A 100 50 -45 1 1 250 150",62,fe,ca,1e);
HXLINE(  52)		this->arc6_1 = HX_("M 100 200 A 100 50 -45 0 1 250 150",21,93,ec,9d);
HXLINE(  51)		this->arc6_0 = HX_("M 100 200 A 100 50 -45 0 0 250 150",20,2a,fb,ca);
HXLINE(  50)		this->arc5_3 = HX_("M 100 200 A 100 50 -44 0 1 250 150",a0,15,2c,58);
HXLINE(  49)		this->arc5_2 = HX_("M 100 200 A 100 50 -44 1 0 250 150",e0,17,19,06);
HXLINE(  48)		this->arc5_1 = HX_("M 100 200 A 100 50 -44 1 1 250 150",e1,80,0a,d9);
HXLINE(  47)		this->arc5_0 = HX_("M 100 200 A 100 50 -44 0 0 250 150",9f,ac,3a,85);
HXLINE(  46)		this->arc4_3 = HX_("M 100 200 A 100 50 -44 0 0 250 150",9f,ac,3a,85);
HXLINE(  45)		this->arc4_2 = HX_("M 100 200 A 100 50 -44 1 1 250 150",e1,80,0a,d9);
HXLINE(  44)		this->arc4_1 = HX_("M 100 200 A 100 50 -44 0 1 250 150",a0,15,2c,58);
HXLINE(  43)		this->arc4_0 = HX_("M 100 200 A 100 50 -44 1 0 250 150",e0,17,19,06);
HXLINE(  42)		this->arc3_3 = HX_("M 100 200 A 100 50 -15 1 1 250 150",45,04,c3,d6);
HXLINE(  41)		this->arc3_2 = HX_("M 100 200 A 100 50 -15 1 0 250 150",44,9b,d1,03);
HXLINE(  40)		this->arc3_1 = HX_("M 100 200 A 100 50 -15 0 1 250 150",04,99,e4,55);
HXLINE(  39)		this->arc3_0 = HX_("M 100 200 A 100 50 -15 0 0 250 150",03,30,f3,82);
HXLINE(  38)		this->arc2_3 = HX_("M 100 200 A 100 50 -15 1 0 250 150",44,9b,d1,03);
HXLINE(  37)		this->arc2_2 = HX_("M 100 200 A 100 50 -15 1 1 250 150",45,04,c3,d6);
HXLINE(  36)		this->arc2_1 = HX_("M 100 200 A 100 50 -15 0 1 250 150",04,99,e4,55);
HXLINE(  35)		this->arc2_0 = HX_("M 100 200 A 100 50 -15 0 0 250 150",03,30,f3,82);
HXLINE(  34)		this->arc1_3 = HX_("M 100 200 A 100 50 0.0 0 1 250 150",a5,0a,0d,70);
HXLINE(  33)		this->arc1_2 = HX_("M 100 200 A 100 50 0.0 1 1 250 150",e6,75,eb,f0);
HXLINE(  32)		this->arc1_1 = HX_("M 100 200 A 100 50 0.0 1 0 250 150",e5,0c,fa,1d);
HXLINE(  31)		this->arc1_0 = HX_("M 100 200 A 100 50 0.0 0 0 250 150",a4,a1,1b,9d);
HXLINE(  30)		this->arc0_3 = HX_("M 100 200 A 100 50 0.0 0 0 250 150",a4,a1,1b,9d);
HXLINE(  29)		this->arc0_2 = HX_("M 100 200 A 100 50 0.0 1 1 250 150",e6,75,eb,f0);
HXLINE(  28)		this->arc0_1 = HX_("M 100 200 A 100 50 0.0 1 0 250 150",e5,0c,fa,1d);
HXLINE(  27)		this->arc0_0 = HX_("M 100 200 A 100 50 0.0 0 1 250 150",a5,0a,0d,70);
HXLINE(  26)		this->lightGray = -2894893;
HXLINE(  25)		this->gainsboro = -2302756;
HXLINE(  24)		this->silver = -4144960;
HXLINE(  23)		this->crimson = -2354116;
HXLINE(  62)		super::__construct(gl);
            	}

Dynamic TrilateralEllipse_obj::__CreateEmpty() { return new TrilateralEllipse_obj; }

void *TrilateralEllipse_obj::_hx_vtable = 0;

Dynamic TrilateralEllipse_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TrilateralEllipse_obj > _hx_result = new TrilateralEllipse_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TrilateralEllipse_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1c3f678c) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1c3f678c;
	} else {
		return inClassId==(int)0x7f94e39a;
	}
}

void TrilateralEllipse_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_dbaaa3dc1cf7f041_65_draw)
HXLINE(  66)		this->interleaveDataGL =  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("get_data",b3,11,1e,c2),this->penNodule->get_data_dyn())
            			->setFixed(1,HX_("get_size",4a,5c,0e,cc),this->penNodule->get_size_dyn()));
HXLINE(  67)		this->pen = this->penNodule->pen;
HXLINE(  68)		::Array< ::String > arcs0 = ::Array_obj< ::String >::__new(4)->init(0,this->arc0_0)->init(1,this->arc0_1)->init(2,this->arc0_2)->init(3,this->arc0_3);
HXLINE(  69)		::Array< ::String > arcs1 = ::Array_obj< ::String >::__new(4)->init(0,this->arc1_0)->init(1,this->arc1_1)->init(2,this->arc1_2)->init(3,this->arc1_3);
HXLINE(  70)		::Array< ::String > arcs2 = ::Array_obj< ::String >::__new(4)->init(0,this->arc2_0)->init(1,this->arc2_1)->init(2,this->arc2_2)->init(3,this->arc2_3);
HXLINE(  71)		::Array< ::String > arcs3 = ::Array_obj< ::String >::__new(4)->init(0,this->arc3_0)->init(1,this->arc3_1)->init(2,this->arc3_2)->init(3,this->arc3_3);
HXLINE(  72)		::Array< ::String > arcs4 = ::Array_obj< ::String >::__new(4)->init(0,this->arc4_0)->init(1,this->arc4_1)->init(2,this->arc4_2)->init(3,this->arc4_3);
HXLINE(  73)		::Array< ::String > arcs5 = ::Array_obj< ::String >::__new(4)->init(0,this->arc5_0)->init(1,this->arc5_1)->init(2,this->arc5_2)->init(3,this->arc5_3);
HXLINE(  74)		::Array< ::String > arcs6 = ::Array_obj< ::String >::__new(4)->init(0,this->arc6_0)->init(1,this->arc6_1)->init(2,this->arc6_2)->init(3,this->arc6_3);
HXLINE(  75)		::Array< ::String > arcs7 = ::Array_obj< ::String >::__new(4)->init(0,this->arc7_0)->init(1,this->arc7_1)->init(2,this->arc7_2)->init(3,this->arc7_3);
HXLINE(  76)		::Array< int > pallet = ::Array_obj< int >::__new(4)->init(0,this->silver)->init(1,this->gainsboro)->init(2,this->lightGray)->init(3,this->crimson);
HXLINE(  77)		int x0 = 130;
HXLINE(  78)		int x1 = 450;
HXLINE(  79)		::Array< int > yPos = ::Array_obj< int >::fromData( _hx_array_data_80f62d72_3,4);
HXLINE(  80)		::Array< ::Dynamic> arcs = ::Array_obj< ::Dynamic>::__new(8)->init(0,arcs0)->init(1,arcs1)->init(2,arcs2)->init(3,arcs3)->init(4,arcs4)->init(5,arcs5)->init(6,arcs6)->init(7,arcs7);
HXLINE(  81)		{
HXLINE(  81)			int _g = 0;
HXDLIN(  81)			int _g1 = yPos->length;
HXDLIN(  81)			while((_g < _g1)){
HXLINE(  81)				_g = (_g + 1);
HXDLIN(  81)				int i = (_g - 1);
HXLINE(  82)				 ::trilateral3::drawing::Pen _hx_tmp = this->pen;
HXDLIN(  82)				::Array< ::String > _hx_tmp1 = ( (::Array< ::String >)(arcs->shift()) );
HXDLIN(  82)				this->drawSet(_hx_tmp,_hx_tmp1,pallet,( (Float)((2 * x0)) ),( (Float)((2 * yPos->__get(i))) ),( (Float)(1) ));
HXLINE(  83)				 ::trilateral3::drawing::Pen _hx_tmp2 = this->pen;
HXDLIN(  83)				::Array< ::String > _hx_tmp3 = ( (::Array< ::String >)(arcs->shift()) );
HXDLIN(  83)				this->drawSet(_hx_tmp2,_hx_tmp3,pallet,( (Float)((2 * x1)) ),( (Float)((2 * yPos->__get(i))) ),( (Float)(1) ));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TrilateralEllipse_obj,draw,(void))

void TrilateralEllipse_obj::drawSet( ::trilateral3::drawing::Pen pen,::Array< ::String > arcs,::Array< int > col,Float x,Float y,Float s){
            	HX_STACKFRAME(&_hx_pos_dbaaa3dc1cf7f041_88_drawSet)
HXDLIN(  88)		int _g = 0;
HXDLIN(  88)		int _g1 = arcs->length;
HXDLIN(  88)		while((_g < _g1)){
HXDLIN(  88)			_g = (_g + 1);
HXDLIN(  88)			int i = (_g - 1);
HXDLIN(  88)			this->draw_d(pen,arcs->__get(i),x,y,s,( (Float)(5) ),col->__get(i));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(TrilateralEllipse_obj,drawSet,(void))

void TrilateralEllipse_obj::draw_d( ::trilateral3::drawing::Pen pen,::String d,Float x,Float y,Float s,Float w,int color){
            	HX_GC_STACKFRAME(&_hx_pos_dbaaa3dc1cf7f041_91_draw_d)
HXLINE(  92)		pen->currentColor = color;
HXLINE(  93)		 ::trilateral3::drawing::Sketch sketch =  ::trilateral3::drawing::Sketch_obj::__alloc( HX_CTX ,pen,4,3);
HXLINE(  94)		sketch->width = w;
HXLINE(  95)		 ::justPath::transform::ScaleTranslateContext trans =  ::justPath::transform::ScaleTranslateContext_obj::__alloc( HX_CTX ,sketch,x,y,s,s);
HXLINE(  96)		 ::justPath::SvgPath p =  ::justPath::SvgPath_obj::__alloc( HX_CTX ,trans);
HXLINE(  97)		p->parse(d);
            	}


HX_DEFINE_DYNAMIC_FUNC7(TrilateralEllipse_obj,draw_d,(void))


::hx::ObjectPtr< TrilateralEllipse_obj > TrilateralEllipse_obj::__new( ::gluon::webgl::native::GLContext gl) {
	::hx::ObjectPtr< TrilateralEllipse_obj > __this = new TrilateralEllipse_obj();
	__this->__construct(gl);
	return __this;
}

::hx::ObjectPtr< TrilateralEllipse_obj > TrilateralEllipse_obj::__alloc(::hx::Ctx *_hx_ctx, ::gluon::webgl::native::GLContext gl) {
	TrilateralEllipse_obj *__this = (TrilateralEllipse_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TrilateralEllipse_obj), true, "TrilateralEllipse"));
	*(void **)__this = TrilateralEllipse_obj::_hx_vtable;
	__this->__construct(gl);
	return __this;
}

TrilateralEllipse_obj::TrilateralEllipse_obj()
{
}

void TrilateralEllipse_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TrilateralEllipse);
	HX_MARK_MEMBER_NAME(crimson,"crimson");
	HX_MARK_MEMBER_NAME(silver,"silver");
	HX_MARK_MEMBER_NAME(gainsboro,"gainsboro");
	HX_MARK_MEMBER_NAME(lightGray,"lightGray");
	HX_MARK_MEMBER_NAME(arc0_0,"arc0_0");
	HX_MARK_MEMBER_NAME(arc0_1,"arc0_1");
	HX_MARK_MEMBER_NAME(arc0_2,"arc0_2");
	HX_MARK_MEMBER_NAME(arc0_3,"arc0_3");
	HX_MARK_MEMBER_NAME(arc1_0,"arc1_0");
	HX_MARK_MEMBER_NAME(arc1_1,"arc1_1");
	HX_MARK_MEMBER_NAME(arc1_2,"arc1_2");
	HX_MARK_MEMBER_NAME(arc1_3,"arc1_3");
	HX_MARK_MEMBER_NAME(arc2_0,"arc2_0");
	HX_MARK_MEMBER_NAME(arc2_1,"arc2_1");
	HX_MARK_MEMBER_NAME(arc2_2,"arc2_2");
	HX_MARK_MEMBER_NAME(arc2_3,"arc2_3");
	HX_MARK_MEMBER_NAME(arc3_0,"arc3_0");
	HX_MARK_MEMBER_NAME(arc3_1,"arc3_1");
	HX_MARK_MEMBER_NAME(arc3_2,"arc3_2");
	HX_MARK_MEMBER_NAME(arc3_3,"arc3_3");
	HX_MARK_MEMBER_NAME(arc4_0,"arc4_0");
	HX_MARK_MEMBER_NAME(arc4_1,"arc4_1");
	HX_MARK_MEMBER_NAME(arc4_2,"arc4_2");
	HX_MARK_MEMBER_NAME(arc4_3,"arc4_3");
	HX_MARK_MEMBER_NAME(arc5_0,"arc5_0");
	HX_MARK_MEMBER_NAME(arc5_1,"arc5_1");
	HX_MARK_MEMBER_NAME(arc5_2,"arc5_2");
	HX_MARK_MEMBER_NAME(arc5_3,"arc5_3");
	HX_MARK_MEMBER_NAME(arc6_0,"arc6_0");
	HX_MARK_MEMBER_NAME(arc6_1,"arc6_1");
	HX_MARK_MEMBER_NAME(arc6_2,"arc6_2");
	HX_MARK_MEMBER_NAME(arc6_3,"arc6_3");
	HX_MARK_MEMBER_NAME(arc7_0,"arc7_0");
	HX_MARK_MEMBER_NAME(arc7_1,"arc7_1");
	HX_MARK_MEMBER_NAME(arc7_2,"arc7_2");
	HX_MARK_MEMBER_NAME(arc7_3,"arc7_3");
	HX_MARK_MEMBER_NAME(pen,"pen");
	HX_MARK_MEMBER_NAME(penNodule,"penNodule");
	 ::kitGL::gluon::InterleaveAlterGL_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TrilateralEllipse_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(crimson,"crimson");
	HX_VISIT_MEMBER_NAME(silver,"silver");
	HX_VISIT_MEMBER_NAME(gainsboro,"gainsboro");
	HX_VISIT_MEMBER_NAME(lightGray,"lightGray");
	HX_VISIT_MEMBER_NAME(arc0_0,"arc0_0");
	HX_VISIT_MEMBER_NAME(arc0_1,"arc0_1");
	HX_VISIT_MEMBER_NAME(arc0_2,"arc0_2");
	HX_VISIT_MEMBER_NAME(arc0_3,"arc0_3");
	HX_VISIT_MEMBER_NAME(arc1_0,"arc1_0");
	HX_VISIT_MEMBER_NAME(arc1_1,"arc1_1");
	HX_VISIT_MEMBER_NAME(arc1_2,"arc1_2");
	HX_VISIT_MEMBER_NAME(arc1_3,"arc1_3");
	HX_VISIT_MEMBER_NAME(arc2_0,"arc2_0");
	HX_VISIT_MEMBER_NAME(arc2_1,"arc2_1");
	HX_VISIT_MEMBER_NAME(arc2_2,"arc2_2");
	HX_VISIT_MEMBER_NAME(arc2_3,"arc2_3");
	HX_VISIT_MEMBER_NAME(arc3_0,"arc3_0");
	HX_VISIT_MEMBER_NAME(arc3_1,"arc3_1");
	HX_VISIT_MEMBER_NAME(arc3_2,"arc3_2");
	HX_VISIT_MEMBER_NAME(arc3_3,"arc3_3");
	HX_VISIT_MEMBER_NAME(arc4_0,"arc4_0");
	HX_VISIT_MEMBER_NAME(arc4_1,"arc4_1");
	HX_VISIT_MEMBER_NAME(arc4_2,"arc4_2");
	HX_VISIT_MEMBER_NAME(arc4_3,"arc4_3");
	HX_VISIT_MEMBER_NAME(arc5_0,"arc5_0");
	HX_VISIT_MEMBER_NAME(arc5_1,"arc5_1");
	HX_VISIT_MEMBER_NAME(arc5_2,"arc5_2");
	HX_VISIT_MEMBER_NAME(arc5_3,"arc5_3");
	HX_VISIT_MEMBER_NAME(arc6_0,"arc6_0");
	HX_VISIT_MEMBER_NAME(arc6_1,"arc6_1");
	HX_VISIT_MEMBER_NAME(arc6_2,"arc6_2");
	HX_VISIT_MEMBER_NAME(arc6_3,"arc6_3");
	HX_VISIT_MEMBER_NAME(arc7_0,"arc7_0");
	HX_VISIT_MEMBER_NAME(arc7_1,"arc7_1");
	HX_VISIT_MEMBER_NAME(arc7_2,"arc7_2");
	HX_VISIT_MEMBER_NAME(arc7_3,"arc7_3");
	HX_VISIT_MEMBER_NAME(pen,"pen");
	HX_VISIT_MEMBER_NAME(penNodule,"penNodule");
	 ::kitGL::gluon::InterleaveAlterGL_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val TrilateralEllipse_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pen") ) { return ::hx::Val( pen ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"silver") ) { return ::hx::Val( silver ); }
		if (HX_FIELD_EQ(inName,"arc0_0") ) { return ::hx::Val( arc0_0 ); }
		if (HX_FIELD_EQ(inName,"arc0_1") ) { return ::hx::Val( arc0_1 ); }
		if (HX_FIELD_EQ(inName,"arc0_2") ) { return ::hx::Val( arc0_2 ); }
		if (HX_FIELD_EQ(inName,"arc0_3") ) { return ::hx::Val( arc0_3 ); }
		if (HX_FIELD_EQ(inName,"arc1_0") ) { return ::hx::Val( arc1_0 ); }
		if (HX_FIELD_EQ(inName,"arc1_1") ) { return ::hx::Val( arc1_1 ); }
		if (HX_FIELD_EQ(inName,"arc1_2") ) { return ::hx::Val( arc1_2 ); }
		if (HX_FIELD_EQ(inName,"arc1_3") ) { return ::hx::Val( arc1_3 ); }
		if (HX_FIELD_EQ(inName,"arc2_0") ) { return ::hx::Val( arc2_0 ); }
		if (HX_FIELD_EQ(inName,"arc2_1") ) { return ::hx::Val( arc2_1 ); }
		if (HX_FIELD_EQ(inName,"arc2_2") ) { return ::hx::Val( arc2_2 ); }
		if (HX_FIELD_EQ(inName,"arc2_3") ) { return ::hx::Val( arc2_3 ); }
		if (HX_FIELD_EQ(inName,"arc3_0") ) { return ::hx::Val( arc3_0 ); }
		if (HX_FIELD_EQ(inName,"arc3_1") ) { return ::hx::Val( arc3_1 ); }
		if (HX_FIELD_EQ(inName,"arc3_2") ) { return ::hx::Val( arc3_2 ); }
		if (HX_FIELD_EQ(inName,"arc3_3") ) { return ::hx::Val( arc3_3 ); }
		if (HX_FIELD_EQ(inName,"arc4_0") ) { return ::hx::Val( arc4_0 ); }
		if (HX_FIELD_EQ(inName,"arc4_1") ) { return ::hx::Val( arc4_1 ); }
		if (HX_FIELD_EQ(inName,"arc4_2") ) { return ::hx::Val( arc4_2 ); }
		if (HX_FIELD_EQ(inName,"arc4_3") ) { return ::hx::Val( arc4_3 ); }
		if (HX_FIELD_EQ(inName,"arc5_0") ) { return ::hx::Val( arc5_0 ); }
		if (HX_FIELD_EQ(inName,"arc5_1") ) { return ::hx::Val( arc5_1 ); }
		if (HX_FIELD_EQ(inName,"arc5_2") ) { return ::hx::Val( arc5_2 ); }
		if (HX_FIELD_EQ(inName,"arc5_3") ) { return ::hx::Val( arc5_3 ); }
		if (HX_FIELD_EQ(inName,"arc6_0") ) { return ::hx::Val( arc6_0 ); }
		if (HX_FIELD_EQ(inName,"arc6_1") ) { return ::hx::Val( arc6_1 ); }
		if (HX_FIELD_EQ(inName,"arc6_2") ) { return ::hx::Val( arc6_2 ); }
		if (HX_FIELD_EQ(inName,"arc6_3") ) { return ::hx::Val( arc6_3 ); }
		if (HX_FIELD_EQ(inName,"arc7_0") ) { return ::hx::Val( arc7_0 ); }
		if (HX_FIELD_EQ(inName,"arc7_1") ) { return ::hx::Val( arc7_1 ); }
		if (HX_FIELD_EQ(inName,"arc7_2") ) { return ::hx::Val( arc7_2 ); }
		if (HX_FIELD_EQ(inName,"arc7_3") ) { return ::hx::Val( arc7_3 ); }
		if (HX_FIELD_EQ(inName,"draw_d") ) { return ::hx::Val( draw_d_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"crimson") ) { return ::hx::Val( crimson ); }
		if (HX_FIELD_EQ(inName,"drawSet") ) { return ::hx::Val( drawSet_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"gainsboro") ) { return ::hx::Val( gainsboro ); }
		if (HX_FIELD_EQ(inName,"lightGray") ) { return ::hx::Val( lightGray ); }
		if (HX_FIELD_EQ(inName,"penNodule") ) { return ::hx::Val( penNodule ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TrilateralEllipse_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pen") ) { pen=inValue.Cast<  ::trilateral3::drawing::Pen >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"silver") ) { silver=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc0_0") ) { arc0_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc0_1") ) { arc0_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc0_2") ) { arc0_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc0_3") ) { arc0_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc1_0") ) { arc1_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc1_1") ) { arc1_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc1_2") ) { arc1_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc1_3") ) { arc1_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc2_0") ) { arc2_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc2_1") ) { arc2_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc2_2") ) { arc2_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc2_3") ) { arc2_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc3_0") ) { arc3_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc3_1") ) { arc3_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc3_2") ) { arc3_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc3_3") ) { arc3_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc4_0") ) { arc4_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc4_1") ) { arc4_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc4_2") ) { arc4_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc4_3") ) { arc4_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc5_0") ) { arc5_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc5_1") ) { arc5_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc5_2") ) { arc5_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc5_3") ) { arc5_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc6_0") ) { arc6_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc6_1") ) { arc6_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc6_2") ) { arc6_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc6_3") ) { arc6_3=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc7_0") ) { arc7_0=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc7_1") ) { arc7_1=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc7_2") ) { arc7_2=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arc7_3") ) { arc7_3=inValue.Cast< ::String >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"crimson") ) { crimson=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"gainsboro") ) { gainsboro=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lightGray") ) { lightGray=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"penNodule") ) { penNodule=inValue.Cast<  ::trilateral3::nodule::PenNodule >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TrilateralEllipse_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("crimson",df,dd,f2,66));
	outFields->push(HX_("silver",0d,55,da,b7));
	outFields->push(HX_("gainsboro",de,1f,fe,0c));
	outFields->push(HX_("lightGray",d9,af,89,bd));
	outFields->push(HX_("arc0_0",0f,00,e1,ad));
	outFields->push(HX_("arc0_1",10,00,e1,ad));
	outFields->push(HX_("arc0_2",11,00,e1,ad));
	outFields->push(HX_("arc0_3",12,00,e1,ad));
	outFields->push(HX_("arc1_0",50,c2,e1,ad));
	outFields->push(HX_("arc1_1",51,c2,e1,ad));
	outFields->push(HX_("arc1_2",52,c2,e1,ad));
	outFields->push(HX_("arc1_3",53,c2,e1,ad));
	outFields->push(HX_("arc2_0",91,84,e2,ad));
	outFields->push(HX_("arc2_1",92,84,e2,ad));
	outFields->push(HX_("arc2_2",93,84,e2,ad));
	outFields->push(HX_("arc2_3",94,84,e2,ad));
	outFields->push(HX_("arc3_0",d2,46,e3,ad));
	outFields->push(HX_("arc3_1",d3,46,e3,ad));
	outFields->push(HX_("arc3_2",d4,46,e3,ad));
	outFields->push(HX_("arc3_3",d5,46,e3,ad));
	outFields->push(HX_("arc4_0",13,09,e4,ad));
	outFields->push(HX_("arc4_1",14,09,e4,ad));
	outFields->push(HX_("arc4_2",15,09,e4,ad));
	outFields->push(HX_("arc4_3",16,09,e4,ad));
	outFields->push(HX_("arc5_0",54,cb,e4,ad));
	outFields->push(HX_("arc5_1",55,cb,e4,ad));
	outFields->push(HX_("arc5_2",56,cb,e4,ad));
	outFields->push(HX_("arc5_3",57,cb,e4,ad));
	outFields->push(HX_("arc6_0",95,8d,e5,ad));
	outFields->push(HX_("arc6_1",96,8d,e5,ad));
	outFields->push(HX_("arc6_2",97,8d,e5,ad));
	outFields->push(HX_("arc6_3",98,8d,e5,ad));
	outFields->push(HX_("arc7_0",d6,4f,e6,ad));
	outFields->push(HX_("arc7_1",d7,4f,e6,ad));
	outFields->push(HX_("arc7_2",d8,4f,e6,ad));
	outFields->push(HX_("arc7_3",d9,4f,e6,ad));
	outFields->push(HX_("pen",d9,54,55,00));
	outFields->push(HX_("penNodule",c4,02,81,14));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TrilateralEllipse_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(TrilateralEllipse_obj,crimson),HX_("crimson",df,dd,f2,66)},
	{::hx::fsInt,(int)offsetof(TrilateralEllipse_obj,silver),HX_("silver",0d,55,da,b7)},
	{::hx::fsInt,(int)offsetof(TrilateralEllipse_obj,gainsboro),HX_("gainsboro",de,1f,fe,0c)},
	{::hx::fsInt,(int)offsetof(TrilateralEllipse_obj,lightGray),HX_("lightGray",d9,af,89,bd)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc0_0),HX_("arc0_0",0f,00,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc0_1),HX_("arc0_1",10,00,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc0_2),HX_("arc0_2",11,00,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc0_3),HX_("arc0_3",12,00,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc1_0),HX_("arc1_0",50,c2,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc1_1),HX_("arc1_1",51,c2,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc1_2),HX_("arc1_2",52,c2,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc1_3),HX_("arc1_3",53,c2,e1,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc2_0),HX_("arc2_0",91,84,e2,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc2_1),HX_("arc2_1",92,84,e2,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc2_2),HX_("arc2_2",93,84,e2,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc2_3),HX_("arc2_3",94,84,e2,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc3_0),HX_("arc3_0",d2,46,e3,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc3_1),HX_("arc3_1",d3,46,e3,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc3_2),HX_("arc3_2",d4,46,e3,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc3_3),HX_("arc3_3",d5,46,e3,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc4_0),HX_("arc4_0",13,09,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc4_1),HX_("arc4_1",14,09,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc4_2),HX_("arc4_2",15,09,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc4_3),HX_("arc4_3",16,09,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc5_0),HX_("arc5_0",54,cb,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc5_1),HX_("arc5_1",55,cb,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc5_2),HX_("arc5_2",56,cb,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc5_3),HX_("arc5_3",57,cb,e4,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc6_0),HX_("arc6_0",95,8d,e5,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc6_1),HX_("arc6_1",96,8d,e5,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc6_2),HX_("arc6_2",97,8d,e5,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc6_3),HX_("arc6_3",98,8d,e5,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc7_0),HX_("arc7_0",d6,4f,e6,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc7_1),HX_("arc7_1",d7,4f,e6,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc7_2),HX_("arc7_2",d8,4f,e6,ad)},
	{::hx::fsString,(int)offsetof(TrilateralEllipse_obj,arc7_3),HX_("arc7_3",d9,4f,e6,ad)},
	{::hx::fsObject /*  ::trilateral3::drawing::Pen */ ,(int)offsetof(TrilateralEllipse_obj,pen),HX_("pen",d9,54,55,00)},
	{::hx::fsObject /*  ::trilateral3::nodule::PenNodule */ ,(int)offsetof(TrilateralEllipse_obj,penNodule),HX_("penNodule",c4,02,81,14)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TrilateralEllipse_obj_sStaticStorageInfo = 0;
#endif

static ::String TrilateralEllipse_obj_sMemberFields[] = {
	HX_("crimson",df,dd,f2,66),
	HX_("silver",0d,55,da,b7),
	HX_("gainsboro",de,1f,fe,0c),
	HX_("lightGray",d9,af,89,bd),
	HX_("arc0_0",0f,00,e1,ad),
	HX_("arc0_1",10,00,e1,ad),
	HX_("arc0_2",11,00,e1,ad),
	HX_("arc0_3",12,00,e1,ad),
	HX_("arc1_0",50,c2,e1,ad),
	HX_("arc1_1",51,c2,e1,ad),
	HX_("arc1_2",52,c2,e1,ad),
	HX_("arc1_3",53,c2,e1,ad),
	HX_("arc2_0",91,84,e2,ad),
	HX_("arc2_1",92,84,e2,ad),
	HX_("arc2_2",93,84,e2,ad),
	HX_("arc2_3",94,84,e2,ad),
	HX_("arc3_0",d2,46,e3,ad),
	HX_("arc3_1",d3,46,e3,ad),
	HX_("arc3_2",d4,46,e3,ad),
	HX_("arc3_3",d5,46,e3,ad),
	HX_("arc4_0",13,09,e4,ad),
	HX_("arc4_1",14,09,e4,ad),
	HX_("arc4_2",15,09,e4,ad),
	HX_("arc4_3",16,09,e4,ad),
	HX_("arc5_0",54,cb,e4,ad),
	HX_("arc5_1",55,cb,e4,ad),
	HX_("arc5_2",56,cb,e4,ad),
	HX_("arc5_3",57,cb,e4,ad),
	HX_("arc6_0",95,8d,e5,ad),
	HX_("arc6_1",96,8d,e5,ad),
	HX_("arc6_2",97,8d,e5,ad),
	HX_("arc6_3",98,8d,e5,ad),
	HX_("arc7_0",d6,4f,e6,ad),
	HX_("arc7_1",d7,4f,e6,ad),
	HX_("arc7_2",d8,4f,e6,ad),
	HX_("arc7_3",d9,4f,e6,ad),
	HX_("pen",d9,54,55,00),
	HX_("penNodule",c4,02,81,14),
	HX_("draw",04,2c,70,42),
	HX_("drawSet",fe,81,d7,fb),
	HX_("draw_d",29,88,d6,df),
	::String(null()) };

::hx::Class TrilateralEllipse_obj::__mClass;

void TrilateralEllipse_obj::__register()
{
	TrilateralEllipse_obj _hx_dummy;
	TrilateralEllipse_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("TrilateralEllipse",72,2d,f6,80);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TrilateralEllipse_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TrilateralEllipse_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TrilateralEllipse_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TrilateralEllipse_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

