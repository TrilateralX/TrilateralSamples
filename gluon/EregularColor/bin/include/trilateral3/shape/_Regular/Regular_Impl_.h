// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_trilateral3_shape__Regular_Regular_Impl_
#define INCLUDED_trilateral3_shape__Regular_Regular_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(trilateral3,drawing,Pen)
HX_DECLARE_CLASS3(trilateral3,shape,_Regular,Regular_Impl_)

namespace trilateral3{
namespace shape{
namespace _Regular{


class HXCPP_CLASS_ATTRIBUTES Regular_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Regular_Impl__obj OBJ_;
		Regular_Impl__obj();

	public:
		enum { _hx_ClassId = 0x289cc005 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.shape._Regular.Regular_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.shape._Regular.Regular_Impl_"); }

		inline static ::hx::ObjectPtr< Regular_Impl__obj > __new() {
			::hx::ObjectPtr< Regular_Impl__obj > __this = new Regular_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Regular_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Regular_Impl__obj *__this = (Regular_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Regular_Impl__obj), false, "trilateral3.shape._Regular.Regular_Impl_"));
			*(void **)__this = Regular_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Regular_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Regular_Impl_",dc,0b,c2,7e); }

		static  ::trilateral3::drawing::Pen _new( ::trilateral3::drawing::Pen pen_);
		static ::Dynamic _new_dyn();

};

} // end namespace trilateral3
} // end namespace shape
} // end namespace _Regular

#endif /* INCLUDED_trilateral3_shape__Regular_Regular_Impl_ */ 
