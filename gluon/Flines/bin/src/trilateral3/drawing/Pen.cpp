// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_trilateral3_drawing_Pen
#include <trilateral3/drawing/Pen.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_16_new,"trilateral3.drawing.Pen","new",0x0b5158b4,"trilateral3.drawing.Pen.new","trilateral3/drawing/Pen.hx",16,0xcfd64fbe)
namespace trilateral3{
namespace drawing{

void Pen_obj::__construct( ::Dynamic drawType_, ::Dynamic colorType_){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_16_new)
HXLINE(  19)		this->currentColor = 16435934;
HXLINE(  30)		this->drawType = drawType_;
HXLINE(  31)		this->colorType = colorType_;
            	}

Dynamic Pen_obj::__CreateEmpty() { return new Pen_obj; }

void *Pen_obj::_hx_vtable = 0;

Dynamic Pen_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Pen_obj > _hx_result = new Pen_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Pen_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x33d0c03e;
}


Pen_obj::Pen_obj()
{
}

void Pen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Pen);
	HX_MARK_MEMBER_NAME(currentColor,"currentColor");
	HX_MARK_MEMBER_NAME(drawType,"drawType");
	HX_MARK_MEMBER_NAME(colorType,"colorType");
	HX_MARK_END_CLASS();
}

void Pen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(currentColor,"currentColor");
	HX_VISIT_MEMBER_NAME(drawType,"drawType");
	HX_VISIT_MEMBER_NAME(colorType,"colorType");
}

::hx::Val Pen_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"drawType") ) { return ::hx::Val( drawType ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"colorType") ) { return ::hx::Val( colorType ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentColor") ) { return ::hx::Val( currentColor ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Pen_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"drawType") ) { drawType=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"colorType") ) { colorType=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentColor") ) { currentColor=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Pen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("currentColor",6a,56,68,91));
	outFields->push(HX_("drawType",de,9c,72,61));
	outFields->push(HX_("colorType",bd,7d,76,28));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Pen_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Pen_obj,currentColor),HX_("currentColor",6a,56,68,91)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,drawType),HX_("drawType",de,9c,72,61)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,colorType),HX_("colorType",bd,7d,76,28)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Pen_obj_sStaticStorageInfo = 0;
#endif

static ::String Pen_obj_sMemberFields[] = {
	HX_("currentColor",6a,56,68,91),
	HX_("drawType",de,9c,72,61),
	HX_("colorType",bd,7d,76,28),
	::String(null()) };

::hx::Class Pen_obj::__mClass;

void Pen_obj::__register()
{
	Pen_obj _hx_dummy;
	Pen_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("trilateral3.drawing.Pen",c2,2e,2a,ed);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Pen_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Pen_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Pen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Pen_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace trilateral3
} // end namespace drawing
