// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferView
#include <typedarray/ArrayBufferView.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewBase
#include <typedarray/ArrayBufferViewBase.h>
#endif
#ifndef INCLUDED_typedarray_ArrayBufferViewImplIterator_typedarray__Int32Array_Int32
#include <typedarray/ArrayBufferViewImplIterator_typedarray__Int32Array_Int32.h>
#endif
#ifndef INCLUDED_typedarray_Int32ArrayImpl
#include <typedarray/Int32ArrayImpl.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fbeb19c40877bb70_46_new,"typedarray.Int32ArrayImpl","new",0x3290fa9c,"typedarray.Int32ArrayImpl.new","typedarray/Int32Array.hx",46,0xfec2e7b3)
HX_LOCAL_STACK_FRAME(_hx_pos_fbeb19c40877bb70_56__get,"typedarray.Int32ArrayImpl","_get",0x02618fdb,"typedarray.Int32ArrayImpl._get","typedarray/Int32Array.hx",56,0xfec2e7b3)
HX_LOCAL_STACK_FRAME(_hx_pos_fbeb19c40877bb70_73__set,"typedarray.Int32ArrayImpl","_set",0x026aaae7,"typedarray.Int32ArrayImpl._set","typedarray/Int32Array.hx",73,0xfec2e7b3)
HX_LOCAL_STACK_FRAME(_hx_pos_fbeb19c40877bb70_91_iterator,"typedarray.Int32ArrayImpl","iterator",0x1ece8632,"typedarray.Int32ArrayImpl.iterator","typedarray/Int32Array.hx",91,0xfec2e7b3)
namespace typedarray{

void Int32ArrayImpl_obj::__construct( ::Dynamic length, ::haxe::io::Bytes buffer, ::Dynamic byteOffset, ::Dynamic byteLength){
            	HX_STACKFRAME(&_hx_pos_fbeb19c40877bb70_46_new)
HXDLIN(  46)		super::__construct(4,length,buffer,byteOffset,byteLength);
            	}

Dynamic Int32ArrayImpl_obj::__CreateEmpty() { return new Int32ArrayImpl_obj; }

void *Int32ArrayImpl_obj::_hx_vtable = 0;

Dynamic Int32ArrayImpl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Int32ArrayImpl_obj > _hx_result = new Int32ArrayImpl_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Int32ArrayImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2ca3a6c0) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2ca3a6c0;
	} else {
		return inClassId==(int)0x3a80dede;
	}
}

int Int32ArrayImpl_obj::_get(int i){
            	HX_STACKFRAME(&_hx_pos_fbeb19c40877bb70_56__get)
HXLINE(  58)		bool _hx_tmp;
HXDLIN(  58)		if ((i >= 0)) {
HXLINE(  58)			_hx_tmp = (i >= this->length);
            		}
            		else {
HXLINE(  58)			_hx_tmp = true;
            		}
HXDLIN(  58)		if (_hx_tmp) {
HXLINE(  59)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXLINE(  63)		int p = ((i * 4) + this->byteOffset);
HXLINE(  66)		return  ::__hxcpp_memory_get_i32(this->buffer->b,p);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Int32ArrayImpl_obj,_get,return )

int Int32ArrayImpl_obj::_set(int i,int v){
            	HX_STACKFRAME(&_hx_pos_fbeb19c40877bb70_73__set)
HXLINE(  75)		bool _hx_tmp;
HXDLIN(  75)		if ((i >= 0)) {
HXLINE(  75)			_hx_tmp = (i >= this->length);
            		}
            		else {
HXLINE(  75)			_hx_tmp = true;
            		}
HXDLIN(  75)		if (_hx_tmp) {
HXLINE(  76)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::haxe::io::Error_obj::OutsideBounds_dyn()));
            		}
HXLINE(  80)		int p = ((i * 4) + this->byteOffset);
HXLINE(  83)		 ::__hxcpp_memory_set_i32(this->buffer->b,p,v);
HXLINE(  87)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Int32ArrayImpl_obj,_set,return )

 ::typedarray::ArrayBufferViewImplIterator_typedarray__Int32Array_Int32 Int32ArrayImpl_obj::iterator(){
            	HX_GC_STACKFRAME(&_hx_pos_fbeb19c40877bb70_91_iterator)
HXDLIN(  91)		return  ::typedarray::ArrayBufferViewImplIterator_typedarray__Int32Array_Int32_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int32ArrayImpl_obj,iterator,return )


::hx::ObjectPtr< Int32ArrayImpl_obj > Int32ArrayImpl_obj::__new( ::Dynamic length, ::haxe::io::Bytes buffer, ::Dynamic byteOffset, ::Dynamic byteLength) {
	::hx::ObjectPtr< Int32ArrayImpl_obj > __this = new Int32ArrayImpl_obj();
	__this->__construct(length,buffer,byteOffset,byteLength);
	return __this;
}

::hx::ObjectPtr< Int32ArrayImpl_obj > Int32ArrayImpl_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic length, ::haxe::io::Bytes buffer, ::Dynamic byteOffset, ::Dynamic byteLength) {
	Int32ArrayImpl_obj *__this = (Int32ArrayImpl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Int32ArrayImpl_obj), true, "typedarray.Int32ArrayImpl"));
	*(void **)__this = Int32ArrayImpl_obj::_hx_vtable;
	__this->__construct(length,buffer,byteOffset,byteLength);
	return __this;
}

Int32ArrayImpl_obj::Int32ArrayImpl_obj()
{
}

::hx::Val Int32ArrayImpl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_get") ) { return ::hx::Val( _get_dyn() ); }
		if (HX_FIELD_EQ(inName,"_set") ) { return ::hx::Val( _set_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return ::hx::Val( iterator_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Int32ArrayImpl_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Int32ArrayImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String Int32ArrayImpl_obj_sMemberFields[] = {
	HX_("_get",97,c5,19,3f),
	HX_("_set",a3,e0,22,3f),
	HX_("iterator",ee,49,9a,93),
	::String(null()) };

::hx::Class Int32ArrayImpl_obj::__mClass;

void Int32ArrayImpl_obj::__register()
{
	Int32ArrayImpl_obj _hx_dummy;
	Int32ArrayImpl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("typedarray.Int32ArrayImpl",aa,bc,a8,68);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Int32ArrayImpl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Int32ArrayImpl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Int32ArrayImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Int32ArrayImpl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace typedarray
