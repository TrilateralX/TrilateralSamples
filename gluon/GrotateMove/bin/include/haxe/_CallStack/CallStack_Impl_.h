// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_haxe__CallStack_CallStack_Impl_
#define INCLUDED_haxe__CallStack_CallStack_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,StackItem)
HX_DECLARE_CLASS2(haxe,_CallStack,CallStack_Impl_)

namespace haxe{
namespace _CallStack{


class HXCPP_CLASS_ATTRIBUTES CallStack_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CallStack_Impl__obj OBJ_;
		CallStack_Impl__obj();

	public:
		enum { _hx_ClassId = 0x29a173d9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe._CallStack.CallStack_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe._CallStack.CallStack_Impl_"); }

		inline static ::hx::ObjectPtr< CallStack_Impl__obj > __new() {
			::hx::ObjectPtr< CallStack_Impl__obj > __this = new CallStack_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< CallStack_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			CallStack_Impl__obj *__this = (CallStack_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CallStack_Impl__obj), false, "haxe._CallStack.CallStack_Impl_"));
			*(void **)__this = CallStack_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CallStack_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CallStack_Impl_",ca,79,56,8f); }

		static ::Array< ::Dynamic> callStack();
		static ::Dynamic callStack_dyn();

};

} // end namespace haxe
} // end namespace _CallStack

#endif /* INCLUDED_haxe__CallStack_CallStack_Impl_ */ 
