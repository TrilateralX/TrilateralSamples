// Generated by Haxe 4.2.0-rc.1+cb30bd580
#ifndef INCLUDED_fracs_DifferencePreference
#define INCLUDED_fracs_DifferencePreference

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(fracs,DifferencePreference)
namespace fracs{


class DifferencePreference_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef DifferencePreference_obj OBJ_;

	public:
		DifferencePreference_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("fracs.DifferencePreference",61,83,5c,d6); }
		::String __ToString() const { return HX_("DifferencePreference.",56,19,54,94) + _hx_tag; }

		static ::fracs::DifferencePreference ANTICLOCKWISE;
		static inline ::fracs::DifferencePreference ANTICLOCKWISE_dyn() { return ANTICLOCKWISE; }
		static ::fracs::DifferencePreference CLOCKWISE;
		static inline ::fracs::DifferencePreference CLOCKWISE_dyn() { return CLOCKWISE; }
		static ::fracs::DifferencePreference LARGE;
		static inline ::fracs::DifferencePreference LARGE_dyn() { return LARGE; }
		static ::fracs::DifferencePreference SMALL;
		static inline ::fracs::DifferencePreference SMALL_dyn() { return SMALL; }
};

} // end namespace fracs

#endif /* INCLUDED_fracs_DifferencePreference */ 
