// Generated by Haxe 4.2.0-rc.1+cb30bd580
#ifndef INCLUDED_trilateral3_matrix_MatrixDozen
#define INCLUDED_trilateral3_matrix_MatrixDozen

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(trilateral3,matrix,MatrixDozen)

namespace trilateral3{
namespace matrix{


class HXCPP_CLASS_ATTRIBUTES MatrixDozen_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MatrixDozen_obj OBJ_;
		MatrixDozen_obj();

	public:
		enum { _hx_ClassId = 0x285f83bb };

		void __construct(Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i,Float j,Float k,Float l);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.matrix.MatrixDozen")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.matrix.MatrixDozen"); }

		inline static ::hx::ObjectPtr< MatrixDozen_obj > __new(Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i,Float j,Float k,Float l) {
			::hx::ObjectPtr< MatrixDozen_obj > __this = new MatrixDozen_obj();
			__this->__construct(a,b,c,d,e,f,g,h,i,j,k,l);
			return __this;
		}

		inline static ::hx::ObjectPtr< MatrixDozen_obj > __alloc(::hx::Ctx *_hx_ctx,Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i,Float j,Float k,Float l) {
			MatrixDozen_obj *__this = (MatrixDozen_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MatrixDozen_obj), false, "trilateral3.matrix.MatrixDozen"));
			*(void **)__this = MatrixDozen_obj::_hx_vtable;
{
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->l = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->k = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->j = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->i = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->h = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->g = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->f = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->e = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->d = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->c = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->b = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->a = ((Float)0.);
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->a = a;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->b = b;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->c = c;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->d = d;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->e = e;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->f = f;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->g = g;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->h = h;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->i = i;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->j = j;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->k = k;
	( ( ::trilateral3::matrix::MatrixDozen)(__this) )->l = l;
}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MatrixDozen_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MatrixDozen",97,22,14,27); }

		Float a;
		Float b;
		Float c;
		Float d;
		Float e;
		Float f;
		Float g;
		Float h;
		Float i;
		Float j;
		Float k;
		Float l;
};

} // end namespace trilateral3
} // end namespace matrix

#endif /* INCLUDED_trilateral3_matrix_MatrixDozen */ 
