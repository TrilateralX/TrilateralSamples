// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_kitGL_glLime_setup_NonGL
#define INCLUDED_kitGL_glLime_setup_NonGL

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(kitGL,glLime,setup,NonGL)
HX_DECLARE_CLASS2(lime,graphics,RenderContext)

namespace kitGL{
namespace glLime{
namespace setup{


class HXCPP_CLASS_ATTRIBUTES NonGL_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef NonGL_obj OBJ_;
		NonGL_obj();

	public:
		enum { _hx_ClassId = 0x09e34002 };

		void __construct(int width_,int height_);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kitGL.glLime.setup.NonGL")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"kitGL.glLime.setup.NonGL"); }
		static ::hx::ObjectPtr< NonGL_obj > __new(int width_,int height_);
		static ::hx::ObjectPtr< NonGL_obj > __alloc(::hx::Ctx *_hx_ctx,int width_,int height_);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~NonGL_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NonGL",52,a4,f3,32); }

		int width;
		int height;
		void update();
		::Dynamic update_dyn();

		void setup( ::lime::graphics::RenderContext context);
		::Dynamic setup_dyn();

		void render( ::lime::graphics::RenderContext context);
		::Dynamic render_dyn();

};

} // end namespace kitGL
} // end namespace glLime
} // end namespace setup

#endif /* INCLUDED_kitGL_glLime_setup_NonGL */ 
