// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_kitGL_glLime__BufferGL_BufferGL_Fields_
#include <kitGL/glLime/_BufferGL/BufferGL_Fields_.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics__WebGLRenderContext_WebGLRenderContext_Impl_
#include <lime/graphics/_WebGLRenderContext/WebGLRenderContext_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_16_bufferSetup,"kitGL.glLime._BufferGL.BufferGL_Fields_","bufferSetup",0x1b622286,"kitGL.glLime._BufferGL.BufferGL_Fields_.bufferSetup","kitGL/glLime/BufferGL.hx",16,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_32_interleaveXY_RGB,"kitGL.glLime._BufferGL.BufferGL_Fields_","interleaveXY_RGB",0x1fc7ce41,"kitGL.glLime._BufferGL.BufferGL_Fields_.interleaveXY_RGB","kitGL/glLime/BufferGL.hx",32,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_63_interleaveXYZ_RGBA,"kitGL.glLime._BufferGL.BufferGL_Fields_","interleaveXYZ_RGBA",0xffbebb0c,"kitGL.glLime._BufferGL.BufferGL_Fields_.interleaveXYZ_RGBA","kitGL/glLime/BufferGL.hx",63,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_95_colorsXYZ_RGBA,"kitGL.glLime._BufferGL.BufferGL_Fields_","colorsXYZ_RGBA",0x502825e1,"kitGL.glLime._BufferGL.BufferGL_Fields_.colorsXYZ_RGBA","kitGL/glLime/BufferGL.hx",95,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_104_colorsXY_RGBA,"kitGL.glLime._BufferGL.BufferGL_Fields_","colorsXY_RGBA",0x999931ab,"kitGL.glLime._BufferGL.BufferGL_Fields_.colorsXY_RGBA","kitGL/glLime/BufferGL.hx",104,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_113_colorsXYZ_RGB,"kitGL.glLime._BufferGL.BufferGL_Fields_","colorsXYZ_RGB",0xc1386e60,"kitGL.glLime._BufferGL.BufferGL_Fields_.colorsXYZ_RGB","kitGL/glLime/BufferGL.hx",113,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_122_colorsXY_RGB,"kitGL.glLime._BufferGL.BufferGL_Fields_","colorsXY_RGB",0x1d6369d6,"kitGL.glLime._BufferGL.BufferGL_Fields_.colorsXY_RGB","kitGL/glLime/BufferGL.hx",122,0xff29b3b8)
HX_LOCAL_STACK_FRAME(_hx_pos_35a7600f42c6028a_132_posColors,"kitGL.glLime._BufferGL.BufferGL_Fields_","posColors",0x6f86134d,"kitGL.glLime._BufferGL.BufferGL_Fields_.posColors","kitGL/glLime/BufferGL.hx",132,0xff29b3b8)
namespace kitGL{
namespace glLime{
namespace _BufferGL{

void BufferGL_Fields__obj::__construct() { }

Dynamic BufferGL_Fields__obj::__CreateEmpty() { return new BufferGL_Fields__obj; }

void *BufferGL_Fields__obj::_hx_vtable = 0;

Dynamic BufferGL_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BufferGL_Fields__obj > _hx_result = new BufferGL_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BufferGL_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5f81a8bf;
}

 ::lime::graphics::opengl::GLObject BufferGL_Fields__obj::bufferSetup( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView data, ::Dynamic __o_isDynamic){
            		 ::Dynamic isDynamic = __o_isDynamic;
            		if (::hx::IsNull(__o_isDynamic)) isDynamic = false;
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_16_bufferSetup)
HXLINE(  17)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXLINE(  18)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXLINE(  19)		if (( (bool)(isDynamic) )) {
HXLINE(  20)			::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,data,gl->DYNAMIC_DRAW);
            		}
            		else {
HXLINE(  22)			::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,data,gl->STATIC_DRAW);
            		}
HXLINE(  24)		return buf;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(BufferGL_Fields__obj,bufferSetup,return )

 ::lime::graphics::opengl::GLObject BufferGL_Fields__obj::interleaveXY_RGB( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView data,::String inPosName,::String inColName, ::Dynamic __o_isDynamic){
            		 ::Dynamic isDynamic = __o_isDynamic;
            		if (::hx::IsNull(__o_isDynamic)) isDynamic = false;
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_32_interleaveXY_RGB)
HXLINE(  33)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN(  33)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN(  33)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,data,gl->STATIC_DRAW);
HXDLIN(  33)		 ::lime::graphics::opengl::GLObject vbo = buf;
HXLINE(  34)		int posLoc = gl->getAttribLocation(program,inPosName);
HXLINE(  35)		int colorLoc = gl->getAttribLocation(program,inColName);
HXLINE(  37)		{
HXLINE(  37)			int type = gl->FLOAT;
HXDLIN(  37)			gl->vertexAttribPointer(posLoc,2,type,false,20,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXLINE(  45)		{
HXLINE(  45)			int type1 = gl->FLOAT;
HXDLIN(  45)			gl->vertexAttribPointer(colorLoc,3,type1,false,20,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(8));
            		}
HXLINE(  53)		gl->enableVertexAttribArray(posLoc);
HXLINE(  54)		gl->enableVertexAttribArray(colorLoc);
HXLINE(  55)		return vbo;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,interleaveXY_RGB,return )

 ::lime::graphics::opengl::GLObject BufferGL_Fields__obj::interleaveXYZ_RGBA( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView data,::String inPosName,::String inColName, ::Dynamic __o_isDynamic){
            		 ::Dynamic isDynamic = __o_isDynamic;
            		if (::hx::IsNull(__o_isDynamic)) isDynamic = false;
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_63_interleaveXYZ_RGBA)
HXLINE(  64)		 ::Dynamic isDynamic1 = isDynamic;
HXDLIN(  64)		if (::hx::IsNull( isDynamic1 )) {
HXLINE(  64)			isDynamic1 = false;
            		}
HXDLIN(  64)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN(  64)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN(  64)		if (( (bool)(isDynamic1) )) {
HXLINE(  64)			::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,data,gl->DYNAMIC_DRAW);
            		}
            		else {
HXLINE(  64)			::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,data,gl->STATIC_DRAW);
            		}
HXDLIN(  64)		 ::lime::graphics::opengl::GLObject vbo = buf;
HXLINE(  65)		int posLoc = gl->getAttribLocation(program,inPosName);
HXLINE(  66)		int colorLoc = gl->getAttribLocation(program,inColName);
HXLINE(  68)		{
HXLINE(  68)			int type = gl->FLOAT;
HXDLIN(  68)			gl->vertexAttribPointer(posLoc,3,type,false,28,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXLINE(  76)		{
HXLINE(  76)			int type1 = gl->FLOAT;
HXDLIN(  76)			gl->vertexAttribPointer(colorLoc,4,type1,false,28,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(12));
            		}
HXLINE(  84)		gl->enableVertexAttribArray(posLoc);
HXLINE(  85)		gl->enableVertexAttribArray(colorLoc);
HXLINE(  86)		return vbo;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,interleaveXYZ_RGBA,return )

 ::Dynamic BufferGL_Fields__obj::colorsXYZ_RGBA( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView positions, ::lime::utils::ArrayBufferView colors,::String inPosName,::String inColName){
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_95_colorsXYZ_RGBA)
HXDLIN(  95)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN(  95)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN(  95)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,positions,gl->STATIC_DRAW);
HXDLIN(  95)		 ::lime::graphics::opengl::GLObject bufferPos = buf;
HXDLIN(  95)		 ::lime::graphics::opengl::GLObject buf1 = gl->createBuffer();
HXDLIN(  95)		gl->bindBuffer(gl->ARRAY_BUFFER,buf1);
HXDLIN(  95)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,colors,gl->STATIC_DRAW);
HXDLIN(  95)		 ::lime::graphics::opengl::GLObject bufferCol = buf1;
HXDLIN(  95)		int posLoc = gl->getAttribLocation(program,inPosName);
HXDLIN(  95)		int colorLoc = gl->getAttribLocation(program,inColName);
HXDLIN(  95)		{
HXDLIN(  95)			int type = gl->FLOAT;
HXDLIN(  95)			gl->vertexAttribPointer(posLoc,3,type,false,12,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN(  95)		{
HXDLIN(  95)			int type1 = gl->FLOAT;
HXDLIN(  95)			gl->vertexAttribPointer(colorLoc,4,type1,false,16,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN(  95)		gl->enableVertexAttribArray(posLoc);
HXDLIN(  95)		gl->enableVertexAttribArray(colorLoc);
HXDLIN(  95)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("col",40,80,4b,00),bufferCol)
            			->setFixed(1,HX_("pos",94,5d,55,00),bufferPos));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,colorsXYZ_RGBA,return )

 ::Dynamic BufferGL_Fields__obj::colorsXY_RGBA( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView positions, ::lime::utils::ArrayBufferView colors,::String inPosName,::String inColName){
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_104_colorsXY_RGBA)
HXDLIN( 104)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN( 104)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN( 104)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,positions,gl->STATIC_DRAW);
HXDLIN( 104)		 ::lime::graphics::opengl::GLObject bufferPos = buf;
HXDLIN( 104)		 ::lime::graphics::opengl::GLObject buf1 = gl->createBuffer();
HXDLIN( 104)		gl->bindBuffer(gl->ARRAY_BUFFER,buf1);
HXDLIN( 104)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,colors,gl->STATIC_DRAW);
HXDLIN( 104)		 ::lime::graphics::opengl::GLObject bufferCol = buf1;
HXDLIN( 104)		int posLoc = gl->getAttribLocation(program,inPosName);
HXDLIN( 104)		int colorLoc = gl->getAttribLocation(program,inColName);
HXDLIN( 104)		{
HXDLIN( 104)			int type = gl->FLOAT;
HXDLIN( 104)			gl->vertexAttribPointer(posLoc,2,type,false,8,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 104)		{
HXDLIN( 104)			int type1 = gl->FLOAT;
HXDLIN( 104)			gl->vertexAttribPointer(colorLoc,4,type1,false,16,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 104)		gl->enableVertexAttribArray(posLoc);
HXDLIN( 104)		gl->enableVertexAttribArray(colorLoc);
HXDLIN( 104)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("col",40,80,4b,00),bufferCol)
            			->setFixed(1,HX_("pos",94,5d,55,00),bufferPos));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,colorsXY_RGBA,return )

 ::Dynamic BufferGL_Fields__obj::colorsXYZ_RGB( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView positions, ::lime::utils::ArrayBufferView colors,::String inPosName,::String inColName){
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_113_colorsXYZ_RGB)
HXDLIN( 113)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN( 113)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN( 113)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,positions,gl->STATIC_DRAW);
HXDLIN( 113)		 ::lime::graphics::opengl::GLObject bufferPos = buf;
HXDLIN( 113)		 ::lime::graphics::opengl::GLObject buf1 = gl->createBuffer();
HXDLIN( 113)		gl->bindBuffer(gl->ARRAY_BUFFER,buf1);
HXDLIN( 113)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,colors,gl->STATIC_DRAW);
HXDLIN( 113)		 ::lime::graphics::opengl::GLObject bufferCol = buf1;
HXDLIN( 113)		int posLoc = gl->getAttribLocation(program,inPosName);
HXDLIN( 113)		int colorLoc = gl->getAttribLocation(program,inColName);
HXDLIN( 113)		{
HXDLIN( 113)			int type = gl->FLOAT;
HXDLIN( 113)			gl->vertexAttribPointer(posLoc,3,type,false,12,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 113)		{
HXDLIN( 113)			int type1 = gl->FLOAT;
HXDLIN( 113)			gl->vertexAttribPointer(colorLoc,3,type1,false,12,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 113)		gl->enableVertexAttribArray(posLoc);
HXDLIN( 113)		gl->enableVertexAttribArray(colorLoc);
HXDLIN( 113)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("col",40,80,4b,00),bufferCol)
            			->setFixed(1,HX_("pos",94,5d,55,00),bufferPos));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,colorsXYZ_RGB,return )

 ::Dynamic BufferGL_Fields__obj::colorsXY_RGB( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView positions, ::lime::utils::ArrayBufferView colors,::String inPosName,::String inColName){
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_122_colorsXY_RGB)
HXDLIN( 122)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN( 122)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN( 122)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,positions,gl->STATIC_DRAW);
HXDLIN( 122)		 ::lime::graphics::opengl::GLObject bufferPos = buf;
HXDLIN( 122)		 ::lime::graphics::opengl::GLObject buf1 = gl->createBuffer();
HXDLIN( 122)		gl->bindBuffer(gl->ARRAY_BUFFER,buf1);
HXDLIN( 122)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,colors,gl->STATIC_DRAW);
HXDLIN( 122)		 ::lime::graphics::opengl::GLObject bufferCol = buf1;
HXDLIN( 122)		int posLoc = gl->getAttribLocation(program,inPosName);
HXDLIN( 122)		int colorLoc = gl->getAttribLocation(program,inColName);
HXDLIN( 122)		{
HXDLIN( 122)			int type = gl->FLOAT;
HXDLIN( 122)			gl->vertexAttribPointer(posLoc,2,type,false,8,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 122)		{
HXDLIN( 122)			int type1 = gl->FLOAT;
HXDLIN( 122)			gl->vertexAttribPointer(colorLoc,3,type1,false,12,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXDLIN( 122)		gl->enableVertexAttribArray(posLoc);
HXDLIN( 122)		gl->enableVertexAttribArray(colorLoc);
HXDLIN( 122)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("col",40,80,4b,00),bufferCol)
            			->setFixed(1,HX_("pos",94,5d,55,00),bufferPos));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(BufferGL_Fields__obj,colorsXY_RGB,return )

 ::Dynamic BufferGL_Fields__obj::posColors( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl, ::lime::graphics::opengl::GLObject program, ::lime::utils::ArrayBufferView positions, ::lime::utils::ArrayBufferView colors,::String inPosName,::String inColName,::hx::Null< int >  __o_noPos,::hx::Null< int >  __o_noCols){
            		int noPos = __o_noPos.Default(3);
            		int noCols = __o_noCols.Default(4);
            	HX_STACKFRAME(&_hx_pos_35a7600f42c6028a_132_posColors)
HXLINE( 133)		 ::lime::graphics::opengl::GLObject buf = gl->createBuffer();
HXDLIN( 133)		gl->bindBuffer(gl->ARRAY_BUFFER,buf);
HXDLIN( 133)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,positions,gl->STATIC_DRAW);
HXDLIN( 133)		 ::lime::graphics::opengl::GLObject bufferPos = buf;
HXLINE( 134)		 ::lime::graphics::opengl::GLObject buf1 = gl->createBuffer();
HXDLIN( 134)		gl->bindBuffer(gl->ARRAY_BUFFER,buf1);
HXDLIN( 134)		::lime::graphics::_WebGLRenderContext::WebGLRenderContext_Impl__obj::bufferData(gl,gl->ARRAY_BUFFER,colors,gl->STATIC_DRAW);
HXDLIN( 134)		 ::lime::graphics::opengl::GLObject bufferCol = buf1;
HXLINE( 135)		int posLoc = gl->getAttribLocation(program,inPosName);
HXLINE( 136)		int colorLoc = gl->getAttribLocation(program,inColName);
HXLINE( 138)		{
HXLINE( 138)			int type = gl->FLOAT;
HXDLIN( 138)			gl->vertexAttribPointer(posLoc,noPos,type,false,(noPos * 4),::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXLINE( 146)		{
HXLINE( 146)			int type1 = gl->FLOAT;
HXDLIN( 146)			gl->vertexAttribPointer(colorLoc,noCols,type1,false,(noCols * 4),::lime::utils::_DataPointer::DataPointer_Impl__obj::fromInt(0));
            		}
HXLINE( 154)		gl->enableVertexAttribArray(posLoc);
HXLINE( 155)		gl->enableVertexAttribArray(colorLoc);
HXLINE( 156)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("col",40,80,4b,00),bufferCol)
            			->setFixed(1,HX_("pos",94,5d,55,00),bufferPos));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(BufferGL_Fields__obj,posColors,return )


BufferGL_Fields__obj::BufferGL_Fields__obj()
{
}

bool BufferGL_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"posColors") ) { outValue = posColors_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"bufferSetup") ) { outValue = bufferSetup_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"colorsXY_RGB") ) { outValue = colorsXY_RGB_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"colorsXY_RGBA") ) { outValue = colorsXY_RGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGB") ) { outValue = colorsXYZ_RGB_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGBA") ) { outValue = colorsXYZ_RGBA_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"interleaveXY_RGB") ) { outValue = interleaveXY_RGB_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"interleaveXYZ_RGBA") ) { outValue = interleaveXYZ_RGBA_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *BufferGL_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *BufferGL_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class BufferGL_Fields__obj::__mClass;

static ::String BufferGL_Fields__obj_sStaticFields[] = {
	HX_("bufferSetup",5d,41,7b,17),
	HX_("interleaveXY_RGB",0a,84,9c,54),
	HX_("interleaveXYZ_RGBA",15,35,83,9b),
	HX_("colorsXYZ_RGBA",6a,a7,32,8c),
	HX_("colorsXY_RGBA",42,f4,58,a5),
	HX_("colorsXYZ_RGB",f7,30,f8,cc),
	HX_("colorsXY_RGB",1f,47,45,b7),
	HX_("posColors",64,fe,bc,bf),
	::String(null())
};

void BufferGL_Fields__obj::__register()
{
	BufferGL_Fields__obj _hx_dummy;
	BufferGL_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kitGL.glLime._BufferGL.BufferGL_Fields_",17,e8,f9,eb);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &BufferGL_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(BufferGL_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< BufferGL_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BufferGL_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BufferGL_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kitGL
} // end namespace glLime
} // end namespace _BufferGL
