// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_kitGL_glLime__Shaders_Shaders_Fields_
#include <kitGL/glLime/_Shaders/Shaders_Fields_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_10_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",10,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_23_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",23,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_34_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",34,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_47_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",47,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_58_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",58,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_72_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",72,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_83_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",83,0xc043bfb1)
HX_LOCAL_STACK_FRAME(_hx_pos_e1f137f784a1cb73_96_boot,"kitGL.glLime._Shaders.Shaders_Fields_","boot",0x0b166b49,"kitGL.glLime._Shaders.Shaders_Fields_.boot","kitGL/glLime/Shaders.hx",96,0xc043bfb1)
namespace kitGL{
namespace glLime{
namespace _Shaders{

void Shaders_Fields__obj::__construct() { }

Dynamic Shaders_Fields__obj::__CreateEmpty() { return new Shaders_Fields__obj; }

void *Shaders_Fields__obj::_hx_vtable = 0;

Dynamic Shaders_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Shaders_Fields__obj > _hx_result = new Shaders_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Shaders_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0bc853d1;
}

::String Shaders_Fields__obj::vertexSimpleColor;

::String Shaders_Fields__obj::fragmentSimpleColor;

::String Shaders_Fields__obj::vertexString0;

::String Shaders_Fields__obj::fragmentString0;

::String Shaders_Fields__obj::vertexColor;

::String Shaders_Fields__obj::fragmentColor;

::String Shaders_Fields__obj::vertexTexture;

::String Shaders_Fields__obj::fragmentTexture;


Shaders_Fields__obj::Shaders_Fields__obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Shaders_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Shaders_Fields__obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Shaders_Fields__obj::vertexSimpleColor,HX_("vertexSimpleColor",cd,d6,cd,1f)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::fragmentSimpleColor,HX_("fragmentSimpleColor",e1,11,99,3f)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::vertexString0,HX_("vertexString0",3b,cf,32,6b)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::fragmentString0,HX_("fragmentString0",4f,f0,55,00)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::vertexColor,HX_("vertexColor",5f,3b,98,5e)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::fragmentColor,HX_("fragmentColor",73,2f,07,c3)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::vertexTexture,HX_("vertexTexture",d7,09,20,11)},
	{::hx::fsString,(void *) &Shaders_Fields__obj::fragmentTexture,HX_("fragmentTexture",eb,2a,43,a6)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Shaders_Fields__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::vertexSimpleColor,"vertexSimpleColor");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::fragmentSimpleColor,"fragmentSimpleColor");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::vertexString0,"vertexString0");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::fragmentString0,"fragmentString0");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::vertexColor,"vertexColor");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::fragmentColor,"fragmentColor");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::vertexTexture,"vertexTexture");
	HX_MARK_MEMBER_NAME(Shaders_Fields__obj::fragmentTexture,"fragmentTexture");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Shaders_Fields__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::vertexSimpleColor,"vertexSimpleColor");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::fragmentSimpleColor,"fragmentSimpleColor");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::vertexString0,"vertexString0");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::fragmentString0,"fragmentString0");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::vertexColor,"vertexColor");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::fragmentColor,"fragmentColor");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::vertexTexture,"vertexTexture");
	HX_VISIT_MEMBER_NAME(Shaders_Fields__obj::fragmentTexture,"fragmentTexture");
};

#endif

::hx::Class Shaders_Fields__obj::__mClass;

static ::String Shaders_Fields__obj_sStaticFields[] = {
	HX_("vertexSimpleColor",cd,d6,cd,1f),
	HX_("fragmentSimpleColor",e1,11,99,3f),
	HX_("vertexString0",3b,cf,32,6b),
	HX_("fragmentString0",4f,f0,55,00),
	HX_("vertexColor",5f,3b,98,5e),
	HX_("fragmentColor",73,2f,07,c3),
	HX_("vertexTexture",d7,09,20,11),
	HX_("fragmentTexture",eb,2a,43,a6),
	::String(null())
};

void Shaders_Fields__obj::__register()
{
	Shaders_Fields__obj _hx_dummy;
	Shaders_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kitGL.glLime._Shaders.Shaders_Fields_",b7,d0,d0,66);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Shaders_Fields__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Shaders_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Shaders_Fields__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Shaders_Fields__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Shaders_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Shaders_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Shaders_Fields__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_10_boot)
HXDLIN(  10)		vertexSimpleColor = ((((((HX_("attribute vec2 vertexPosition;",30,55,0d,f6) + HX_("attribute vec3 vertexColor;",59,54,9d,80)) + HX_("varying vec3 vColor;",7d,46,f2,c9)) + HX_("void main() {",a1,5c,71,87)) + HX_("gl_Position = vec4(vertexPosition, 0.0, 1.0);",48,9e,07,fd)) + HX_("vColor = vertexColor;",72,7f,c3,40)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_23_boot)
HXDLIN(  23)		fragmentSimpleColor = (((HX_("varying vec3 vColor;",7d,46,f2,c9) + HX_("void main() {",a1,5c,71,87)) + HX_("gl_FragColor = vec4( vColor, 1.0 );",04,06,e8,8c)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_34_boot)
HXDLIN(  34)		vertexString0 = ((((((HX_("attribute vec3 vertexPosition;",31,27,01,79) + HX_("attribute vec4 vertexColor;",b8,a7,4a,43)) + HX_("varying vec4 vcol;",61,c8,5b,03)) + HX_("void main(void) {",4d,18,fb,21)) + HX_(" gl_Position = vec4(vertexPosition, 1.0);",1c,0c,87,98)) + HX_(" vcol = vertexColor;",75,ef,b6,2e)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_47_boot)
HXDLIN(  47)		fragmentString0 = (((HX_("varying vec4 vcol;",61,c8,5b,03) + HX_("void main(void) {",4d,18,fb,21)) + HX_(" gl_FragColor = vcol;",25,af,1c,24)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_58_boot)
HXDLIN(  58)		vertexColor = (((((((HX_("attribute vec3 vertexPosition;",31,27,01,79) + HX_("attribute vec4 vertexColor;",b8,a7,4a,43)) + HX_("varying vec4 vcol;",61,c8,5b,03)) + HX_("uniform mat4 modelViewProjection;",de,e0,6d,6f)) + HX_("void main(void) {",4d,18,fb,21)) + HX_(" gl_Position = modelViewProjection * vec4(vertexPosition, 1.);",ff,9f,7d,12)) + HX_(" vcol = vertexColor;",75,ef,b6,2e)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_72_boot)
HXDLIN(  72)		fragmentColor = (((HX_("varying vec4 vcol;",61,c8,5b,03) + HX_("void main(void) {",4d,18,fb,21)) + HX_("gl_FragColor = vcol;",05,df,af,ee)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_83_boot)
HXDLIN(  83)		vertexTexture = (((((((HX_("attribute vec2 aVertexPosition;",0b,a8,4b,46) + HX_("attribute vec2 aTexCoord;",0a,16,fd,45)) + HX_("uniform mat4 uMatrix;",05,7f,15,4c)) + HX_("varying vec2 vTexCoord;",a9,1f,fd,58)) + HX_("void main (void) {",c3,89,11,26)) + HX_("vTexCoord = aTexCoord;",4b,57,a5,83)) + HX_("gl_Position = uMatrix * vec4 (aVertexPosition, 0.0, 1.0);",d9,20,33,7c)) + HX_("}",7d,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e1f137f784a1cb73_96_boot)
HXDLIN(  96)		fragmentTexture = ((((HX_("varying vec2 vTexCoord;",a9,1f,fd,58) + HX_("uniform sampler2D uImage0;",a3,6f,63,d1)) + HX_("void main (void) {",c3,89,11,26)) + HX_("gl_FragColor = texture2D( uImage0, vTexCoord );",93,60,c7,5c)) + HX_("}",7d,00,00,00));
            	}
}

} // end namespace kitGL
} // end namespace glLime
} // end namespace _Shaders
