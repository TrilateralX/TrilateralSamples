// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_org_poly2tri_VisiblePolygon
#define INCLUDED_org_poly2tri_VisiblePolygon

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(org,poly2tri,Point)
HX_DECLARE_CLASS2(org,poly2tri,Sweep)
HX_DECLARE_CLASS2(org,poly2tri,SweepContext)
HX_DECLARE_CLASS2(org,poly2tri,VisiblePolygon)

namespace org{
namespace poly2tri{


class HXCPP_CLASS_ATTRIBUTES VisiblePolygon_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef VisiblePolygon_obj OBJ_;
		VisiblePolygon_obj();

	public:
		enum { _hx_ClassId = 0x2062d071 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="org.poly2tri.VisiblePolygon")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"org.poly2tri.VisiblePolygon"); }
		static ::hx::ObjectPtr< VisiblePolygon_obj > __new();
		static ::hx::ObjectPtr< VisiblePolygon_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~VisiblePolygon_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("VisiblePolygon",48,18,89,71); }

		 ::org::poly2tri::SweepContext sweepContext;
		 ::org::poly2tri::Sweep sweep;
		bool triangulated;
		void addPolyline(::Array< ::Dynamic> polyline);
		::Dynamic addPolyline_dyn();

		void addPolylineFromFloats(::Array< Float > pos);
		::Dynamic addPolylineFromFloats_dyn();

		void reset();
		::Dynamic reset_dyn();

		void performTriangulationOnce();
		::Dynamic performTriangulationOnce_dyn();

		 ::Dynamic getVerticesAndTriangles();
		::Dynamic getVerticesAndTriangles_dyn();

		int getNumTriangles();
		::Dynamic getNumTriangles_dyn();

};

} // end namespace org
} // end namespace poly2tri

#endif /* INCLUDED_org_poly2tri_VisiblePolygon */ 
