// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_dsHelper_flat_io__Float32Flat_Float32Flat_Impl_
#include <dsHelper/flat/io/_Float32Flat/Float32Flat_Impl_.h>
#endif
#ifndef INCLUDED_dsHelper_flatInterleave__FloatColorTriangles_FloatColorTriangles_Impl_
#include <dsHelper/flatInterleave/_FloatColorTriangles/FloatColorTriangles_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils_TAError
#include <lime/utils/TAError.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_5__new,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","_new",0x2fadee6b,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_._new","dsHelper/flatInterleave/FloatColorTriangles.hx",5,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_10_create,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","create",0xd0ce1686,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.create","dsHelper/flatInterleave/FloatColorTriangles.hx",10,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_14_get_ax,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_ax",0xf7ee9bca,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_ax","dsHelper/flatInterleave/FloatColorTriangles.hx",14,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_16_set_ax,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_ax",0xc436f03e,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_ax","dsHelper/flatInterleave/FloatColorTriangles.hx",16,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_22_get_ay,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_ay",0xf7ee9bcb,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_ay","dsHelper/flatInterleave/FloatColorTriangles.hx",22,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_24_set_ay,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_ay",0xc436f03f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_ay","dsHelper/flatInterleave/FloatColorTriangles.hx",24,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_30_get_az,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_az",0xf7ee9bcc,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_az","dsHelper/flatInterleave/FloatColorTriangles.hx",30,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_32_set_az,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_az",0xc436f040,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_az","dsHelper/flatInterleave/FloatColorTriangles.hx",32,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_39_get_redA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_redA",0xd0d32f63,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_redA","dsHelper/flatInterleave/FloatColorTriangles.hx",39,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_41_set_redA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_redA",0x7f3088d7,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_redA","dsHelper/flatInterleave/FloatColorTriangles.hx",41,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_49_get_greenA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_greenA",0x26958871,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_greenA","dsHelper/flatInterleave/FloatColorTriangles.hx",49,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_52_set_greenA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_greenA",0x2a1326e5,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_greenA","dsHelper/flatInterleave/FloatColorTriangles.hx",52,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_59_get_blueA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_blueA",0xb63a8374,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_blueA","dsHelper/flatInterleave/FloatColorTriangles.hx",59,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_62_set_blueA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_blueA",0x998b6f80,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_blueA","dsHelper/flatInterleave/FloatColorTriangles.hx",62,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_69_get_alphaA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_alphaA",0x53517776,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_alphaA","dsHelper/flatInterleave/FloatColorTriangles.hx",69,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_72_set_alphaA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_alphaA",0x56cf15ea,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_alphaA","dsHelper/flatInterleave/FloatColorTriangles.hx",72,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_79_get_bx,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_bx",0xf7ee9ca9,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_bx","dsHelper/flatInterleave/FloatColorTriangles.hx",79,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_81_set_bx,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_bx",0xc436f11d,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_bx","dsHelper/flatInterleave/FloatColorTriangles.hx",81,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_87_get_by,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_by",0xf7ee9caa,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_by","dsHelper/flatInterleave/FloatColorTriangles.hx",87,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_89_set_by,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_by",0xc436f11e,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_by","dsHelper/flatInterleave/FloatColorTriangles.hx",89,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_95_get_bz,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_bz",0xf7ee9cab,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_bz","dsHelper/flatInterleave/FloatColorTriangles.hx",95,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_97_set_bz,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_bz",0xc436f11f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_bz","dsHelper/flatInterleave/FloatColorTriangles.hx",97,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_104_get_redB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_redB",0xd0d32f64,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_redB","dsHelper/flatInterleave/FloatColorTriangles.hx",104,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_106_set_redB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_redB",0x7f3088d8,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_redB","dsHelper/flatInterleave/FloatColorTriangles.hx",106,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_114_get_greenB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_greenB",0x26958872,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_greenB","dsHelper/flatInterleave/FloatColorTriangles.hx",114,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_117_set_greenB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_greenB",0x2a1326e6,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_greenB","dsHelper/flatInterleave/FloatColorTriangles.hx",117,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_124_get_blueB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_blueB",0xb63a8375,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_blueB","dsHelper/flatInterleave/FloatColorTriangles.hx",124,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_127_set_blueB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_blueB",0x998b6f81,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_blueB","dsHelper/flatInterleave/FloatColorTriangles.hx",127,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_134_get_alphaB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_alphaB",0x53517777,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_alphaB","dsHelper/flatInterleave/FloatColorTriangles.hx",134,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_137_set_alphaB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_alphaB",0x56cf15eb,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_alphaB","dsHelper/flatInterleave/FloatColorTriangles.hx",137,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_144_get_cx,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_cx",0xf7ee9d88,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_cx","dsHelper/flatInterleave/FloatColorTriangles.hx",144,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_146_set_cx,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_cx",0xc436f1fc,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_cx","dsHelper/flatInterleave/FloatColorTriangles.hx",146,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_152_get_cy,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_cy",0xf7ee9d89,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_cy","dsHelper/flatInterleave/FloatColorTriangles.hx",152,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_154_set_cy,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_cy",0xc436f1fd,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_cy","dsHelper/flatInterleave/FloatColorTriangles.hx",154,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_160_get_cz,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_cz",0xf7ee9d8a,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_cz","dsHelper/flatInterleave/FloatColorTriangles.hx",160,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_162_set_cz,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_cz",0xc436f1fe,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_cz","dsHelper/flatInterleave/FloatColorTriangles.hx",162,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_169_get_redC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_redC",0xd0d32f65,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_redC","dsHelper/flatInterleave/FloatColorTriangles.hx",169,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_171_set_redC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_redC",0x7f3088d9,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_redC","dsHelper/flatInterleave/FloatColorTriangles.hx",171,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_179_get_greenC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_greenC",0x26958873,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_greenC","dsHelper/flatInterleave/FloatColorTriangles.hx",179,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_182_set_greenC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_greenC",0x2a1326e7,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_greenC","dsHelper/flatInterleave/FloatColorTriangles.hx",182,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_189_get_blueC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_blueC",0xb63a8376,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_blueC","dsHelper/flatInterleave/FloatColorTriangles.hx",189,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_192_set_blueC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_blueC",0x998b6f82,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_blueC","dsHelper/flatInterleave/FloatColorTriangles.hx",192,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_199_get_alphaC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_alphaC",0x53517778,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_alphaC","dsHelper/flatInterleave/FloatColorTriangles.hx",199,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_202_set_alphaC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_alphaC",0x56cf15ec,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_alphaC","dsHelper/flatInterleave/FloatColorTriangles.hx",202,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_209_triangle,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","triangle",0x9336e4d2,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.triangle","dsHelper/flatInterleave/FloatColorTriangles.hx",209,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_232_adjustWinding,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","adjustWinding",0xee1d9a01,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.adjustWinding","dsHelper/flatInterleave/FloatColorTriangles.hx",232,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_237_get_x,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_x",0x1dcfb505,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_x","dsHelper/flatInterleave/FloatColorTriangles.hx",237,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_240_set_x,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_x",0x069eab11,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_x","dsHelper/flatInterleave/FloatColorTriangles.hx",240,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_250_get_y,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_y",0x1dcfb506,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_y","dsHelper/flatInterleave/FloatColorTriangles.hx",250,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_253_set_y,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_y",0x069eab12,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_y","dsHelper/flatInterleave/FloatColorTriangles.hx",253,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_263_get_z,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_z",0x1dcfb507,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_z","dsHelper/flatInterleave/FloatColorTriangles.hx",263,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_266_set_z,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_z",0x069eab13,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_z","dsHelper/flatInterleave/FloatColorTriangles.hx",266,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_276_get_right,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_right",0xea9d8ae9,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_right","dsHelper/flatInterleave/FloatColorTriangles.hx",276,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_281_get_bottom,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_bottom",0x768e933e,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_bottom","dsHelper/flatInterleave/FloatColorTriangles.hx",281,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_286_get_back,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_back",0xc63cbbba,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_back","dsHelper/flatInterleave/FloatColorTriangles.hx",286,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_288_moveDelta,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","moveDelta",0x527dd9dd,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.moveDelta","dsHelper/flatInterleave/FloatColorTriangles.hx",288,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_298_sign,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","sign",0x3ce26947,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.sign","dsHelper/flatInterleave/FloatColorTriangles.hx",298,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_302_liteHit,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","liteHit",0x6616bafb,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.liteHit","dsHelper/flatInterleave/FloatColorTriangles.hx",302,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_310_fullHit,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","fullHit",0xa24a213a,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.fullHit","dsHelper/flatInterleave/FloatColorTriangles.hx",310,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_315_rotate,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","rotate",0x1fdef5e5,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.rotate","dsHelper/flatInterleave/FloatColorTriangles.hx",315,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_321_rotateTrig,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","rotateTrig",0xa59d1561,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.rotateTrig","dsHelper/flatInterleave/FloatColorTriangles.hx",321,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_351_colorTriangles,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","colorTriangles",0xe6962452,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.colorTriangles","dsHelper/flatInterleave/FloatColorTriangles.hx",351,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_357_cornerColors,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","cornerColors",0xb0eb7a6f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.cornerColors","dsHelper/flatInterleave/FloatColorTriangles.hx",357,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_364_set_rgb,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_rgb",0xebe81de6,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_rgb","dsHelper/flatInterleave/FloatColorTriangles.hx",364,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_372_set_rgbA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_rgbA",0x7f320b9b,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_rgbA","dsHelper/flatInterleave/FloatColorTriangles.hx",372,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_381_get_rgbA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_rgbA",0xd0d4b227,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_rgbA","dsHelper/flatInterleave/FloatColorTriangles.hx",381,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_387_set_rgbB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_rgbB",0x7f320b9c,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_rgbB","dsHelper/flatInterleave/FloatColorTriangles.hx",387,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_396_get_rgbB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_rgbB",0xd0d4b228,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_rgbB","dsHelper/flatInterleave/FloatColorTriangles.hx",396,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_402_set_rgbC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_rgbC",0x7f320b9d,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_rgbC","dsHelper/flatInterleave/FloatColorTriangles.hx",402,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_411_get_rgbC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_rgbC",0xd0d4b229,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_rgbC","dsHelper/flatInterleave/FloatColorTriangles.hx",411,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_417_set_argb,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_argb",0x73fdc853,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_argb","dsHelper/flatInterleave/FloatColorTriangles.hx",417,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_425_set_argbA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_argbA",0x0a11808e,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_argbA","dsHelper/flatInterleave/FloatColorTriangles.hx",425,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_434_get_argbA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_argbA",0x26c09482,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_argbA","dsHelper/flatInterleave/FloatColorTriangles.hx",434,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_441_set_argbB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_argbB",0x0a11808f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_argbB","dsHelper/flatInterleave/FloatColorTriangles.hx",441,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_450_get_argbB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_argbB",0x26c09483,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_argbB","dsHelper/flatInterleave/FloatColorTriangles.hx",450,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_457_set_argbC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","set_argbC",0x0a118090,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.set_argbC","dsHelper/flatInterleave/FloatColorTriangles.hx",457,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_466_get_argbC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","get_argbC",0x26c09484,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.get_argbC","dsHelper/flatInterleave/FloatColorTriangles.hx",466,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_473_prettyStringVert,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","prettyStringVert",0x03074c82,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.prettyStringVert","dsHelper/flatInterleave/FloatColorTriangles.hx",473,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_478_prettyAllVert,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","prettyAllVert",0xb950bc12,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.prettyAllVert","dsHelper/flatInterleave/FloatColorTriangles.hx",478,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_490_hex,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","hex",0xd5c3d911,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.hex","dsHelper/flatInterleave/FloatColorTriangles.hx",490,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_494_hexA,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","hexA",0x359a1610,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.hexA","dsHelper/flatInterleave/FloatColorTriangles.hx",494,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_498_hexB,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","hexB",0x359a1611,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.hexB","dsHelper/flatInterleave/FloatColorTriangles.hx",498,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_502_hexC,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","hexC",0x359a1612,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.hexC","dsHelper/flatInterleave/FloatColorTriangles.hx",502,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_505_hexAll,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","hexAll",0x60d81890,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.hexAll","dsHelper/flatInterleave/FloatColorTriangles.hx",505,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_517_alphaChannel,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","alphaChannel",0x6e433c0f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.alphaChannel","dsHelper/flatInterleave/FloatColorTriangles.hx",517,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_520_redChannel,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","redChannel",0xeccdc7fc,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.redChannel","dsHelper/flatInterleave/FloatColorTriangles.hx",520,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_523_greenChannel,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","greenChannel",0x297ebb4a,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.greenChannel","dsHelper/flatInterleave/FloatColorTriangles.hx",523,0x64596be3)
HX_LOCAL_STACK_FRAME(_hx_pos_5399da44140645b8_526_blueChannel,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_","blueChannel",0x63d5897f,"dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_.blueChannel","dsHelper/flatInterleave/FloatColorTriangles.hx",526,0x64596be3)
namespace dsHelper{
namespace flatInterleave{
namespace _FloatColorTriangles{

void FloatColorTriangles_Impl__obj::__construct() { }

Dynamic FloatColorTriangles_Impl__obj::__CreateEmpty() { return new FloatColorTriangles_Impl__obj; }

void *FloatColorTriangles_Impl__obj::_hx_vtable = 0;

Dynamic FloatColorTriangles_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FloatColorTriangles_Impl__obj > _hx_result = new FloatColorTriangles_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FloatColorTriangles_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x76c05f06;
}

 ::lime::utils::ArrayBufferView FloatColorTriangles_Impl__obj::_new(int len){
            	HX_GC_STACKFRAME(&_hx_pos_5399da44140645b8_5__new)
HXLINE(   6)		 ::Dynamic elements = (len + 2);
HXDLIN(   6)		 ::haxe::io::Bytes buffer = null();
HXDLIN(   6)		::cpp::VirtualArray array = null();
HXDLIN(   6)		 ::lime::utils::ArrayBufferView view = null();
HXDLIN(   6)		 ::Dynamic len1 = null();
HXDLIN(   6)		 ::lime::utils::ArrayBufferView this1;
HXDLIN(   6)		if (::hx::IsNotNull( elements )) {
HXLINE(   6)			this1 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,elements,8);
            		}
            		else {
HXLINE(   6)			if (::hx::IsNotNull( array )) {
HXLINE(   6)				 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(   6)				_this->byteOffset = 0;
HXDLIN(   6)				_this->length = array->get_length();
HXDLIN(   6)				_this->byteLength = (_this->length * _this->bytesPerElement);
HXDLIN(   6)				 ::haxe::io::Bytes this2 = ::haxe::io::Bytes_obj::alloc(_this->byteLength);
HXDLIN(   6)				_this->buffer = this2;
HXDLIN(   6)				_this->copyFromArray(array,null());
HXDLIN(   6)				this1 = _this;
            			}
            			else {
HXLINE(   6)				if (::hx::IsNotNull( view )) {
HXLINE(   6)					 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(   6)					 ::haxe::io::Bytes srcData = view->buffer;
HXDLIN(   6)					int srcLength = view->length;
HXDLIN(   6)					int srcByteOffset = view->byteOffset;
HXDLIN(   6)					int srcElementSize = view->bytesPerElement;
HXDLIN(   6)					int elementSize = _this->bytesPerElement;
HXDLIN(   6)					if ((view->type == _this->type)) {
HXLINE(   6)						int srcLength = srcData->length;
HXDLIN(   6)						int cloneLength = (srcLength - srcByteOffset);
HXDLIN(   6)						 ::haxe::io::Bytes this1 = ::haxe::io::Bytes_obj::alloc(cloneLength);
HXDLIN(   6)						_this->buffer = this1;
HXDLIN(   6)						_this->buffer->blit(0,srcData,srcByteOffset,cloneLength);
            					}
            					else {
HXLINE(   6)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("unimplemented",09,2f,74,b4)));
            					}
HXDLIN(   6)					_this->byteLength = (_this->bytesPerElement * srcLength);
HXDLIN(   6)					_this->byteOffset = 0;
HXDLIN(   6)					_this->length = srcLength;
HXDLIN(   6)					this1 = _this;
            				}
            				else {
HXLINE(   6)					if (::hx::IsNotNull( buffer )) {
HXLINE(   6)						 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(   6)						int in_byteOffset = 0;
HXDLIN(   6)						if ((in_byteOffset < 0)) {
HXLINE(   6)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            						}
HXDLIN(   6)						if ((::hx::Mod(in_byteOffset,_this->bytesPerElement) != 0)) {
HXLINE(   6)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            						}
HXDLIN(   6)						int bufferByteLength = buffer->length;
HXDLIN(   6)						int elementSize = _this->bytesPerElement;
HXDLIN(   6)						int newByteLength = bufferByteLength;
HXDLIN(   6)						if (::hx::IsNull( len1 )) {
HXLINE(   6)							newByteLength = (bufferByteLength - in_byteOffset);
HXDLIN(   6)							if ((::hx::Mod(bufferByteLength,_this->bytesPerElement) != 0)) {
HXLINE(   6)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
HXDLIN(   6)							if ((newByteLength < 0)) {
HXLINE(   6)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
            						}
            						else {
HXLINE(   6)							newByteLength = (( (int)(len1) ) * _this->bytesPerElement);
HXDLIN(   6)							int newRange = (in_byteOffset + newByteLength);
HXDLIN(   6)							if ((newRange > bufferByteLength)) {
HXLINE(   6)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
            						}
HXDLIN(   6)						_this->buffer = buffer;
HXDLIN(   6)						_this->byteOffset = in_byteOffset;
HXDLIN(   6)						_this->byteLength = newByteLength;
HXDLIN(   6)						_this->length = ::Std_obj::_hx_int((( (Float)(newByteLength) ) / ( (Float)(_this->bytesPerElement) )));
HXDLIN(   6)						this1 = _this;
            					}
            					else {
HXLINE(   6)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Invalid constructor arguments for Float32Array",8e,c1,f4,d4)));
            					}
            				}
            			}
            		}
HXDLIN(   6)		 ::lime::utils::ArrayBufferView this2 = this1;
HXDLIN(   6)		 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,((Float)0.));
HXDLIN(   6)		 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),((Float)0.));
HXDLIN(   6)		 ::lime::utils::ArrayBufferView this3 = this2;
HXLINE(   5)		 ::lime::utils::ArrayBufferView this4 = this3;
HXDLIN(   5)		return this4;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,_new,return )

 ::lime::utils::ArrayBufferView FloatColorTriangles_Impl__obj::create(int len){
            	HX_GC_STACKFRAME(&_hx_pos_5399da44140645b8_10_create)
HXDLIN(  10)		 ::Dynamic elements = ((len * 21) + 2);
HXDLIN(  10)		 ::haxe::io::Bytes buffer = null();
HXDLIN(  10)		::cpp::VirtualArray array = null();
HXDLIN(  10)		 ::lime::utils::ArrayBufferView view = null();
HXDLIN(  10)		 ::Dynamic len1 = null();
HXDLIN(  10)		 ::lime::utils::ArrayBufferView this1;
HXDLIN(  10)		if (::hx::IsNotNull( elements )) {
HXDLIN(  10)			this1 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,elements,8);
            		}
            		else {
HXDLIN(  10)			if (::hx::IsNotNull( array )) {
HXDLIN(  10)				 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(  10)				_this->byteOffset = 0;
HXDLIN(  10)				_this->length = array->get_length();
HXDLIN(  10)				_this->byteLength = (_this->length * _this->bytesPerElement);
HXDLIN(  10)				 ::haxe::io::Bytes this2 = ::haxe::io::Bytes_obj::alloc(_this->byteLength);
HXDLIN(  10)				_this->buffer = this2;
HXDLIN(  10)				_this->copyFromArray(array,null());
HXDLIN(  10)				this1 = _this;
            			}
            			else {
HXDLIN(  10)				if (::hx::IsNotNull( view )) {
HXDLIN(  10)					 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(  10)					 ::haxe::io::Bytes srcData = view->buffer;
HXDLIN(  10)					int srcLength = view->length;
HXDLIN(  10)					int srcByteOffset = view->byteOffset;
HXDLIN(  10)					int srcElementSize = view->bytesPerElement;
HXDLIN(  10)					int elementSize = _this->bytesPerElement;
HXDLIN(  10)					if ((view->type == _this->type)) {
HXDLIN(  10)						int srcLength = srcData->length;
HXDLIN(  10)						int cloneLength = (srcLength - srcByteOffset);
HXDLIN(  10)						 ::haxe::io::Bytes this1 = ::haxe::io::Bytes_obj::alloc(cloneLength);
HXDLIN(  10)						_this->buffer = this1;
HXDLIN(  10)						_this->buffer->blit(0,srcData,srcByteOffset,cloneLength);
            					}
            					else {
HXDLIN(  10)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("unimplemented",09,2f,74,b4)));
            					}
HXDLIN(  10)					_this->byteLength = (_this->bytesPerElement * srcLength);
HXDLIN(  10)					_this->byteOffset = 0;
HXDLIN(  10)					_this->length = srcLength;
HXDLIN(  10)					this1 = _this;
            				}
            				else {
HXDLIN(  10)					if (::hx::IsNotNull( buffer )) {
HXDLIN(  10)						 ::lime::utils::ArrayBufferView _this =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,0,8);
HXDLIN(  10)						int in_byteOffset = 0;
HXDLIN(  10)						if ((in_byteOffset < 0)) {
HXDLIN(  10)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            						}
HXDLIN(  10)						if ((::hx::Mod(in_byteOffset,_this->bytesPerElement) != 0)) {
HXDLIN(  10)							HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            						}
HXDLIN(  10)						int bufferByteLength = buffer->length;
HXDLIN(  10)						int elementSize = _this->bytesPerElement;
HXDLIN(  10)						int newByteLength = bufferByteLength;
HXDLIN(  10)						if (::hx::IsNull( len1 )) {
HXDLIN(  10)							newByteLength = (bufferByteLength - in_byteOffset);
HXDLIN(  10)							if ((::hx::Mod(bufferByteLength,_this->bytesPerElement) != 0)) {
HXDLIN(  10)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
HXDLIN(  10)							if ((newByteLength < 0)) {
HXDLIN(  10)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
            						}
            						else {
HXDLIN(  10)							newByteLength = (( (int)(len1) ) * _this->bytesPerElement);
HXDLIN(  10)							int newRange = (in_byteOffset + newByteLength);
HXDLIN(  10)							if ((newRange > bufferByteLength)) {
HXDLIN(  10)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(::lime::utils::TAError_obj::RangeError_dyn()));
            							}
            						}
HXDLIN(  10)						_this->buffer = buffer;
HXDLIN(  10)						_this->byteOffset = in_byteOffset;
HXDLIN(  10)						_this->byteLength = newByteLength;
HXDLIN(  10)						_this->length = ::Std_obj::_hx_int((( (Float)(newByteLength) ) / ( (Float)(_this->bytesPerElement) )));
HXDLIN(  10)						this1 = _this;
            					}
            					else {
HXDLIN(  10)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Invalid constructor arguments for Float32Array",8e,c1,f4,d4)));
            					}
            				}
            			}
            		}
HXDLIN(  10)		 ::lime::utils::ArrayBufferView this2 = this1;
HXDLIN(  10)		 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,((Float)0.));
HXDLIN(  10)		 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),((Float)0.));
HXDLIN(  10)		 ::lime::utils::ArrayBufferView this3 = this2;
HXDLIN(  10)		 ::lime::utils::ArrayBufferView this4 = this3;
HXDLIN(  10)		return this4;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,create,return )

Float FloatColorTriangles_Impl__obj::get_ax( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_14_get_ax)
HXDLIN(  14)		int k = (::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21);
HXDLIN(  14)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_ax,return )

Float FloatColorTriangles_Impl__obj::set_ax( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_16_set_ax)
HXLINE(  17)		{
HXLINE(  17)			int k = (::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21);
HXDLIN(  17)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  18)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_ax,return )

Float FloatColorTriangles_Impl__obj::get_ay( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_22_get_ay)
HXDLIN(  22)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 1);
HXDLIN(  22)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_ay,return )

Float FloatColorTriangles_Impl__obj::set_ay( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_24_set_ay)
HXLINE(  25)		{
HXLINE(  25)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 1);
HXDLIN(  25)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  26)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_ay,return )

Float FloatColorTriangles_Impl__obj::get_az( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_30_get_az)
HXDLIN(  30)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 2);
HXDLIN(  30)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_az,return )

Float FloatColorTriangles_Impl__obj::set_az( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_32_set_az)
HXLINE(  33)		{
HXLINE(  33)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 2);
HXDLIN(  33)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  34)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_az,return )

Float FloatColorTriangles_Impl__obj::get_redA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_39_get_redA)
HXDLIN(  39)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 3);
HXDLIN(  39)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_redA,return )

Float FloatColorTriangles_Impl__obj::set_redA( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_41_set_redA)
HXLINE(  42)		{
HXLINE(  42)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 3);
HXDLIN(  42)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  43)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_redA,return )

Float FloatColorTriangles_Impl__obj::get_greenA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_49_get_greenA)
HXDLIN(  49)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN(  49)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_greenA,return )

Float FloatColorTriangles_Impl__obj::set_greenA( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_52_set_greenA)
HXLINE(  53)		{
HXLINE(  53)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN(  53)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  54)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_greenA,return )

Float FloatColorTriangles_Impl__obj::get_blueA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_59_get_blueA)
HXDLIN(  59)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN(  59)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_blueA,return )

Float FloatColorTriangles_Impl__obj::set_blueA( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_62_set_blueA)
HXLINE(  63)		{
HXLINE(  63)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN(  63)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  64)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_blueA,return )

Float FloatColorTriangles_Impl__obj::get_alphaA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_69_get_alphaA)
HXDLIN(  69)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN(  69)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_alphaA,return )

Float FloatColorTriangles_Impl__obj::set_alphaA( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_72_set_alphaA)
HXLINE(  73)		{
HXLINE(  73)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN(  73)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  74)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_alphaA,return )

Float FloatColorTriangles_Impl__obj::get_bx( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_79_get_bx)
HXDLIN(  79)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 7);
HXDLIN(  79)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_bx,return )

Float FloatColorTriangles_Impl__obj::set_bx( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_81_set_bx)
HXLINE(  82)		{
HXLINE(  82)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 7);
HXDLIN(  82)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  83)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_bx,return )

Float FloatColorTriangles_Impl__obj::get_by( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_87_get_by)
HXDLIN(  87)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 8);
HXDLIN(  87)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_by,return )

Float FloatColorTriangles_Impl__obj::set_by( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_89_set_by)
HXLINE(  90)		{
HXLINE(  90)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 8);
HXDLIN(  90)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  91)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_by,return )

Float FloatColorTriangles_Impl__obj::get_bz( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_95_get_bz)
HXDLIN(  95)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 9);
HXDLIN(  95)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_bz,return )

Float FloatColorTriangles_Impl__obj::set_bz( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_97_set_bz)
HXLINE(  98)		{
HXLINE(  98)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 9);
HXDLIN(  98)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE(  99)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_bz,return )

Float FloatColorTriangles_Impl__obj::get_redB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_104_get_redB)
HXDLIN( 104)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 10);
HXDLIN( 104)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_redB,return )

Float FloatColorTriangles_Impl__obj::set_redB( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_106_set_redB)
HXLINE( 107)		{
HXLINE( 107)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 10);
HXDLIN( 107)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 108)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_redB,return )

Float FloatColorTriangles_Impl__obj::get_greenB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_114_get_greenB)
HXDLIN( 114)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 114)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_greenB,return )

Float FloatColorTriangles_Impl__obj::set_greenB( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_117_set_greenB)
HXLINE( 118)		{
HXLINE( 118)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 118)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 119)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_greenB,return )

Float FloatColorTriangles_Impl__obj::get_blueB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_124_get_blueB)
HXDLIN( 124)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 124)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_blueB,return )

Float FloatColorTriangles_Impl__obj::set_blueB( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_127_set_blueB)
HXLINE( 128)		{
HXLINE( 128)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 128)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 129)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_blueB,return )

Float FloatColorTriangles_Impl__obj::get_alphaB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_134_get_alphaB)
HXDLIN( 134)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 134)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_alphaB,return )

Float FloatColorTriangles_Impl__obj::set_alphaB( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_137_set_alphaB)
HXLINE( 138)		{
HXLINE( 138)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 138)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 139)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_alphaB,return )

Float FloatColorTriangles_Impl__obj::get_cx( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_144_get_cx)
HXDLIN( 144)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 14);
HXDLIN( 144)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_cx,return )

Float FloatColorTriangles_Impl__obj::set_cx( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_146_set_cx)
HXLINE( 147)		{
HXLINE( 147)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 14);
HXDLIN( 147)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 148)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_cx,return )

Float FloatColorTriangles_Impl__obj::get_cy( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_152_get_cy)
HXDLIN( 152)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 15);
HXDLIN( 152)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_cy,return )

Float FloatColorTriangles_Impl__obj::set_cy( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_154_set_cy)
HXLINE( 155)		{
HXLINE( 155)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 15);
HXDLIN( 155)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 156)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_cy,return )

Float FloatColorTriangles_Impl__obj::get_cz( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_160_get_cz)
HXDLIN( 160)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 16);
HXDLIN( 160)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_cz,return )

Float FloatColorTriangles_Impl__obj::set_cz( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_162_set_cz)
HXLINE( 163)		{
HXLINE( 163)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 16);
HXDLIN( 163)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 164)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_cz,return )

Float FloatColorTriangles_Impl__obj::get_redC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_169_get_redC)
HXDLIN( 169)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 17);
HXDLIN( 169)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_redC,return )

Float FloatColorTriangles_Impl__obj::set_redC( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_171_set_redC)
HXLINE( 172)		{
HXLINE( 172)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 17);
HXDLIN( 172)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 173)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_redC,return )

Float FloatColorTriangles_Impl__obj::get_greenC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_179_get_greenC)
HXDLIN( 179)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 179)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_greenC,return )

Float FloatColorTriangles_Impl__obj::set_greenC( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_182_set_greenC)
HXLINE( 183)		{
HXLINE( 183)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 183)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 184)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_greenC,return )

Float FloatColorTriangles_Impl__obj::get_blueC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_189_get_blueC)
HXDLIN( 189)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 189)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_blueC,return )

Float FloatColorTriangles_Impl__obj::set_blueC( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_192_set_blueC)
HXLINE( 193)		{
HXLINE( 193)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 193)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 194)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_blueC,return )

Float FloatColorTriangles_Impl__obj::get_alphaC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_199_get_alphaC)
HXDLIN( 199)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 199)		return  ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_alphaC,return )

Float FloatColorTriangles_Impl__obj::set_alphaC( ::lime::utils::ArrayBufferView this1,Float v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_202_set_alphaC)
HXLINE( 203)		{
HXLINE( 203)			int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 203)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            		}
HXLINE( 204)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_alphaC,return )

bool FloatColorTriangles_Impl__obj::triangle( ::lime::utils::ArrayBufferView this1,Float ax_,Float ay_,Float az_,Float bx_,Float by_,Float bz_,Float cx_,Float cy_,Float cz_){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_209_triangle)
HXLINE( 210)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(this1,ax_);
HXLINE( 211)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(this1,ay_);
HXLINE( 212)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_az(this1,az_);
HXLINE( 213)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(this1,bx_);
HXLINE( 214)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(this1,by_);
HXLINE( 215)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bz(this1,bz_);
HXLINE( 216)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(this1,cx_);
HXLINE( 217)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(this1,cy_);
HXLINE( 218)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cz(this1,cz_);
HXLINE( 220)		bool windingAdjusted = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::adjustWinding(this1);
HXLINE( 221)		if (windingAdjusted) {
HXLINE( 222)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(this1,ax_);
HXLINE( 223)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(this1,ay_);
HXLINE( 224)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(this1,cx_);
HXLINE( 225)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(this1,cy_);
HXLINE( 226)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(this1,bx_);
HXLINE( 227)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(this1,by_);
            		}
HXLINE( 229)		return windingAdjusted;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(FloatColorTriangles_Impl__obj,triangle,return )

bool FloatColorTriangles_Impl__obj::adjustWinding( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_232_adjustWinding)
HXDLIN( 232)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 232)		Float _hx_tmp1 = (_hx_tmp * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 232)		Float _hx_tmp2 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1);
HXDLIN( 232)		Float _hx_tmp3 = (_hx_tmp1 - (_hx_tmp2 * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1)));
HXDLIN( 232)		Float _hx_tmp4 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1);
HXDLIN( 232)		Float _hx_tmp5 = (_hx_tmp4 * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1));
HXDLIN( 232)		Float _hx_tmp6 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1);
HXDLIN( 232)		Float _hx_tmp7 = (_hx_tmp3 + (_hx_tmp5 - (_hx_tmp6 * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1))));
HXDLIN( 232)		Float _hx_tmp8 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1);
HXDLIN( 232)		Float _hx_tmp9 = (_hx_tmp8 * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1));
HXDLIN( 232)		Float _hx_tmp10 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 232)		return ((_hx_tmp7 + (_hx_tmp9 - (_hx_tmp10 * ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)))) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,adjustWinding,return )

Float FloatColorTriangles_Impl__obj::get_x( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_237_get_x)
HXDLIN( 237)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 237)		Float _hx_tmp1 = ::Math_obj::min(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1));
HXDLIN( 237)		return ::Math_obj::min(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_x,return )

Float FloatColorTriangles_Impl__obj::set_x( ::lime::utils::ArrayBufferView this1,Float x){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_240_set_x)
HXLINE( 241)		Float dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 241)		Float dx1 = ::Math_obj::min(dx,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1));
HXDLIN( 241)		Float dx2 = (x - ::Math_obj::min(dx1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1)));
HXLINE( 242)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1) + dx2));
HXLINE( 243)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1) + dx2));
HXLINE( 244)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1) + dx2));
HXLINE( 245)		return x;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_x,return )

Float FloatColorTriangles_Impl__obj::get_y( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_250_get_y)
HXDLIN( 250)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 250)		Float _hx_tmp1 = ::Math_obj::min(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 250)		return ::Math_obj::min(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_y,return )

Float FloatColorTriangles_Impl__obj::set_y( ::lime::utils::ArrayBufferView this1,Float y){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_253_set_y)
HXLINE( 254)		Float dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 254)		Float dy1 = ::Math_obj::min(dy,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 254)		Float dy2 = (y - ::Math_obj::min(dy1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)));
HXLINE( 255)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1) + dy2));
HXLINE( 256)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1) + dy2));
HXLINE( 257)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1) + dy2));
HXLINE( 258)		return y;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_y,return )

Float FloatColorTriangles_Impl__obj::get_z( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_263_get_z)
HXDLIN( 263)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1);
HXDLIN( 263)		Float _hx_tmp1 = ::Math_obj::min(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1));
HXDLIN( 263)		return ::Math_obj::min(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_z,return )

Float FloatColorTriangles_Impl__obj::set_z( ::lime::utils::ArrayBufferView this1,Float z){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_266_set_z)
HXLINE( 267)		Float dz = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1);
HXDLIN( 267)		Float dz1 = ::Math_obj::min(dz,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1));
HXDLIN( 267)		Float dz2 = (z - ::Math_obj::min(dz1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1)));
HXLINE( 268)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_az(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1) + dz2));
HXLINE( 269)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bz(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1) + dz2));
HXLINE( 270)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cz(this1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1) + dz2));
HXLINE( 271)		return z;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_z,return )

Float FloatColorTriangles_Impl__obj::get_right( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_276_get_right)
HXDLIN( 276)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 276)		Float _hx_tmp1 = ::Math_obj::max(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1));
HXDLIN( 276)		return ::Math_obj::max(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_right,return )

Float FloatColorTriangles_Impl__obj::get_bottom( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_281_get_bottom)
HXDLIN( 281)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 281)		Float _hx_tmp1 = ::Math_obj::max(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 281)		return ::Math_obj::max(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_bottom,return )

Float FloatColorTriangles_Impl__obj::get_back( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_286_get_back)
HXDLIN( 286)		Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1);
HXDLIN( 286)		Float _hx_tmp1 = ::Math_obj::max(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1));
HXDLIN( 286)		return ::Math_obj::max(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_back,return )

void FloatColorTriangles_Impl__obj::moveDelta( ::lime::utils::ArrayBufferView this1,Float dx,Float dy){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_288_moveDelta)
HXLINE( 289)		{
HXLINE( 289)			 ::lime::utils::ArrayBufferView _g = this1;
HXDLIN( 289)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(_g,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(_g) + dx));
            		}
HXLINE( 290)		{
HXLINE( 290)			 ::lime::utils::ArrayBufferView _g1 = this1;
HXDLIN( 290)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(_g1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(_g1) + dy));
            		}
HXLINE( 291)		{
HXLINE( 291)			 ::lime::utils::ArrayBufferView _g2 = this1;
HXDLIN( 291)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(_g2,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(_g2) + dx));
            		}
HXLINE( 292)		{
HXLINE( 292)			 ::lime::utils::ArrayBufferView _g3 = this1;
HXDLIN( 292)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(_g3,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(_g3) + dy));
            		}
HXLINE( 293)		{
HXLINE( 293)			 ::lime::utils::ArrayBufferView _g4 = this1;
HXDLIN( 293)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(_g4,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(_g4) + dx));
            		}
HXLINE( 294)		{
HXLINE( 294)			 ::lime::utils::ArrayBufferView _g5 = this1;
HXDLIN( 294)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(_g5,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(_g5) + dy));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatColorTriangles_Impl__obj,moveDelta,(void))

int FloatColorTriangles_Impl__obj::sign(Float n){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_298_sign)
HXDLIN( 298)		return ::Std_obj::_hx_int((::Math_obj::abs(n) / n));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,sign,return )

bool FloatColorTriangles_Impl__obj::liteHit( ::lime::utils::ArrayBufferView this1,Float px,Float py){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_302_liteHit)
HXLINE( 303)		Float planeAB = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1) - px);
HXDLIN( 303)		Float planeAB1 = (planeAB * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1) - py));
HXDLIN( 303)		Float planeAB2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1) - px);
HXDLIN( 303)		Float planeAB3 = (planeAB1 - (planeAB2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1) - py)));
HXLINE( 304)		Float planeBC = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1) - px);
HXDLIN( 304)		Float planeBC1 = (planeBC * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1) - py));
HXDLIN( 304)		Float planeBC2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1) - px);
HXDLIN( 304)		Float planeBC3 = (planeBC1 - (planeBC2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1) - py)));
HXLINE( 305)		Float planeCA = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1) - px);
HXDLIN( 305)		Float planeCA1 = (planeCA * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1) - py));
HXDLIN( 305)		Float planeCA2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1) - px);
HXDLIN( 305)		Float planeCA3 = (planeCA1 - (planeCA2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1) - py)));
HXLINE( 306)		int _hx_tmp = ::Std_obj::_hx_int((::Math_obj::abs(planeAB3) / planeAB3));
HXDLIN( 306)		if ((_hx_tmp == ::Std_obj::_hx_int((::Math_obj::abs(planeBC3) / planeBC3)))) {
HXLINE( 306)			int _hx_tmp = ::Std_obj::_hx_int((::Math_obj::abs(planeBC3) / planeBC3));
HXDLIN( 306)			return (_hx_tmp == ::Std_obj::_hx_int((::Math_obj::abs(planeCA3) / planeCA3)));
            		}
            		else {
HXLINE( 306)			return false;
            		}
HXDLIN( 306)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatColorTriangles_Impl__obj,liteHit,return )

bool FloatColorTriangles_Impl__obj::fullHit( ::lime::utils::ArrayBufferView this1,Float px,Float py){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_310_fullHit)
HXLINE( 311)		bool _hx_tmp;
HXDLIN( 311)		bool _hx_tmp1;
HXDLIN( 311)		bool _hx_tmp2;
HXDLIN( 311)		Float _hx_tmp3 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 311)		Float _hx_tmp4 = ::Math_obj::min(_hx_tmp3,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1));
HXDLIN( 311)		if ((px > ::Math_obj::min(_hx_tmp4,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1)))) {
HXLINE( 311)			Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 311)			Float _hx_tmp1 = ::Math_obj::max(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1));
HXDLIN( 311)			_hx_tmp2 = (px < ::Math_obj::max(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1)));
            		}
            		else {
HXLINE( 311)			_hx_tmp2 = false;
            		}
HXDLIN( 311)		if (_hx_tmp2) {
HXLINE( 311)			Float _hx_tmp = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 311)			Float _hx_tmp2 = ::Math_obj::min(_hx_tmp,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 311)			_hx_tmp1 = (py > ::Math_obj::min(_hx_tmp2,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)));
            		}
            		else {
HXLINE( 311)			_hx_tmp1 = false;
            		}
HXDLIN( 311)		if (_hx_tmp1) {
HXLINE( 311)			Float _hx_tmp1 = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 311)			Float _hx_tmp2 = ::Math_obj::max(_hx_tmp1,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1));
HXDLIN( 311)			_hx_tmp = (py < ::Math_obj::max(_hx_tmp2,::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)));
            		}
            		else {
HXLINE( 311)			_hx_tmp = false;
            		}
HXDLIN( 311)		if (_hx_tmp) {
HXLINE( 311)			return true;
            		}
HXLINE( 312)		Float planeAB = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1) - px);
HXDLIN( 312)		Float planeAB1 = (planeAB * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1) - py));
HXDLIN( 312)		Float planeAB2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1) - px);
HXDLIN( 312)		Float planeAB3 = (planeAB1 - (planeAB2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1) - py)));
HXDLIN( 312)		Float planeBC = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1) - px);
HXDLIN( 312)		Float planeBC1 = (planeBC * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1) - py));
HXDLIN( 312)		Float planeBC2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1) - px);
HXDLIN( 312)		Float planeBC3 = (planeBC1 - (planeBC2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1) - py)));
HXDLIN( 312)		Float planeCA = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1) - px);
HXDLIN( 312)		Float planeCA1 = (planeCA * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1) - py));
HXDLIN( 312)		Float planeCA2 = (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1) - px);
HXDLIN( 312)		Float planeCA3 = (planeCA1 - (planeCA2 * (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1) - py)));
HXDLIN( 312)		int _hx_tmp5 = ::Std_obj::_hx_int((::Math_obj::abs(planeAB3) / planeAB3));
HXDLIN( 312)		if ((_hx_tmp5 == ::Std_obj::_hx_int((::Math_obj::abs(planeBC3) / planeBC3)))) {
HXLINE( 312)			int _hx_tmp = ::Std_obj::_hx_int((::Math_obj::abs(planeBC3) / planeBC3));
HXDLIN( 312)			return (_hx_tmp == ::Std_obj::_hx_int((::Math_obj::abs(planeCA3) / planeCA3)));
            		}
            		else {
HXLINE( 312)			return false;
            		}
HXDLIN( 312)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatColorTriangles_Impl__obj,fullHit,return )

void FloatColorTriangles_Impl__obj::rotate( ::lime::utils::ArrayBufferView this1,Float x,Float y,Float theta){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_315_rotate)
HXLINE( 316)		Float cos = ::Math_obj::cos(theta);
HXLINE( 317)		Float sin = ::Math_obj::sin(theta);
HXLINE( 318)		{
HXLINE( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(_g,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(_g) - x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g1 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(_g1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(_g1) - y));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g2 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(_g2,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(_g2) - x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g3 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(_g3,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(_g3) - y));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g4 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(_g4,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(_g4) - x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g5 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(_g5,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(_g5) - y));
            			}
HXDLIN( 318)			Float dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXDLIN( 318)			Float dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(this1,((dx * cos) - (dy * sin)));
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(this1,((dx * sin) + (dy * cos)));
HXDLIN( 318)			dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1);
HXDLIN( 318)			dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1);
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(this1,((dx * cos) - (dy * sin)));
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(this1,((dx * sin) + (dy * cos)));
HXDLIN( 318)			dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1);
HXDLIN( 318)			dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1);
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(this1,((dx * cos) - (dy * sin)));
HXDLIN( 318)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(this1,((dx * sin) + (dy * cos)));
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g6 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(_g6,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(_g6) + x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g7 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(_g7,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(_g7) + y));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g8 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(_g8,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(_g8) + x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g9 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(_g9,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(_g9) + y));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g10 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(_g10,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(_g10) + x));
            			}
HXDLIN( 318)			{
HXLINE( 318)				 ::lime::utils::ArrayBufferView _g11 = this1;
HXDLIN( 318)				::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(_g11,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(_g11) + y));
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(FloatColorTriangles_Impl__obj,rotate,(void))

void FloatColorTriangles_Impl__obj::rotateTrig( ::lime::utils::ArrayBufferView this1,Float x,Float y,Float cos,Float sin){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_321_rotateTrig)
HXLINE( 322)		{
HXLINE( 322)			 ::lime::utils::ArrayBufferView _g = this1;
HXDLIN( 322)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(_g,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(_g) - x));
            		}
HXLINE( 323)		{
HXLINE( 323)			 ::lime::utils::ArrayBufferView _g1 = this1;
HXDLIN( 323)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(_g1,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(_g1) - y));
            		}
HXLINE( 324)		{
HXLINE( 324)			 ::lime::utils::ArrayBufferView _g2 = this1;
HXDLIN( 324)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(_g2,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(_g2) - x));
            		}
HXLINE( 325)		{
HXLINE( 325)			 ::lime::utils::ArrayBufferView _g3 = this1;
HXDLIN( 325)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(_g3,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(_g3) - y));
            		}
HXLINE( 326)		{
HXLINE( 326)			 ::lime::utils::ArrayBufferView _g4 = this1;
HXDLIN( 326)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(_g4,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(_g4) - x));
            		}
HXLINE( 327)		{
HXLINE( 327)			 ::lime::utils::ArrayBufferView _g5 = this1;
HXDLIN( 327)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(_g5,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(_g5) - y));
            		}
HXLINE( 328)		Float dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1);
HXLINE( 329)		Float dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1);
HXLINE( 332)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(this1,((dx * cos) - (dy * sin)));
HXLINE( 333)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(this1,((dx * sin) + (dy * cos)));
HXLINE( 334)		dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1);
HXLINE( 335)		dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1);
HXLINE( 336)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(this1,((dx * cos) - (dy * sin)));
HXLINE( 337)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(this1,((dx * sin) + (dy * cos)));
HXLINE( 338)		dx = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1);
HXLINE( 339)		dy = ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1);
HXLINE( 340)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(this1,((dx * cos) - (dy * sin)));
HXLINE( 341)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(this1,((dx * sin) + (dy * cos)));
HXLINE( 342)		{
HXLINE( 342)			 ::lime::utils::ArrayBufferView _g6 = this1;
HXDLIN( 342)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ax(_g6,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(_g6) + x));
            		}
HXLINE( 343)		{
HXLINE( 343)			 ::lime::utils::ArrayBufferView _g7 = this1;
HXDLIN( 343)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_ay(_g7,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(_g7) + y));
            		}
HXLINE( 344)		{
HXLINE( 344)			 ::lime::utils::ArrayBufferView _g8 = this1;
HXDLIN( 344)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_bx(_g8,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(_g8) + x));
            		}
HXLINE( 345)		{
HXLINE( 345)			 ::lime::utils::ArrayBufferView _g9 = this1;
HXDLIN( 345)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_by(_g9,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(_g9) + y));
            		}
HXLINE( 346)		{
HXLINE( 346)			 ::lime::utils::ArrayBufferView _g10 = this1;
HXDLIN( 346)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cx(_g10,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(_g10) + x));
            		}
HXLINE( 347)		{
HXLINE( 347)			 ::lime::utils::ArrayBufferView _g11 = this1;
HXDLIN( 347)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_cy(_g11,(::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(_g11) + y));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(FloatColorTriangles_Impl__obj,rotateTrig,(void))

void FloatColorTriangles_Impl__obj::colorTriangles( ::lime::utils::ArrayBufferView this1,int color,int times){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_351_colorTriangles)
HXDLIN( 351)		int _g = 0;
HXDLIN( 351)		int _g1 = times;
HXDLIN( 351)		while((_g < _g1)){
HXDLIN( 351)			_g = (_g + 1);
HXDLIN( 351)			int i = (_g - 1);
HXLINE( 352)			{
HXLINE( 352)				{
HXLINE( 352)					::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((color >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 352)					{
HXLINE( 352)						Float v = (( (Float)((color & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v1 = (( (Float)(((color >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v2 = (( (Float)(((color >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            						}
            					}
            				}
HXDLIN( 352)				{
HXLINE( 352)					::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((color >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 352)					{
HXLINE( 352)						Float v3 = (( (Float)((color & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k3 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k3 + 2) * 4)),v3);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v4 = (( (Float)(((color >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k4 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k4 + 2) * 4)),v4);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v5 = (( (Float)(((color >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k5 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k5 + 2) * 4)),v5);
            						}
            					}
            				}
HXDLIN( 352)				{
HXLINE( 352)					::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((color >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 352)					{
HXLINE( 352)						Float v6 = (( (Float)((color & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k6 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k6 + 2) * 4)),v6);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v7 = (( (Float)(((color >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k7 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k7 + 2) * 4)),v7);
            						}
            					}
HXDLIN( 352)					{
HXLINE( 352)						Float v8 = (( (Float)(((color >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 352)						{
HXLINE( 352)							int k8 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 352)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k8 + 2) * 4)),v8);
            						}
            					}
            				}
            			}
HXLINE( 353)			{
HXLINE( 353)				Float pos_ = ( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset) + 1);
HXDLIN( 353)				 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,pos_);
HXDLIN( 353)				Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 353)				if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 353)					Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 353)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatColorTriangles_Impl__obj,colorTriangles,(void))

void FloatColorTriangles_Impl__obj::cornerColors( ::lime::utils::ArrayBufferView this1,int colorA,int colorB,int colorC){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_357_cornerColors)
HXLINE( 358)		{
HXLINE( 358)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((colorA >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 358)			{
HXLINE( 358)				Float v = (( (Float)((colorA & 255)) ) / ( (Float)(255) ));
HXDLIN( 358)				{
HXLINE( 358)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 358)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            				}
            			}
HXDLIN( 358)			{
HXLINE( 358)				Float v1 = (( (Float)(((colorA >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 358)				{
HXLINE( 358)					int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 358)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            				}
            			}
HXDLIN( 358)			{
HXLINE( 358)				Float v2 = (( (Float)(((colorA >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 358)				{
HXLINE( 358)					int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 358)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            				}
            			}
            		}
HXLINE( 359)		{
HXLINE( 359)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((colorB >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 359)			{
HXLINE( 359)				Float v3 = (( (Float)((colorB & 255)) ) / ( (Float)(255) ));
HXDLIN( 359)				{
HXLINE( 359)					int k3 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 359)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k3 + 2) * 4)),v3);
            				}
            			}
HXDLIN( 359)			{
HXLINE( 359)				Float v4 = (( (Float)(((colorB >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 359)				{
HXLINE( 359)					int k4 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 359)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k4 + 2) * 4)),v4);
            				}
            			}
HXDLIN( 359)			{
HXLINE( 359)				Float v5 = (( (Float)(((colorB >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 359)				{
HXLINE( 359)					int k5 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 359)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k5 + 2) * 4)),v5);
            				}
            			}
            		}
HXLINE( 360)		{
HXLINE( 360)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((colorC >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 360)			{
HXLINE( 360)				Float v6 = (( (Float)((colorC & 255)) ) / ( (Float)(255) ));
HXDLIN( 360)				{
HXLINE( 360)					int k6 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 360)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k6 + 2) * 4)),v6);
            				}
            			}
HXDLIN( 360)			{
HXLINE( 360)				Float v7 = (( (Float)(((colorC >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 360)				{
HXLINE( 360)					int k7 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 360)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k7 + 2) * 4)),v7);
            				}
            			}
HXDLIN( 360)			{
HXLINE( 360)				Float v8 = (( (Float)(((colorC >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 360)				{
HXLINE( 360)					int k8 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 360)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k8 + 2) * 4)),v8);
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(FloatColorTriangles_Impl__obj,cornerColors,(void))

int FloatColorTriangles_Impl__obj::set_rgb( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_364_set_rgb)
HXLINE( 365)		{
HXLINE( 365)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 365)			{
HXLINE( 365)				Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 365)				{
HXLINE( 365)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 365)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            				}
            			}
HXDLIN( 365)			{
HXLINE( 365)				Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 365)				{
HXLINE( 365)					int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 365)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            				}
            			}
HXDLIN( 365)			{
HXLINE( 365)				int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 365)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),((Float)1.));
            			}
            		}
HXLINE( 366)		{
HXLINE( 366)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 366)			{
HXLINE( 366)				Float v2 = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 366)				{
HXLINE( 366)					int k3 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 366)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k3 + 2) * 4)),v2);
            				}
            			}
HXDLIN( 366)			{
HXLINE( 366)				Float v3 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 366)				{
HXLINE( 366)					int k4 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 366)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k4 + 2) * 4)),v3);
            				}
            			}
HXDLIN( 366)			{
HXLINE( 366)				int k5 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 366)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k5 + 2) * 4)),((Float)1.));
            			}
            		}
HXLINE( 367)		{
HXLINE( 367)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 367)			{
HXLINE( 367)				Float v4 = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 367)				{
HXLINE( 367)					int k6 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 367)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k6 + 2) * 4)),v4);
            				}
            			}
HXDLIN( 367)			{
HXLINE( 367)				Float v5 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 367)				{
HXLINE( 367)					int k7 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 367)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k7 + 2) * 4)),v5);
            				}
            			}
HXDLIN( 367)			{
HXLINE( 367)				int k8 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 367)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k8 + 2) * 4)),((Float)1.));
            			}
            		}
HXLINE( 368)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_rgb,return )

int FloatColorTriangles_Impl__obj::set_rgbA( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_372_set_rgbA)
HXLINE( 373)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 374)		{
HXLINE( 374)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 374)			{
HXLINE( 374)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 374)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 375)		{
HXLINE( 375)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 375)			{
HXLINE( 375)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 375)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 376)		{
HXLINE( 376)			int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 376)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),((Float)1.));
            		}
HXLINE( 377)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_rgbA,return )

int FloatColorTriangles_Impl__obj::get_rgbA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_381_get_rgbA)
HXDLIN( 381)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 381)		int _hx_tmp = ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) )));
HXLINE( 382)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXLINE( 381)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 381)		return (_hx_tmp1 | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_rgbA,return )

int FloatColorTriangles_Impl__obj::set_rgbB( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_387_set_rgbB)
HXLINE( 388)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 389)		{
HXLINE( 389)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 389)			{
HXLINE( 389)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 389)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 390)		{
HXLINE( 390)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 390)			{
HXLINE( 390)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 390)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 391)		{
HXLINE( 391)			int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 391)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),((Float)1.));
            		}
HXLINE( 392)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_rgbB,return )

int FloatColorTriangles_Impl__obj::get_rgbB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_396_get_rgbB)
HXDLIN( 396)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 396)		int _hx_tmp = ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) )));
HXLINE( 397)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXLINE( 396)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 396)		return (_hx_tmp1 | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redB(this1) * ( (Float)(255) ))) << 16));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_rgbB,return )

int FloatColorTriangles_Impl__obj::set_rgbC( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_402_set_rgbC)
HXLINE( 403)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 404)		{
HXLINE( 404)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 404)			{
HXLINE( 404)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 404)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 405)		{
HXLINE( 405)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 405)			{
HXLINE( 405)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 405)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 406)		{
HXLINE( 406)			int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 406)			 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),((Float)1.));
            		}
HXLINE( 407)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_rgbC,return )

int FloatColorTriangles_Impl__obj::get_rgbC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_411_get_rgbC)
HXDLIN( 411)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 411)		int _hx_tmp = ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) )));
HXLINE( 412)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXLINE( 411)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 411)		return (_hx_tmp1 | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redC(this1) * ( (Float)(255) ))) << 16));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_rgbC,return )

int FloatColorTriangles_Impl__obj::set_argb( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_417_set_argb)
HXLINE( 418)		{
HXLINE( 418)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 418)			{
HXLINE( 418)				Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 418)				{
HXLINE( 418)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 418)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            				}
            			}
HXDLIN( 418)			{
HXLINE( 418)				Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 418)				{
HXLINE( 418)					int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 418)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            				}
            			}
HXDLIN( 418)			{
HXLINE( 418)				Float v2 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 418)				{
HXLINE( 418)					int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 418)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            				}
            			}
            		}
HXLINE( 419)		{
HXLINE( 419)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 419)			{
HXLINE( 419)				Float v3 = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 419)				{
HXLINE( 419)					int k3 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 419)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k3 + 2) * 4)),v3);
            				}
            			}
HXDLIN( 419)			{
HXLINE( 419)				Float v4 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 419)				{
HXLINE( 419)					int k4 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 419)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k4 + 2) * 4)),v4);
            				}
            			}
HXDLIN( 419)			{
HXLINE( 419)				Float v5 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 419)				{
HXLINE( 419)					int k5 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 419)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k5 + 2) * 4)),v5);
            				}
            			}
            		}
HXLINE( 420)		{
HXLINE( 420)			::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXDLIN( 420)			{
HXLINE( 420)				Float v6 = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 420)				{
HXLINE( 420)					int k6 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 420)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k6 + 2) * 4)),v6);
            				}
            			}
HXDLIN( 420)			{
HXLINE( 420)				Float v7 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 420)				{
HXLINE( 420)					int k7 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 420)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k7 + 2) * 4)),v7);
            				}
            			}
HXDLIN( 420)			{
HXLINE( 420)				Float v8 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 420)				{
HXLINE( 420)					int k8 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 420)					 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k8 + 2) * 4)),v8);
            				}
            			}
            		}
HXLINE( 421)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_argb,return )

int FloatColorTriangles_Impl__obj::set_argbA( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_425_set_argbA)
HXLINE( 426)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redA(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 427)		{
HXLINE( 427)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 427)			{
HXLINE( 427)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 427)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 428)		{
HXLINE( 428)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 428)			{
HXLINE( 428)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 428)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 429)		{
HXLINE( 429)			Float v2 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 429)			{
HXLINE( 429)				int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 429)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            			}
            		}
HXLINE( 430)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_argbA,return )

int FloatColorTriangles_Impl__obj::get_argbA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_434_get_argbA)
HXDLIN( 434)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 434)		int _hx_tmp = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 434)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXLINE( 436)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXLINE( 434)		int _hx_tmp2 = (_hx_tmp1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXLINE( 437)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXLINE( 434)		return (_hx_tmp2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_argbA,return )

int FloatColorTriangles_Impl__obj::set_argbB( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_441_set_argbB)
HXLINE( 442)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redB(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 443)		{
HXLINE( 443)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 443)			{
HXLINE( 443)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 12);
HXDLIN( 443)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 444)		{
HXLINE( 444)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 444)			{
HXLINE( 444)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 11);
HXDLIN( 444)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 445)		{
HXLINE( 445)			Float v2 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 445)			{
HXLINE( 445)				int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 13);
HXDLIN( 445)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            			}
            		}
HXLINE( 446)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_argbB,return )

int FloatColorTriangles_Impl__obj::get_argbB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_450_get_argbB)
HXDLIN( 450)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 450)		int _hx_tmp = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 450)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXLINE( 452)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXLINE( 450)		int _hx_tmp2 = (_hx_tmp1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXLINE( 453)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXLINE( 450)		return (_hx_tmp2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_argbB,return )

int FloatColorTriangles_Impl__obj::set_argbC( ::lime::utils::ArrayBufferView this1,int col){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_457_set_argbC)
HXLINE( 458)		::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::set_redC(this1,(( (Float)(((col >> 16) & 255)) ) / ( (Float)(255) )));
HXLINE( 459)		{
HXLINE( 459)			Float v = (( (Float)((col & 255)) ) / ( (Float)(255) ));
HXDLIN( 459)			{
HXLINE( 459)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 19);
HXDLIN( 459)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4)),v);
            			}
            		}
HXLINE( 460)		{
HXLINE( 460)			Float v1 = (( (Float)(((col >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 460)			{
HXLINE( 460)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 18);
HXDLIN( 460)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4)),v1);
            			}
            		}
HXLINE( 461)		{
HXLINE( 461)			Float v2 = (( (Float)(((col >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 461)			{
HXLINE( 461)				int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 20);
HXDLIN( 461)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4)),v2);
            			}
            		}
HXLINE( 462)		return col;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,set_argbC,return )

int FloatColorTriangles_Impl__obj::get_argbC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_466_get_argbC)
HXDLIN( 466)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 466)		int _hx_tmp = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 466)		int _hx_tmp1 = (_hx_tmp | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXLINE( 468)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXLINE( 466)		int _hx_tmp2 = (_hx_tmp1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXLINE( 469)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXLINE( 466)		return (_hx_tmp2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,get_argbC,return )

::String FloatColorTriangles_Impl__obj::prettyStringVert( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_473_prettyStringVert)
HXDLIN( 473)		::String _hx_tmp = ((HX_("{ ax: ",22,e5,30,db) + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1)) + HX_(", ay: ",12,26,00,45));
HXDLIN( 473)		::String _hx_tmp1 = ((_hx_tmp + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1)) + HX_(", az: ",53,e8,00,45));
HXDLIN( 473)		::String _hx_tmp2 = ((((_hx_tmp1 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00)) + HX_("{ bx: ",c1,1b,da,db));
HXDLIN( 473)		::String _hx_tmp3 = ((_hx_tmp2 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1)) + HX_(", by: ",b1,5c,a9,45));
HXDLIN( 473)		::String _hx_tmp4 = ((_hx_tmp3 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1)) + HX_(", bz: ",f2,1e,aa,45));
HXDLIN( 473)		::String _hx_tmp5 = ((((_hx_tmp4 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00)) + HX_("{ cx: ",60,52,83,dc));
HXDLIN( 473)		::String _hx_tmp6 = ((_hx_tmp5 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1)) + HX_(", cy: ",50,93,52,46));
HXDLIN( 473)		::String _hx_tmp7 = ((_hx_tmp6 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)) + HX_(", az: ",53,e8,00,45));
HXDLIN( 473)		return (((_hx_tmp7 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,prettyStringVert,return )

::String FloatColorTriangles_Impl__obj::prettyAllVert( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_478_prettyAllVert)
HXLINE( 479)		{
HXLINE( 479)			 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,0);
HXDLIN( 479)			Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 479)			if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 479)				Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 479)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            			}
            		}
HXLINE( 480)		::String str = HX_("FlatColorTriangle - Verts: \n",63,0d,7b,1c);
HXLINE( 481)		{
HXLINE( 481)			int _g = 0;
HXDLIN( 481)			int _g1 = ::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this1);
HXDLIN( 481)			while((_g < _g1)){
HXLINE( 481)				_g = (_g + 1);
HXDLIN( 481)				int i = (_g - 1);
HXLINE( 482)				::String str1 = ((HX_("{ ax: ",22,e5,30,db) + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this1)) + HX_(", ay: ",12,26,00,45));
HXDLIN( 482)				::String str2 = ((str1 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this1)) + HX_(", az: ",53,e8,00,45));
HXDLIN( 482)				::String str3 = ((((str2 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_az(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00)) + HX_("{ bx: ",c1,1b,da,db));
HXDLIN( 482)				::String str4 = ((str3 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this1)) + HX_(", by: ",b1,5c,a9,45));
HXDLIN( 482)				::String str5 = ((str4 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this1)) + HX_(", bz: ",f2,1e,aa,45));
HXDLIN( 482)				::String str6 = ((((str5 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bz(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00)) + HX_("{ cx: ",60,52,83,dc));
HXDLIN( 482)				::String str7 = ((str6 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this1)) + HX_(", cy: ",50,93,52,46));
HXDLIN( 482)				::String str8 = ((str7 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this1)) + HX_(", az: ",53,e8,00,45));
HXDLIN( 482)				str = (str + (((str8 + ::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cz(this1)) + HX_(" }",5d,1c,00,00)) + HX_("\n",0a,00,00,00)));
HXLINE( 483)				{
HXLINE( 483)					{
HXLINE( 483)						Float pos_ = ( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset) + ((Float)1.));
HXDLIN( 483)						 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,pos_);
HXDLIN( 483)						Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 483)						if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 483)							Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 483)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            						}
            					}
HXDLIN( 483)					 ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
            				}
            			}
            		}
HXLINE( 485)		{
HXLINE( 485)			 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,0);
HXDLIN( 485)			Float _hx_tmp1 =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 485)			if ((_hx_tmp1 > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 485)				Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 485)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            			}
            		}
HXLINE( 486)		return str;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,prettyAllVert,return )

::String FloatColorTriangles_Impl__obj::hex( ::lime::utils::ArrayBufferView this1,int v){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_490_hex)
HXDLIN( 490)		return (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex(v,null()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatColorTriangles_Impl__obj,hex,return )

::String FloatColorTriangles_Impl__obj::hexA( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_494_hexA)
HXDLIN( 494)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 494)		int v = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 494)		int v1 = (v | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 494)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 494)		int v2 = (v1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 494)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 494)		return (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) )))),null()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,hexA,return )

::String FloatColorTriangles_Impl__obj::hexB( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_498_hexB)
HXDLIN( 498)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 498)		int v = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 498)		int v1 = (v | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 498)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 498)		int v2 = (v1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 498)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 498)		return (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) )))),null()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,hexB,return )

::String FloatColorTriangles_Impl__obj::hexC( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_502_hexC)
HXDLIN( 502)		int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 502)		int v = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 502)		int v1 = (v | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 502)		int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 502)		int v2 = (v1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 502)		int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 502)		return (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) )))),null()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,hexC,return )

::String FloatColorTriangles_Impl__obj::hexAll( ::lime::utils::ArrayBufferView this1){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_505_hexAll)
HXLINE( 506)		{
HXLINE( 506)			 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,0);
HXDLIN( 506)			Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 506)			if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 506)				Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 506)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            			}
            		}
HXLINE( 507)		::String str = HX_("FlatColorTriangle - RGBA: \n",8f,e1,c9,8c);
HXLINE( 508)		{
HXLINE( 508)			int _g = 0;
HXDLIN( 508)			int _g1 = ::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this1);
HXDLIN( 508)			while((_g < _g1)){
HXLINE( 508)				_g = (_g + 1);
HXDLIN( 508)				int i = (_g - 1);
HXLINE( 509)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 509)				int v = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 509)				int v1 = (v | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 509)				int k1 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 509)				int v2 = (v1 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k1 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 509)				int k2 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 509)				::String str1 = ((HX_("colorA: ",a4,d3,e1,89) + (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v2 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k2 + 2) * 4))) * ( (Float)(255) )))),null()))) + HX_(", colorB: ",59,50,dc,f4));
HXDLIN( 509)				int k3 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 509)				int v3 = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k3 + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 509)				int v4 = (v3 | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 509)				int k4 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 509)				int v5 = (v4 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k4 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 509)				int k5 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 509)				::String str2 = ((str1 + (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v5 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k5 + 2) * 4))) * ( (Float)(255) )))),null()))) + HX_(", colorC: ",9a,12,dd,f4));
HXDLIN( 509)				int k6 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 6);
HXDLIN( 509)				int v6 = (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k6 + 2) * 4))) * ( (Float)(255) ))) << 24);
HXDLIN( 509)				int v7 = (v6 | (::Math_obj::round((::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_redA(this1) * ( (Float)(255) ))) << 16));
HXDLIN( 509)				int k7 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 4);
HXDLIN( 509)				int v8 = (v7 | (::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k7 + 2) * 4))) * ( (Float)(255) ))) << 8));
HXDLIN( 509)				int k8 = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset)) * 21) + 5);
HXDLIN( 509)				str = (str + ((str2 + (HX_("0x",48,2a,00,00) + ::StringTools_obj::hex((v8 | ::Math_obj::round(( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + ((k8 + 2) * 4))) * ( (Float)(255) )))),null()))) + HX_("\n",0a,00,00,00)));
HXLINE( 510)				{
HXLINE( 510)					{
HXLINE( 510)						Float pos_ = ( ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset) + ((Float)1.));
HXDLIN( 510)						 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,pos_);
HXDLIN( 510)						Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 510)						if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 510)							Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 510)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            						}
            					}
HXDLIN( 510)					 ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
            				}
            			}
            		}
HXLINE( 512)		{
HXLINE( 512)			 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,0);
HXDLIN( 512)			Float _hx_tmp1 =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 512)			if ((_hx_tmp1 > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE( 512)				Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN( 512)				 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            			}
            		}
HXLINE( 513)		return str;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,hexAll,return )

Float FloatColorTriangles_Impl__obj::alphaChannel(int _hx_int){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_517_alphaChannel)
HXDLIN( 517)		return (( (Float)(((_hx_int >> 24) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,alphaChannel,return )

Float FloatColorTriangles_Impl__obj::redChannel(int _hx_int){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_520_redChannel)
HXDLIN( 520)		return (( (Float)(((_hx_int >> 16) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,redChannel,return )

Float FloatColorTriangles_Impl__obj::greenChannel(int _hx_int){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_523_greenChannel)
HXDLIN( 523)		return (( (Float)(((_hx_int >> 8) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,greenChannel,return )

Float FloatColorTriangles_Impl__obj::blueChannel(int _hx_int){
            	HX_STACKFRAME(&_hx_pos_5399da44140645b8_526_blueChannel)
HXDLIN( 526)		return (( (Float)((_hx_int & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FloatColorTriangles_Impl__obj,blueChannel,return )


FloatColorTriangles_Impl__obj::FloatColorTriangles_Impl__obj()
{
}

bool FloatColorTriangles_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"hex") ) { outValue = hex_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sign") ) { outValue = sign_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hexA") ) { outValue = hexA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hexB") ) { outValue = hexB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hexC") ) { outValue = hexC_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_x") ) { outValue = get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_x") ) { outValue = set_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y") ) { outValue = get_y_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_y") ) { outValue = set_y_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_z") ) { outValue = get_z_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_z") ) { outValue = set_z_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_ax") ) { outValue = get_ax_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_ax") ) { outValue = set_ax_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_ay") ) { outValue = get_ay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_ay") ) { outValue = set_ay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_az") ) { outValue = get_az_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_az") ) { outValue = set_az_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bx") ) { outValue = get_bx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_bx") ) { outValue = set_bx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_by") ) { outValue = get_by_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_by") ) { outValue = set_by_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bz") ) { outValue = get_bz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_bz") ) { outValue = set_bz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cx") ) { outValue = get_cx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cx") ) { outValue = set_cx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cy") ) { outValue = get_cy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cy") ) { outValue = set_cy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cz") ) { outValue = get_cz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cz") ) { outValue = set_cz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rotate") ) { outValue = rotate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hexAll") ) { outValue = hexAll_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"liteHit") ) { outValue = liteHit_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fullHit") ) { outValue = fullHit_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rgb") ) { outValue = set_rgb_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_redA") ) { outValue = get_redA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_redA") ) { outValue = set_redA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_redB") ) { outValue = get_redB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_redB") ) { outValue = set_redB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_redC") ) { outValue = get_redC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_redC") ) { outValue = set_redC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"triangle") ) { outValue = triangle_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_back") ) { outValue = get_back_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rgbA") ) { outValue = set_rgbA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_rgbA") ) { outValue = get_rgbA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rgbB") ) { outValue = set_rgbB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_rgbB") ) { outValue = get_rgbB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rgbC") ) { outValue = set_rgbC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_rgbC") ) { outValue = get_rgbC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_argb") ) { outValue = set_argb_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_blueA") ) { outValue = get_blueA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blueA") ) { outValue = set_blueA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_blueB") ) { outValue = get_blueB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blueB") ) { outValue = set_blueB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_blueC") ) { outValue = get_blueC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blueC") ) { outValue = set_blueC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_right") ) { outValue = get_right_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveDelta") ) { outValue = moveDelta_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_argbA") ) { outValue = set_argbA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_argbA") ) { outValue = get_argbA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_argbB") ) { outValue = set_argbB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_argbB") ) { outValue = get_argbB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_argbC") ) { outValue = set_argbC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_argbC") ) { outValue = get_argbC_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_greenA") ) { outValue = get_greenA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_greenA") ) { outValue = set_greenA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alphaA") ) { outValue = get_alphaA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alphaA") ) { outValue = set_alphaA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_greenB") ) { outValue = get_greenB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_greenB") ) { outValue = set_greenB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alphaB") ) { outValue = get_alphaB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alphaB") ) { outValue = set_alphaB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_greenC") ) { outValue = get_greenC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_greenC") ) { outValue = set_greenC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alphaC") ) { outValue = get_alphaC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alphaC") ) { outValue = set_alphaC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bottom") ) { outValue = get_bottom_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rotateTrig") ) { outValue = rotateTrig_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"redChannel") ) { outValue = redChannel_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"blueChannel") ) { outValue = blueChannel_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cornerColors") ) { outValue = cornerColors_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"alphaChannel") ) { outValue = alphaChannel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greenChannel") ) { outValue = greenChannel_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"adjustWinding") ) { outValue = adjustWinding_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"prettyAllVert") ) { outValue = prettyAllVert_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"colorTriangles") ) { outValue = colorTriangles_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"prettyStringVert") ) { outValue = prettyStringVert_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FloatColorTriangles_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FloatColorTriangles_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class FloatColorTriangles_Impl__obj::__mClass;

static ::String FloatColorTriangles_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("create",fc,66,0f,7c),
	HX_("get_ax",40,ec,2f,a3),
	HX_("set_ax",b4,40,78,6f),
	HX_("get_ay",41,ec,2f,a3),
	HX_("set_ay",b5,40,78,6f),
	HX_("get_az",42,ec,2f,a3),
	HX_("set_az",b6,40,78,6f),
	HX_("get_redA",59,09,62,cb),
	HX_("set_redA",cd,62,bf,79),
	HX_("get_greenA",e7,4b,07,06),
	HX_("set_greenA",5b,ea,84,09),
	HX_("get_blueA",be,60,aa,f8),
	HX_("set_blueA",ca,4c,fb,db),
	HX_("get_alphaA",ec,3a,c3,32),
	HX_("set_alphaA",60,d9,40,36),
	HX_("get_bx",1f,ed,2f,a3),
	HX_("set_bx",93,41,78,6f),
	HX_("get_by",20,ed,2f,a3),
	HX_("set_by",94,41,78,6f),
	HX_("get_bz",21,ed,2f,a3),
	HX_("set_bz",95,41,78,6f),
	HX_("get_redB",5a,09,62,cb),
	HX_("set_redB",ce,62,bf,79),
	HX_("get_greenB",e8,4b,07,06),
	HX_("set_greenB",5c,ea,84,09),
	HX_("get_blueB",bf,60,aa,f8),
	HX_("set_blueB",cb,4c,fb,db),
	HX_("get_alphaB",ed,3a,c3,32),
	HX_("set_alphaB",61,d9,40,36),
	HX_("get_cx",fe,ed,2f,a3),
	HX_("set_cx",72,42,78,6f),
	HX_("get_cy",ff,ed,2f,a3),
	HX_("set_cy",73,42,78,6f),
	HX_("get_cz",00,ee,2f,a3),
	HX_("set_cz",74,42,78,6f),
	HX_("get_redC",5b,09,62,cb),
	HX_("set_redC",cf,62,bf,79),
	HX_("get_greenC",e9,4b,07,06),
	HX_("set_greenC",5d,ea,84,09),
	HX_("get_blueC",c0,60,aa,f8),
	HX_("set_blueC",cc,4c,fb,db),
	HX_("get_alphaC",ee,3a,c3,32),
	HX_("set_alphaC",62,d9,40,36),
	HX_("triangle",c8,be,c5,8d),
	HX_("adjustWinding",4b,e4,e6,bd),
	HX_("get_x",4f,a5,60,91),
	HX_("set_x",5b,9b,2f,7a),
	HX_("get_y",50,a5,60,91),
	HX_("set_y",5c,9b,2f,7a),
	HX_("get_z",51,a5,60,91),
	HX_("set_z",5d,9b,2f,7a),
	HX_("get_right",33,68,0d,2d),
	HX_("get_bottom",b4,56,00,56),
	HX_("get_back",b0,95,cb,c0),
	HX_("moveDelta",27,b7,ed,94),
	HX_("sign",3d,90,53,4c),
	HX_("liteHit",c5,d1,fb,93),
	HX_("fullHit",04,38,2f,d0),
	HX_("rotate",5b,46,20,cb),
	HX_("rotateTrig",d7,d8,0e,85),
	HX_("colorTriangles",c8,da,ed,e6),
	HX_("cornerColors",65,87,ed,a2),
	HX_("set_rgb",b0,34,cd,19),
	HX_("set_rgbA",91,e5,c0,79),
	HX_("get_rgbA",1d,8c,63,cb),
	HX_("set_rgbB",92,e5,c0,79),
	HX_("get_rgbB",1e,8c,63,cb),
	HX_("set_rgbC",93,e5,c0,79),
	HX_("get_rgbC",1f,8c,63,cb),
	HX_("set_argb",49,a2,8c,6e),
	HX_("set_argbA",d8,5d,81,4c),
	HX_("get_argbA",cc,71,30,69),
	HX_("set_argbB",d9,5d,81,4c),
	HX_("get_argbB",cd,71,30,69),
	HX_("set_argbC",da,5d,81,4c),
	HX_("get_argbC",ce,71,30,69),
	HX_("prettyStringVert",78,0c,92,91),
	HX_("prettyAllVert",5c,06,1a,89),
	HX_("hex",db,42,4f,00),
	HX_("hexA",06,3d,0b,45),
	HX_("hexB",07,3d,0b,45),
	HX_("hexC",08,3d,0b,45),
	HX_("hexAll",06,69,19,0c),
	HX_("alphaChannel",05,49,45,60),
	HX_("redChannel",72,8b,3f,cc),
	HX_("greenChannel",40,c8,80,1b),
	HX_("blueChannel",49,cd,ee,07),
	::String(null())
};

void FloatColorTriangles_Impl__obj::__register()
{
	FloatColorTriangles_Impl__obj _hx_dummy;
	FloatColorTriangles_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("dsHelper.flatInterleave._FloatColorTriangles.FloatColorTriangles_Impl_",a4,23,08,1f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FloatColorTriangles_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FloatColorTriangles_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FloatColorTriangles_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FloatColorTriangles_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FloatColorTriangles_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace dsHelper
} // end namespace flatInterleave
} // end namespace _FloatColorTriangles
