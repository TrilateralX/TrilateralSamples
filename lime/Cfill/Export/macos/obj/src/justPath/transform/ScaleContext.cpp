// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_justPath_IPathContext
#include <justPath/IPathContext.h>
#endif
#ifndef INCLUDED_justPath_transform_ScaleContext
#include <justPath/transform/ScaleContext.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2f84ba207af4821f_7_new,"justPath.transform.ScaleContext","new",0x7bd48eb6,"justPath.transform.ScaleContext.new","justPath/transform/ScaleContext.hx",7,0x069ec878)
HX_LOCAL_STACK_FRAME(_hx_pos_2f84ba207af4821f_14_moveTo,"justPath.transform.ScaleContext","moveTo",0x508f2e56,"justPath.transform.ScaleContext.moveTo","justPath/transform/ScaleContext.hx",14,0x069ec878)
HX_LOCAL_STACK_FRAME(_hx_pos_2f84ba207af4821f_18_lineTo,"justPath.transform.ScaleContext","lineTo",0x7082a1f9,"justPath.transform.ScaleContext.lineTo","justPath/transform/ScaleContext.hx",18,0x069ec878)
HX_LOCAL_STACK_FRAME(_hx_pos_2f84ba207af4821f_22_quadTo,"justPath.transform.ScaleContext","quadTo",0x5081dd8c,"justPath.transform.ScaleContext.quadTo","justPath/transform/ScaleContext.hx",22,0x069ec878)
HX_LOCAL_STACK_FRAME(_hx_pos_2f84ba207af4821f_26_curveTo,"justPath.transform.ScaleContext","curveTo",0xb0b60160,"justPath.transform.ScaleContext.curveTo","justPath/transform/ScaleContext.hx",26,0x069ec878)
namespace justPath{
namespace transform{

void ScaleContext_obj::__construct(::Dynamic pathContext_,Float sx_,Float sy_){
            	HX_STACKFRAME(&_hx_pos_2f84ba207af4821f_7_new)
HXLINE(   8)		this->pathContext = pathContext_;
HXLINE(   9)		this->sx = sx_;
HXLINE(  10)		this->sy = sy_;
            	}

Dynamic ScaleContext_obj::__CreateEmpty() { return new ScaleContext_obj; }

void *ScaleContext_obj::_hx_vtable = 0;

Dynamic ScaleContext_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ScaleContext_obj > _hx_result = new ScaleContext_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ScaleContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x376c7278;
}

static ::justPath::IPathContext_obj _hx_justPath_transform_ScaleContext__hx_justPath_IPathContext= {
	( void (::hx::Object::*)(Float,Float))&::justPath::transform::ScaleContext_obj::moveTo,
	( void (::hx::Object::*)(Float,Float))&::justPath::transform::ScaleContext_obj::lineTo,
	( void (::hx::Object::*)(Float,Float,Float,Float))&::justPath::transform::ScaleContext_obj::quadTo,
	( void (::hx::Object::*)(Float,Float,Float,Float,Float,Float))&::justPath::transform::ScaleContext_obj::curveTo,
};

void *ScaleContext_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xed67b972: return &_hx_justPath_transform_ScaleContext__hx_justPath_IPathContext;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void ScaleContext_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_2f84ba207af4821f_14_moveTo)
HXDLIN(  14)		::justPath::IPathContext_obj::moveTo(this->pathContext,(x * this->sx),(y * this->sy));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ScaleContext_obj,moveTo,(void))

void ScaleContext_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_2f84ba207af4821f_18_lineTo)
HXDLIN(  18)		::justPath::IPathContext_obj::lineTo(this->pathContext,(x * this->sx),(y * this->sy));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ScaleContext_obj,lineTo,(void))

void ScaleContext_obj::quadTo(Float x1,Float y1,Float x2,Float y2){
            	HX_STACKFRAME(&_hx_pos_2f84ba207af4821f_22_quadTo)
HXDLIN(  22)		::justPath::IPathContext_obj::quadTo(this->pathContext,(x1 * this->sx),(y1 * this->sy),(x2 * this->sx),(y2 * this->sy));
            	}


HX_DEFINE_DYNAMIC_FUNC4(ScaleContext_obj,quadTo,(void))

void ScaleContext_obj::curveTo(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_2f84ba207af4821f_26_curveTo)
HXDLIN(  26)		::justPath::IPathContext_obj::curveTo(this->pathContext,(x1 * this->sx),(y1 * this->sy),(x2 * this->sx),(y2 * this->sy),(x3 * this->sx),(y3 * this->sy));
            	}


HX_DEFINE_DYNAMIC_FUNC6(ScaleContext_obj,curveTo,(void))


::hx::ObjectPtr< ScaleContext_obj > ScaleContext_obj::__new(::Dynamic pathContext_,Float sx_,Float sy_) {
	::hx::ObjectPtr< ScaleContext_obj > __this = new ScaleContext_obj();
	__this->__construct(pathContext_,sx_,sy_);
	return __this;
}

::hx::ObjectPtr< ScaleContext_obj > ScaleContext_obj::__alloc(::hx::Ctx *_hx_ctx,::Dynamic pathContext_,Float sx_,Float sy_) {
	ScaleContext_obj *__this = (ScaleContext_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScaleContext_obj), true, "justPath.transform.ScaleContext"));
	*(void **)__this = ScaleContext_obj::_hx_vtable;
	__this->__construct(pathContext_,sx_,sy_);
	return __this;
}

ScaleContext_obj::ScaleContext_obj()
{
}

void ScaleContext_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScaleContext);
	HX_MARK_MEMBER_NAME(pathContext,"pathContext");
	HX_MARK_MEMBER_NAME(sx,"sx");
	HX_MARK_MEMBER_NAME(sy,"sy");
	HX_MARK_END_CLASS();
}

void ScaleContext_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pathContext,"pathContext");
	HX_VISIT_MEMBER_NAME(sx,"sx");
	HX_VISIT_MEMBER_NAME(sy,"sy");
}

::hx::Val ScaleContext_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"sx") ) { return ::hx::Val( sx ); }
		if (HX_FIELD_EQ(inName,"sy") ) { return ::hx::Val( sy ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"quadTo") ) { return ::hx::Val( quadTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pathContext") ) { return ::hx::Val( pathContext ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ScaleContext_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"sx") ) { sx=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sy") ) { sy=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pathContext") ) { pathContext=inValue.Cast< ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScaleContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pathContext",ca,06,31,f6));
	outFields->push(HX_("sx",a5,64,00,00));
	outFields->push(HX_("sy",a6,64,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ScaleContext_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ScaleContext_obj,pathContext),HX_("pathContext",ca,06,31,f6)},
	{::hx::fsFloat,(int)offsetof(ScaleContext_obj,sx),HX_("sx",a5,64,00,00)},
	{::hx::fsFloat,(int)offsetof(ScaleContext_obj,sy),HX_("sy",a6,64,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ScaleContext_obj_sStaticStorageInfo = 0;
#endif

static ::String ScaleContext_obj_sMemberFields[] = {
	HX_("pathContext",ca,06,31,f6),
	HX_("sx",a5,64,00,00),
	HX_("sy",a6,64,00,00),
	HX_("moveTo",ec,d2,ac,cc),
	HX_("lineTo",8f,46,a0,ec),
	HX_("quadTo",22,82,9f,cc),
	HX_("curveTo",0a,60,88,ce),
	::String(null()) };

::hx::Class ScaleContext_obj::__mClass;

void ScaleContext_obj::__register()
{
	ScaleContext_obj _hx_dummy;
	ScaleContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("justPath.transform.ScaleContext",c4,bb,95,a5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ScaleContext_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ScaleContext_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScaleContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScaleContext_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace justPath
} // end namespace transform
