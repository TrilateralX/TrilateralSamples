// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_justPath_IPathContext
#include <justPath/IPathContext.h>
#endif
#ifndef INCLUDED_justPath_transform_ScaleTranslateContext
#include <justPath/transform/ScaleTranslateContext.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7b8aadeb74e396da_9_new,"justPath.transform.ScaleTranslateContext","new",0x3bc2fabe,"justPath.transform.ScaleTranslateContext.new","justPath/transform/ScaleTranslateContext.hx",9,0xeb67c7b4)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8aadeb74e396da_18_moveTo,"justPath.transform.ScaleTranslateContext","moveTo",0x21b5f74e,"justPath.transform.ScaleTranslateContext.moveTo","justPath/transform/ScaleTranslateContext.hx",18,0xeb67c7b4)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8aadeb74e396da_22_lineTo,"justPath.transform.ScaleTranslateContext","lineTo",0x41a96af1,"justPath.transform.ScaleTranslateContext.lineTo","justPath/transform/ScaleTranslateContext.hx",22,0xeb67c7b4)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8aadeb74e396da_26_quadTo,"justPath.transform.ScaleTranslateContext","quadTo",0x21a8a684,"justPath.transform.ScaleTranslateContext.quadTo","justPath/transform/ScaleTranslateContext.hx",26,0xeb67c7b4)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8aadeb74e396da_30_curveTo,"justPath.transform.ScaleTranslateContext","curveTo",0xe17f1168,"justPath.transform.ScaleTranslateContext.curveTo","justPath/transform/ScaleTranslateContext.hx",30,0xeb67c7b4)
namespace justPath{
namespace transform{

void ScaleTranslateContext_obj::__construct(::Dynamic pathContext_,Float dx_,Float dy_,Float sx_,Float sy_){
            	HX_STACKFRAME(&_hx_pos_7b8aadeb74e396da_9_new)
HXLINE(  10)		this->pathContext = pathContext_;
HXLINE(  11)		this->dx = dx_;
HXLINE(  12)		this->dy = dy_;
HXLINE(  13)		this->sx = sx_;
HXLINE(  14)		this->sy = sy_;
            	}

Dynamic ScaleTranslateContext_obj::__CreateEmpty() { return new ScaleTranslateContext_obj; }

void *ScaleTranslateContext_obj::_hx_vtable = 0;

Dynamic ScaleTranslateContext_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ScaleTranslateContext_obj > _hx_result = new ScaleTranslateContext_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool ScaleTranslateContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1eb54034;
}

static ::justPath::IPathContext_obj _hx_justPath_transform_ScaleTranslateContext__hx_justPath_IPathContext= {
	( void (::hx::Object::*)(Float,Float))&::justPath::transform::ScaleTranslateContext_obj::moveTo,
	( void (::hx::Object::*)(Float,Float))&::justPath::transform::ScaleTranslateContext_obj::lineTo,
	( void (::hx::Object::*)(Float,Float,Float,Float))&::justPath::transform::ScaleTranslateContext_obj::quadTo,
	( void (::hx::Object::*)(Float,Float,Float,Float,Float,Float))&::justPath::transform::ScaleTranslateContext_obj::curveTo,
};

void *ScaleTranslateContext_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xed67b972: return &_hx_justPath_transform_ScaleTranslateContext__hx_justPath_IPathContext;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void ScaleTranslateContext_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_7b8aadeb74e396da_18_moveTo)
HXDLIN(  18)		::justPath::IPathContext_obj::moveTo(this->pathContext,((x * this->sx) + this->dx),((y * this->sy) + this->dy));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ScaleTranslateContext_obj,moveTo,(void))

void ScaleTranslateContext_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_7b8aadeb74e396da_22_lineTo)
HXDLIN(  22)		::justPath::IPathContext_obj::lineTo(this->pathContext,((x * this->sx) + this->dx),((y * this->sy) + this->dy));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ScaleTranslateContext_obj,lineTo,(void))

void ScaleTranslateContext_obj::quadTo(Float x1,Float y1,Float x2,Float y2){
            	HX_STACKFRAME(&_hx_pos_7b8aadeb74e396da_26_quadTo)
HXDLIN(  26)		::justPath::IPathContext_obj::quadTo(this->pathContext,((x1 * this->sx) + this->dx),((y1 * this->sy) + this->dy),((x2 * this->sx) + this->dx),((y2 * this->sy) + this->dy));
            	}


HX_DEFINE_DYNAMIC_FUNC4(ScaleTranslateContext_obj,quadTo,(void))

void ScaleTranslateContext_obj::curveTo(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_7b8aadeb74e396da_30_curveTo)
HXDLIN(  30)		::justPath::IPathContext_obj::curveTo(this->pathContext,((x1 * this->sx) + this->dx),((y1 * this->sy) + this->dy),((x2 * this->sx) + this->dx),((y2 * this->sy) + this->dy),((x3 * this->sx) + this->dx),((y3 * this->sy) + this->dy));
            	}


HX_DEFINE_DYNAMIC_FUNC6(ScaleTranslateContext_obj,curveTo,(void))


::hx::ObjectPtr< ScaleTranslateContext_obj > ScaleTranslateContext_obj::__new(::Dynamic pathContext_,Float dx_,Float dy_,Float sx_,Float sy_) {
	::hx::ObjectPtr< ScaleTranslateContext_obj > __this = new ScaleTranslateContext_obj();
	__this->__construct(pathContext_,dx_,dy_,sx_,sy_);
	return __this;
}

::hx::ObjectPtr< ScaleTranslateContext_obj > ScaleTranslateContext_obj::__alloc(::hx::Ctx *_hx_ctx,::Dynamic pathContext_,Float dx_,Float dy_,Float sx_,Float sy_) {
	ScaleTranslateContext_obj *__this = (ScaleTranslateContext_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScaleTranslateContext_obj), true, "justPath.transform.ScaleTranslateContext"));
	*(void **)__this = ScaleTranslateContext_obj::_hx_vtable;
	__this->__construct(pathContext_,dx_,dy_,sx_,sy_);
	return __this;
}

ScaleTranslateContext_obj::ScaleTranslateContext_obj()
{
}

void ScaleTranslateContext_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScaleTranslateContext);
	HX_MARK_MEMBER_NAME(pathContext,"pathContext");
	HX_MARK_MEMBER_NAME(dx,"dx");
	HX_MARK_MEMBER_NAME(dy,"dy");
	HX_MARK_MEMBER_NAME(sx,"sx");
	HX_MARK_MEMBER_NAME(sy,"sy");
	HX_MARK_END_CLASS();
}

void ScaleTranslateContext_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pathContext,"pathContext");
	HX_VISIT_MEMBER_NAME(dx,"dx");
	HX_VISIT_MEMBER_NAME(dy,"dy");
	HX_VISIT_MEMBER_NAME(sx,"sx");
	HX_VISIT_MEMBER_NAME(sy,"sy");
}

::hx::Val ScaleTranslateContext_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"dx") ) { return ::hx::Val( dx ); }
		if (HX_FIELD_EQ(inName,"dy") ) { return ::hx::Val( dy ); }
		if (HX_FIELD_EQ(inName,"sx") ) { return ::hx::Val( sx ); }
		if (HX_FIELD_EQ(inName,"sy") ) { return ::hx::Val( sy ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"quadTo") ) { return ::hx::Val( quadTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pathContext") ) { return ::hx::Val( pathContext ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ScaleTranslateContext_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"dx") ) { dx=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dy") ) { dy=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sx") ) { sx=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sy") ) { sy=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pathContext") ) { pathContext=inValue.Cast< ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScaleTranslateContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pathContext",ca,06,31,f6));
	outFields->push(HX_("dx",94,57,00,00));
	outFields->push(HX_("dy",95,57,00,00));
	outFields->push(HX_("sx",a5,64,00,00));
	outFields->push(HX_("sy",a6,64,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ScaleTranslateContext_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ScaleTranslateContext_obj,pathContext),HX_("pathContext",ca,06,31,f6)},
	{::hx::fsFloat,(int)offsetof(ScaleTranslateContext_obj,dx),HX_("dx",94,57,00,00)},
	{::hx::fsFloat,(int)offsetof(ScaleTranslateContext_obj,dy),HX_("dy",95,57,00,00)},
	{::hx::fsFloat,(int)offsetof(ScaleTranslateContext_obj,sx),HX_("sx",a5,64,00,00)},
	{::hx::fsFloat,(int)offsetof(ScaleTranslateContext_obj,sy),HX_("sy",a6,64,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ScaleTranslateContext_obj_sStaticStorageInfo = 0;
#endif

static ::String ScaleTranslateContext_obj_sMemberFields[] = {
	HX_("pathContext",ca,06,31,f6),
	HX_("dx",94,57,00,00),
	HX_("dy",95,57,00,00),
	HX_("sx",a5,64,00,00),
	HX_("sy",a6,64,00,00),
	HX_("moveTo",ec,d2,ac,cc),
	HX_("lineTo",8f,46,a0,ec),
	HX_("quadTo",22,82,9f,cc),
	HX_("curveTo",0a,60,88,ce),
	::String(null()) };

::hx::Class ScaleTranslateContext_obj::__mClass;

void ScaleTranslateContext_obj::__register()
{
	ScaleTranslateContext_obj _hx_dummy;
	ScaleTranslateContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("justPath.transform.ScaleTranslateContext",cc,83,cb,e7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ScaleTranslateContext_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ScaleTranslateContext_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScaleTranslateContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScaleTranslateContext_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace justPath
} // end namespace transform
