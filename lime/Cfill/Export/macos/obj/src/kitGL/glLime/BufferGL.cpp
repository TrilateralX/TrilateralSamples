// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_kitGL_glLime_BufferGL
#include <kitGL/glLime/BufferGL.h>
#endif
#ifndef INCLUDED_kitGL_glLime__BufferGL_BufferGL_Fields_
#include <kitGL/glLime/_BufferGL/BufferGL_Fields_.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6435f9fad079c5e3_160_new,"kitGL.glLime.BufferGL","new",0x9932e898,"kitGL.glLime.BufferGL.new","kitGL/glLime/BufferGL.hx",160,0xff29b3b8)
namespace kitGL{
namespace glLime{

void BufferGL_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_6435f9fad079c5e3_160_new)
HXLINE( 216)		this->posColors_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::posColors_dyn();
HXLINE( 207)		this->colorsXY_RGB_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::colorsXY_RGB_dyn();
HXLINE( 200)		this->colorsXYZ_RGB_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::colorsXYZ_RGB_dyn();
HXLINE( 193)		this->colorsXY_RGBA_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::colorsXY_RGBA_dyn();
HXLINE( 186)		this->colorsXYZ_RGBA_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::colorsXYZ_RGBA_dyn();
HXLINE( 179)		this->interleaveXYZ_RGBA_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::interleaveXYZ_RGBA_dyn();
HXLINE( 172)		this->interleaveXY_RGB_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::interleaveXY_RGB_dyn();
HXLINE( 165)		this->bufferSetup_ = ::kitGL::glLime::_BufferGL::BufferGL_Fields__obj::bufferSetup_dyn();
            	}

Dynamic BufferGL_obj::__CreateEmpty() { return new BufferGL_obj; }

void *BufferGL_obj::_hx_vtable = 0;

Dynamic BufferGL_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BufferGL_obj > _hx_result = new BufferGL_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BufferGL_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x068f71da;
}


::hx::ObjectPtr< BufferGL_obj > BufferGL_obj::__new() {
	::hx::ObjectPtr< BufferGL_obj > __this = new BufferGL_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< BufferGL_obj > BufferGL_obj::__alloc(::hx::Ctx *_hx_ctx) {
	BufferGL_obj *__this = (BufferGL_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BufferGL_obj), true, "kitGL.glLime.BufferGL"));
	*(void **)__this = BufferGL_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

BufferGL_obj::BufferGL_obj()
{
}

void BufferGL_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BufferGL);
	HX_MARK_MEMBER_NAME(bufferSetup_,"bufferSetup_");
	HX_MARK_MEMBER_NAME(interleaveXY_RGB_,"interleaveXY_RGB_");
	HX_MARK_MEMBER_NAME(interleaveXYZ_RGBA_,"interleaveXYZ_RGBA_");
	HX_MARK_MEMBER_NAME(colorsXYZ_RGBA_,"colorsXYZ_RGBA_");
	HX_MARK_MEMBER_NAME(colorsXY_RGBA_,"colorsXY_RGBA_");
	HX_MARK_MEMBER_NAME(colorsXYZ_RGB_,"colorsXYZ_RGB_");
	HX_MARK_MEMBER_NAME(colorsXY_RGB_,"colorsXY_RGB_");
	HX_MARK_MEMBER_NAME(posColors_,"posColors_");
	HX_MARK_END_CLASS();
}

void BufferGL_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bufferSetup_,"bufferSetup_");
	HX_VISIT_MEMBER_NAME(interleaveXY_RGB_,"interleaveXY_RGB_");
	HX_VISIT_MEMBER_NAME(interleaveXYZ_RGBA_,"interleaveXYZ_RGBA_");
	HX_VISIT_MEMBER_NAME(colorsXYZ_RGBA_,"colorsXYZ_RGBA_");
	HX_VISIT_MEMBER_NAME(colorsXY_RGBA_,"colorsXY_RGBA_");
	HX_VISIT_MEMBER_NAME(colorsXYZ_RGB_,"colorsXYZ_RGB_");
	HX_VISIT_MEMBER_NAME(colorsXY_RGB_,"colorsXY_RGB_");
	HX_VISIT_MEMBER_NAME(posColors_,"posColors_");
}

::hx::Val BufferGL_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"posColors_") ) { return ::hx::Val( posColors_ ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bufferSetup_") ) { return ::hx::Val( bufferSetup_ ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"colorsXY_RGB_") ) { return ::hx::Val( colorsXY_RGB_ ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"colorsXY_RGBA_") ) { return ::hx::Val( colorsXY_RGBA_ ); }
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGB_") ) { return ::hx::Val( colorsXYZ_RGB_ ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGBA_") ) { return ::hx::Val( colorsXYZ_RGBA_ ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"interleaveXY_RGB_") ) { return ::hx::Val( interleaveXY_RGB_ ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"interleaveXYZ_RGBA_") ) { return ::hx::Val( interleaveXYZ_RGBA_ ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val BufferGL_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"posColors_") ) { posColors_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bufferSetup_") ) { bufferSetup_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"colorsXY_RGB_") ) { colorsXY_RGB_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"colorsXY_RGBA_") ) { colorsXY_RGBA_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGB_") ) { colorsXYZ_RGB_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"colorsXYZ_RGBA_") ) { colorsXYZ_RGBA_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"interleaveXY_RGB_") ) { interleaveXY_RGB_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"interleaveXYZ_RGBA_") ) { interleaveXYZ_RGBA_=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo BufferGL_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,bufferSetup_),HX_("bufferSetup_",62,f0,5d,74)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,interleaveXY_RGB_),HX_("interleaveXY_RGB_",15,05,57,b4)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,interleaveXYZ_RGBA_),HX_("interleaveXYZ_RGBA_",aa,3d,4b,77)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,colorsXYZ_RGBA_),HX_("colorsXYZ_RGBA_",b5,d5,1f,20)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,colorsXY_RGBA_),HX_("colorsXY_RGBA_",dd,c5,7c,08)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,colorsXYZ_RGB_),HX_("colorsXYZ_RGB_",88,a7,32,8c)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,colorsXY_RGB_),HX_("colorsXY_RGB_",60,f4,58,a5)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(BufferGL_obj,posColors_),HX_("posColors_",7b,99,a1,05)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *BufferGL_obj_sStaticStorageInfo = 0;
#endif

static ::String BufferGL_obj_sMemberFields[] = {
	HX_("bufferSetup_",62,f0,5d,74),
	HX_("interleaveXY_RGB_",15,05,57,b4),
	HX_("interleaveXYZ_RGBA_",aa,3d,4b,77),
	HX_("colorsXYZ_RGBA_",b5,d5,1f,20),
	HX_("colorsXY_RGBA_",dd,c5,7c,08),
	HX_("colorsXYZ_RGB_",88,a7,32,8c),
	HX_("colorsXY_RGB_",60,f4,58,a5),
	HX_("posColors_",7b,99,a1,05),
	::String(null()) };

::hx::Class BufferGL_obj::__mClass;

void BufferGL_obj::__register()
{
	BufferGL_obj _hx_dummy;
	BufferGL_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kitGL.glLime.BufferGL",a6,fc,c4,b9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(BufferGL_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< BufferGL_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BufferGL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BufferGL_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kitGL
} // end namespace glLime
