// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_hxPolyK__PolyK_ArrayTriple_Impl_
#define INCLUDED_hxPolyK__PolyK_ArrayTriple_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxPolyK,_PolyK,ArrayTriple_Impl_)

namespace hxPolyK{
namespace _PolyK{


class HXCPP_CLASS_ATTRIBUTES ArrayTriple_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ArrayTriple_Impl__obj OBJ_;
		ArrayTriple_Impl__obj();

	public:
		enum { _hx_ClassId = 0x0d3c0fec };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxPolyK._PolyK.ArrayTriple_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hxPolyK._PolyK.ArrayTriple_Impl_"); }

		inline static ::hx::ObjectPtr< ArrayTriple_Impl__obj > __new() {
			::hx::ObjectPtr< ArrayTriple_Impl__obj > __this = new ArrayTriple_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ArrayTriple_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			ArrayTriple_Impl__obj *__this = (ArrayTriple_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ArrayTriple_Impl__obj), false, "hxPolyK._PolyK.ArrayTriple_Impl_"));
			*(void **)__this = ArrayTriple_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ArrayTriple_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ArrayTriple_Impl_",d7,c0,dd,fa); }

		static ::cpp::VirtualArray _new(::cpp::VirtualArray arr);
		static ::Dynamic _new_dyn();

		static int get_length(::cpp::VirtualArray this1);
		static ::Dynamic get_length_dyn();

		static  ::Dynamic access(::cpp::VirtualArray this1,int key);
		static ::Dynamic access_dyn();

		static ::cpp::VirtualArray reverse(::cpp::VirtualArray this1);
		static ::Dynamic reverse_dyn();

};

} // end namespace hxPolyK
} // end namespace _PolyK

#endif /* INCLUDED_hxPolyK__PolyK_ArrayTriple_Impl_ */ 
