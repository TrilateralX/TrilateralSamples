// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_justPath__EllipseArc_ConverterArc_Impl_
#define INCLUDED_justPath__EllipseArc_ConverterArc_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(justPath,_EllipseArc,ConverterArc_Impl_)

namespace justPath{
namespace _EllipseArc{


class HXCPP_CLASS_ATTRIBUTES ConverterArc_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ConverterArc_Impl__obj OBJ_;
		ConverterArc_Impl__obj();

	public:
		enum { _hx_ClassId = 0x5c93f870 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="justPath._EllipseArc.ConverterArc_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"justPath._EllipseArc.ConverterArc_Impl_"); }

		inline static ::hx::ObjectPtr< ConverterArc_Impl__obj > __new() {
			::hx::ObjectPtr< ConverterArc_Impl__obj > __this = new ConverterArc_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ConverterArc_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			ConverterArc_Impl__obj *__this = (ConverterArc_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ConverterArc_Impl__obj), false, "justPath._EllipseArc.ConverterArc_Impl_"));
			*(void **)__this = ConverterArc_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ConverterArc_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ConverterArc_Impl_",52,ab,66,65); }

		static  ::Dynamic _new(Float sx,Float sy,Float xr,Float yr,Float phi,int large,int sweep,Float ex,Float ey);
		static ::Dynamic _new_dyn();

		static Float zeroto2pi(Float angle);
		static ::Dynamic zeroto2pi_dyn();

};

} // end namespace justPath
} // end namespace _EllipseArc

#endif /* INCLUDED_justPath__EllipseArc_ConverterArc_Impl_ */ 
