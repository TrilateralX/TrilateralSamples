// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_kitGL_glLime__HelpGL_HelpGL_Fields_
#define INCLUDED_kitGL_glLime__HelpGL_HelpGL_Fields_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(kitGL,glLime,_HelpGL,HelpGL_Fields_)
HX_DECLARE_CLASS4(lime,_internal,backend,native,NativeOpenGLRenderContext)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLObject)

namespace kitGL{
namespace glLime{
namespace _HelpGL{


class HXCPP_CLASS_ATTRIBUTES HelpGL_Fields__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef HelpGL_Fields__obj OBJ_;
		HelpGL_Fields__obj();

	public:
		enum { _hx_ClassId = 0x169e251d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kitGL.glLime._HelpGL.HelpGL_Fields_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"kitGL.glLime._HelpGL.HelpGL_Fields_"); }

		inline static ::hx::ObjectPtr< HelpGL_Fields__obj > __new() {
			::hx::ObjectPtr< HelpGL_Fields__obj > __this = new HelpGL_Fields__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< HelpGL_Fields__obj > __alloc(::hx::Ctx *_hx_ctx) {
			HelpGL_Fields__obj *__this = (HelpGL_Fields__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HelpGL_Fields__obj), false, "kitGL.glLime._HelpGL.HelpGL_Fields_"));
			*(void **)__this = HelpGL_Fields__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~HelpGL_Fields__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HelpGL_Fields_",6d,2a,4c,5b); }

		static void clearAll( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl,int width,int height);
		static ::Dynamic clearAll_dyn();

		static  ::lime::graphics::opengl::GLObject programSetup( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl,::String strVertex,::String strFragment);
		static ::Dynamic programSetup_dyn();

		static  ::lime::graphics::opengl::GLObject shaderSetup( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl,int shaderType,::String str);
		static ::Dynamic shaderSetup_dyn();

};

} // end namespace kitGL
} // end namespace glLime
} // end namespace _HelpGL

#endif /* INCLUDED_kitGL_glLime__HelpGL_HelpGL_Fields_ */ 
