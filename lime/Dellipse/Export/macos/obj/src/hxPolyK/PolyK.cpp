// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_hxPolyK_PolyK
#include <hxPolyK/PolyK.h>
#endif
#ifndef INCLUDED_hxPolyK__PolyK_ArrayPairs_Impl_
#include <hxPolyK/_PolyK/ArrayPairs_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2fc1aea7af27459c_106_new,"hxPolyK.PolyK","new",0x4afa92f2,"hxPolyK.PolyK.new","hxPolyK/PolyK.hx",106,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_109_isSimple,"hxPolyK.PolyK","isSimple",0x089d4bea,"hxPolyK.PolyK.isSimple","hxPolyK/PolyK.hx",109,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_151_isConvex,"hxPolyK.PolyK","isConvex",0x17fcbf1f,"hxPolyK.PolyK.isConvex","hxPolyK/PolyK.hx",151,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_166_getArea,"hxPolyK.PolyK","getArea",0x75a7aed5,"hxPolyK.PolyK.getArea","hxPolyK/PolyK.hx",166,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_181_getAABB,"hxPolyK.PolyK","getAABB",0x758261c8,"hxPolyK.PolyK.getAABB","hxPolyK/PolyK.hx",181,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_195_reverse,"hxPolyK.PolyK","reverse",0x7dacacb4,"hxPolyK.PolyK.reverse","hxPolyK/PolyK.hx",195,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_201_triangulate,"hxPolyK.PolyK","triangulate",0x898409be,"hxPolyK.PolyK.triangulate","hxPolyK/PolyK.hx",201,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_262_containsPoint,"hxPolyK.PolyK","containsPoint",0xf53226c3,"hxPolyK.PolyK.containsPoint","hxPolyK/PolyK.hx",262,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_333_slice,"hxPolyK.PolyK","slice",0xd291cf64,"hxPolyK.PolyK.slice","hxPolyK/PolyK.hx",333,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_305_slice,"hxPolyK.PolyK","slice",0xd291cf64,"hxPolyK.PolyK.slice","hxPolyK/PolyK.hx",305,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_396_raycast,"hxPolyK.PolyK","raycast",0x9d13a53b,"hxPolyK.PolyK.raycast","hxPolyK/PolyK.hx",396,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_432_closestEdge,"hxPolyK.PolyK","closestEdge",0x191013c8,"hxPolyK.PolyK.closestEdge","hxPolyK/PolyK.hx",432,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_465_pointLineDist,"hxPolyK.PolyK","pointLineDist",0xd25f62fc,"hxPolyK.PolyK.pointLineDist","hxPolyK/PolyK.hx",465,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_502_updateISC,"hxPolyK.PolyK","updateISC",0x493ecec2,"hxPolyK.PolyK.updateISC","hxPolyK/PolyK.hx",502,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_518_getPoints,"hxPolyK.PolyK","getPoints",0x39e6976b,"hxPolyK.PolyK.getPoints","hxPolyK/PolyK.hx",518,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_528_firstWithFlag,"hxPolyK.PolyK","firstWithFlag",0x6e7b7a34,"hxPolyK.PolyK.firstWithFlag","hxPolyK/PolyK.hx",528,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_536_pointInTriangle,"hxPolyK.PolyK","pointInTriangle",0x0b3255cf,"hxPolyK.PolyK.pointInTriangle","hxPolyK/PolyK.hx",536,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_555_rayLineIntersection,"hxPolyK.PolyK","rayLineIntersection",0xc12750f9,"hxPolyK.PolyK.rayLineIntersection","hxPolyK/PolyK.hx",555,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_574_getLineIntersection,"hxPolyK.PolyK","getLineIntersection",0x446413a5,"hxPolyK.PolyK.getLineIntersection","hxPolyK/PolyK.hx",574,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_586_inRect,"hxPolyK.PolyK","inRect",0x850cd057,"hxPolyK.PolyK.inRect","hxPolyK/PolyK.hx",586,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_598_convex,"hxPolyK.PolyK","convex",0xc4de1c15,"hxPolyK.PolyK.convex","hxPolyK/PolyK.hx",598,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_602_dist,"hxPolyK.PolyK","dist",0x49ace494,"hxPolyK.PolyK.dist","hxPolyK/PolyK.hx",602,0x7f79f9bf)
HX_LOCAL_STACK_FRAME(_hx_pos_2fc1aea7af27459c_105_boot,"hxPolyK.PolyK","boot",0x485f0160,"hxPolyK.PolyK.boot","hxPolyK/PolyK.hx",105,0x7f79f9bf)
namespace hxPolyK{

void PolyK_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_106_new)
            	}

Dynamic PolyK_obj::__CreateEmpty() { return new PolyK_obj; }

void *PolyK_obj::_hx_vtable = 0;

Dynamic PolyK_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PolyK_obj > _hx_result = new PolyK_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PolyK_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1828fe1c;
}

Float PolyK_obj::small;

bool PolyK_obj::isSimple(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_109_isSimple)
HXLINE( 110)		int n = (p->length >> 1);
HXLINE( 111)		if ((n < 4)) {
HXLINE( 111)			return true;
            		}
HXLINE( 112)		Float a1_x = ((Float)0.);
HXDLIN( 112)		Float a1_y = ((Float)0.);
HXDLIN( 112)		bool a1_flag = false;
HXLINE( 113)		Float a2_x = ((Float)0.);
HXDLIN( 113)		Float a2_y = ((Float)0.);
HXDLIN( 113)		bool a2_flag = false;
HXLINE( 114)		Float b1_x = ((Float)0.);
HXDLIN( 114)		Float b1_y = ((Float)0.);
HXDLIN( 114)		bool b1_flag = false;
HXLINE( 115)		Float b2_x = ((Float)0.);
HXDLIN( 115)		Float b2_y = ((Float)0.);
HXDLIN( 115)		bool b2_flag = false;
HXLINE( 116)		Float c_x = ((Float)0.);
HXDLIN( 116)		Float c_y = ((Float)0.);
HXDLIN( 116)		bool c_flag = false;
HXLINE( 117)		int ind;
HXLINE( 118)		{
HXLINE( 118)			int _g = 0;
HXDLIN( 118)			int _g1 = n;
HXDLIN( 118)			while((_g < _g1)){
HXLINE( 118)				_g = (_g + 1);
HXDLIN( 118)				int i = (_g - 1);
HXLINE( 119)				ind = ::Std_obj::_hx_int(( (Float)((2 * i)) ));
HXLINE( 120)				a1_x = p->__get(ind);
HXLINE( 121)				a1_y = p->__get((ind + 1));
HXLINE( 122)				if ((i == (n - 1))) {
HXLINE( 123)					a2_x = p->__get(0);
HXLINE( 124)					a2_y = p->__get(1);
            				}
            				else {
HXLINE( 126)					a2_x = p->__get((ind + 2));
HXLINE( 127)					a2_y = p->__get((ind + 3));
            				}
HXLINE( 129)				{
HXLINE( 129)					int _g1 = 0;
HXDLIN( 129)					int _g2 = n;
HXDLIN( 129)					while((_g1 < _g2)){
HXLINE( 129)						_g1 = (_g1 + 1);
HXDLIN( 129)						int j = (_g1 - 1);
HXLINE( 130)						if ((::Math_obj::abs(( (Float)((i - j)) )) < 2)) {
HXLINE( 130)							continue;
            						}
HXLINE( 131)						bool _hx_tmp;
HXDLIN( 131)						if ((j == (n - 1))) {
HXLINE( 131)							_hx_tmp = (i == 0);
            						}
            						else {
HXLINE( 131)							_hx_tmp = false;
            						}
HXDLIN( 131)						if (_hx_tmp) {
HXLINE( 131)							continue;
            						}
HXLINE( 132)						bool _hx_tmp1;
HXDLIN( 132)						if ((i == (n - 1))) {
HXLINE( 132)							_hx_tmp1 = (j == 0);
            						}
            						else {
HXLINE( 132)							_hx_tmp1 = false;
            						}
HXDLIN( 132)						if (_hx_tmp1) {
HXLINE( 132)							continue;
            						}
HXLINE( 133)						ind = (2 * j);
HXLINE( 134)						b1_x = p->__get(ind);
HXLINE( 135)						b1_y = p->__get((ind + 1));
HXLINE( 136)						if ((j == (n - 1))) {
HXLINE( 137)							b2_x = p->__get(0);
HXLINE( 138)							b2_y = p->__get(1);
            						}
            						else {
HXLINE( 140)							b2_x = p->__get((ind + 2));
HXLINE( 141)							b2_y = p->__get((ind + 3));
            						}
HXLINE( 143)						Float dax = (a1_x - a2_x);
HXDLIN( 143)						Float dbx = (b1_x - b2_x);
HXDLIN( 143)						Float day = (a1_y - a2_y);
HXDLIN( 143)						Float dby = (b1_y - b2_y);
HXDLIN( 143)						Float Den = ((dax * dby) - (day * dbx));
HXDLIN( 143)						 ::Dynamic c;
HXDLIN( 143)						if ((Den == 0)) {
HXLINE( 143)							c = null();
            						}
            						else {
HXLINE( 143)							Float A = ((a1_x * a2_y) - (a1_y * a2_x));
HXDLIN( 143)							Float B = ((b1_x * b2_y) - (b1_y * b2_x));
HXDLIN( 143)							 ::Dynamic I =  ::Dynamic(::hx::Anon_obj::Create(3)
            								->setFixed(0,HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) / Den))
            								->setFixed(1,HX_("y",79,00,00,00),(((A * dby) - (day * B)) / Den))
            								->setFixed(2,HX_("flag",ac,0b,be,43),false));
HXDLIN( 143)							bool c1;
HXDLIN( 143)							Float minx = ::Math_obj::min(a1_x,a2_x);
HXDLIN( 143)							Float maxx = ::Math_obj::max(a1_x,a2_x);
HXDLIN( 143)							Float miny = ::Math_obj::min(a1_y,a2_y);
HXDLIN( 143)							Float maxy = ::Math_obj::max(a1_y,a2_y);
HXDLIN( 143)							bool c2;
HXDLIN( 143)							if ((minx == maxx)) {
HXLINE( 143)								if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 143)									c2 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            								}
            								else {
HXLINE( 143)									c2 = false;
            								}
            							}
            							else {
HXLINE( 143)								if ((miny == maxy)) {
HXLINE( 143)									if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 143)										c2 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            									}
            									else {
HXLINE( 143)										c2 = false;
            									}
            								}
            								else {
HXLINE( 143)									bool c;
HXDLIN( 143)									bool c1;
HXDLIN( 143)									if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 143)										c1 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            									}
            									else {
HXLINE( 143)										c1 = false;
            									}
HXDLIN( 143)									if (c1) {
HXLINE( 143)										c = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            									}
            									else {
HXLINE( 143)										c = false;
            									}
HXDLIN( 143)									if (c) {
HXLINE( 143)										c2 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            									}
            									else {
HXLINE( 143)										c2 = false;
            									}
            								}
            							}
HXDLIN( 143)							if (c2) {
HXLINE( 143)								Float minx = ::Math_obj::min(b1_x,b2_x);
HXDLIN( 143)								Float maxx = ::Math_obj::max(b1_x,b2_x);
HXDLIN( 143)								Float miny = ::Math_obj::min(b1_y,b2_y);
HXDLIN( 143)								Float maxy = ::Math_obj::max(b1_y,b2_y);
HXDLIN( 143)								if ((minx == maxx)) {
HXLINE( 143)									if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 143)										c1 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            									}
            									else {
HXLINE( 143)										c1 = false;
            									}
            								}
            								else {
HXLINE( 143)									if ((miny == maxy)) {
HXLINE( 143)										if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 143)											c1 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            										}
            										else {
HXLINE( 143)											c1 = false;
            										}
            									}
            									else {
HXLINE( 143)										bool c;
HXDLIN( 143)										bool c2;
HXDLIN( 143)										if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 143)											c2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            										}
            										else {
HXLINE( 143)											c2 = false;
            										}
HXDLIN( 143)										if (c2) {
HXLINE( 143)											c = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            										}
            										else {
HXLINE( 143)											c = false;
            										}
HXDLIN( 143)										if (c) {
HXLINE( 143)											c1 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            										}
            										else {
HXLINE( 143)											c1 = false;
            										}
            									}
            								}
            							}
            							else {
HXLINE( 143)								c1 = false;
            							}
HXDLIN( 143)							if (c1) {
HXLINE( 143)								c = I;
            							}
            							else {
HXLINE( 143)								c = null();
            							}
            						}
HXDLIN( 143)						 ::Dynamic c1 = c;
HXLINE( 144)						if (::hx::IsNotNull( c1 )) {
HXLINE( 144)							return false;
            						}
            					}
            				}
            			}
            		}
HXLINE( 147)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,isSimple,return )

bool PolyK_obj::isConvex(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_151_isConvex)
HXLINE( 152)		if ((p->length < 6)) {
HXLINE( 152)			return true;
            		}
HXLINE( 153)		int l = (p->length - 4);
HXLINE( 154)		int l2 = ::Std_obj::_hx_int((( (Float)(l) ) / ( (Float)(2) )));
HXLINE( 155)		int i;
HXLINE( 156)		{
HXLINE( 156)			int _g = 0;
HXDLIN( 156)			int _g1 = l2;
HXDLIN( 156)			while((_g < _g1)){
HXLINE( 156)				_g = (_g + 1);
HXDLIN( 156)				int k = (_g - 1);
HXLINE( 157)				i = (k * 2);
HXLINE( 158)				Float bx = p->__get((i + 2));
HXDLIN( 158)				Float by = p->__get((i + 3));
HXDLIN( 158)				if (!(((((p->__get((i + 1)) - by) * (p->__get((i + 4)) - bx)) + ((bx - p->__get(i)) * (p->__get((i + 5)) - by))) >= 0))) {
HXLINE( 158)					return false;
            				}
            			}
            		}
HXLINE( 160)		Float bx = p->__get((l + 2));
HXDLIN( 160)		Float by = p->__get((l + 3));
HXDLIN( 160)		if (!(((((p->__get((l + 1)) - by) * (p->__get(0) - bx)) + ((bx - p->__get(l)) * (p->__get(1) - by))) >= 0))) {
HXLINE( 160)			return false;
            		}
HXLINE( 161)		Float bx1 = p->__get(0);
HXDLIN( 161)		Float by1 = p->__get(1);
HXDLIN( 161)		if (!(((((p->__get((l + 3)) - by1) * (p->__get(2) - bx1)) + ((bx1 - p->__get((l + 2))) * (p->__get(3) - by1))) >= 0))) {
HXLINE( 161)			return false;
            		}
HXLINE( 162)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,isConvex,return )

Float PolyK_obj::getArea(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_166_getArea)
HXLINE( 167)		if ((p->length < 6)) {
HXLINE( 167)			return ( (Float)(0) );
            		}
HXLINE( 168)		int l = (p->length - 2);
HXLINE( 169)		Float sum = ((Float)0.);
HXLINE( 170)		int l2 = ::Std_obj::_hx_int((( (Float)(l) ) / ( (Float)(2) )));
HXLINE( 171)		int i;
HXLINE( 172)		{
HXLINE( 172)			int _g = 0;
HXDLIN( 172)			int _g1 = l2;
HXDLIN( 172)			while((_g < _g1)){
HXLINE( 172)				_g = (_g + 1);
HXDLIN( 172)				int k = (_g - 1);
HXLINE( 173)				i = (k * 2);
HXLINE( 174)				sum = (sum + ((p->__get((i + 2)) - p->__get(i)) * (p->__get((i + 1)) + p->__get((i + 3)))));
            			}
            		}
HXLINE( 176)		sum = (sum + ((p->__get(0) - p->__get(l)) * (p->__get((l + 1)) + p->__get(1))));
HXLINE( 177)		return (-(sum) * ((Float)0.5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,getArea,return )

 ::Dynamic PolyK_obj::getAABB(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_181_getAABB)
HXLINE( 182)		Float minx = ::Math_obj::POSITIVE_INFINITY;
HXLINE( 183)		Float miny = ::Math_obj::POSITIVE_INFINITY;
HXLINE( 184)		Float maxx = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 185)		Float maxy = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 186)		{
HXLINE( 186)			int _g = 0;
HXDLIN( 186)			::Array< Float > _g1 = ::hxPolyK::_PolyK::ArrayPairs_Impl__obj::_new(p);
HXDLIN( 186)			while((_g < ::Std_obj::_hx_int((( (Float)(_g1->length) ) / ( (Float)(2) ))))){
HXLINE( 186)				int i = ::Std_obj::_hx_int(( (Float)((_g * 2)) ));
HXDLIN( 186)				Float i_x = _g1->__get(i);
HXDLIN( 186)				Float i_y = _g1->__get((i + 1));
HXDLIN( 186)				_g = (_g + 1);
HXLINE( 187)				minx = ::Math_obj::min(minx,i_x);
HXLINE( 188)				maxx = ::Math_obj::max(maxx,i_x);
HXLINE( 189)				miny = ::Math_obj::min(miny,i_y);
HXLINE( 190)				maxy = ::Math_obj::max(maxy,i_y);
            			}
            		}
HXLINE( 192)		return  ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("width",06,b6,62,ca),(maxx - minx))
            			->setFixed(1,HX_("x",78,00,00,00),minx)
            			->setFixed(2,HX_("y",79,00,00,00),miny)
            			->setFixed(3,HX_("height",e7,07,4c,02),(maxy - miny)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,getAABB,return )

::Array< Float > PolyK_obj::reverse(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_195_reverse)
HXLINE( 196)		::Array< Float > ap = ::hxPolyK::_PolyK::ArrayPairs_Impl__obj::_new(p);
HXLINE( 197)		::Array< Float > arr = ::Array_obj< Float >::__new(0);
HXDLIN( 197)		{
HXLINE( 197)			int _g = 0;
HXDLIN( 197)			::Array< Float > _g1 = ::hxPolyK::_PolyK::ArrayPairs_Impl__obj::_new(ap);
HXDLIN( 197)			while((_g < ::Std_obj::_hx_int((( (Float)(_g1->length) ) / ( (Float)(2) ))))){
HXLINE( 197)				int i = ::Std_obj::_hx_int(( (Float)((_g * 2)) ));
HXDLIN( 197)				Float i_x = _g1->__get(i);
HXDLIN( 197)				Float i_y = _g1->__get((i + 1));
HXDLIN( 197)				_g = (_g + 1);
HXDLIN( 197)				arr->unshift(i_y);
HXDLIN( 197)				arr->unshift(i_x);
            			}
            		}
HXDLIN( 197)		ap = arr;
HXDLIN( 197)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,reverse,return )

::Array< Float > PolyK_obj::triangulate(::Array< Float > p){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_201_triangulate)
HXLINE( 202)		int n = (p->length >> 1);
HXLINE( 203)		if ((n < 3)) {
HXLINE( 203)			return ::Array_obj< Float >::__new(0);
            		}
HXLINE( 204)		::Array< Float > tgs = ::Array_obj< Float >::__new();
HXLINE( 205)		::Array< int > avl = ::Array_obj< int >::__new(0);
HXLINE( 206)		{
HXLINE( 206)			int _g = 0;
HXDLIN( 206)			int _g1 = n;
HXDLIN( 206)			while((_g < _g1)){
HXLINE( 206)				_g = (_g + 1);
HXDLIN( 206)				int i = (_g - 1);
HXDLIN( 206)				avl->push(i);
            			}
            		}
HXLINE( 207)		int i = 0;
HXLINE( 208)		int al = n;
HXLINE( 209)		int i0;
HXLINE( 210)		int i1;
HXLINE( 211)		int i2;
HXLINE( 212)		int vi;
HXLINE( 213)		Float ax;
HXLINE( 214)		Float ay;
HXLINE( 215)		Float bx;
HXLINE( 216)		Float by;
HXLINE( 217)		Float cx;
HXLINE( 218)		Float cy;
HXLINE( 219)		bool earFound;
HXLINE( 220)		while((al > 3)){
HXLINE( 221)			i0 = avl->__get(::hx::Mod(i,al));
HXLINE( 222)			i1 = avl->__get(::hx::Mod((i + 1),al));
HXLINE( 223)			i2 = avl->__get(::hx::Mod((i + 2),al));
HXLINE( 224)			ax = p->__get((2 * i0));
HXLINE( 225)			ay = p->__get(((2 * i0) + 1));
HXLINE( 226)			bx = p->__get((2 * i1));
HXLINE( 227)			by = p->__get(((2 * i1) + 1));
HXLINE( 228)			cx = p->__get((2 * i2));
HXLINE( 229)			cy = p->__get(((2 * i2) + 1));
HXLINE( 230)			earFound = false;
HXLINE( 231)			if (((((ay - by) * (cx - bx)) + ((bx - ax) * (cy - by))) >= 0)) {
HXLINE( 232)				earFound = true;
HXLINE( 233)				{
HXLINE( 233)					int _g = 0;
HXDLIN( 233)					int _g1 = al;
HXDLIN( 233)					while((_g < _g1)){
HXLINE( 233)						_g = (_g + 1);
HXDLIN( 233)						int j = (_g - 1);
HXLINE( 234)						int vi = avl->__get(j);
HXLINE( 235)						bool _hx_tmp;
HXDLIN( 235)						bool _hx_tmp1;
HXDLIN( 235)						if ((vi != i0)) {
HXLINE( 235)							_hx_tmp1 = (vi == i1);
            						}
            						else {
HXLINE( 235)							_hx_tmp1 = true;
            						}
HXDLIN( 235)						if (!(_hx_tmp1)) {
HXLINE( 235)							_hx_tmp = (vi == i2);
            						}
            						else {
HXLINE( 235)							_hx_tmp = true;
            						}
HXDLIN( 235)						if (_hx_tmp) {
HXLINE( 235)							continue;
            						}
HXLINE( 236)						Float v0x = (cx - ax);
HXDLIN( 236)						Float v0y = (cy - ay);
HXDLIN( 236)						Float v1x = (bx - ax);
HXDLIN( 236)						Float v1y = (by - ay);
HXDLIN( 236)						Float v2x = (p->__get((2 * vi)) - ax);
HXDLIN( 236)						Float v2y = (p->__get(((2 * vi) + 1)) - ay);
HXDLIN( 236)						Float dot00 = ((v0x * v0x) + (v0y * v0y));
HXDLIN( 236)						Float dot01 = ((v0x * v1x) + (v0y * v1y));
HXDLIN( 236)						Float dot02 = ((v0x * v2x) + (v0y * v2y));
HXDLIN( 236)						Float dot11 = ((v1x * v1x) + (v1y * v1y));
HXDLIN( 236)						Float dot12 = ((v1x * v2x) + (v1y * v2y));
HXDLIN( 236)						Float invDenom = (( (Float)(1) ) / ((dot00 * dot11) - (dot01 * dot01)));
HXDLIN( 236)						Float u = (((dot11 * dot02) - (dot01 * dot12)) * invDenom);
HXDLIN( 236)						Float v = (((dot00 * dot12) - (dot01 * dot02)) * invDenom);
HXDLIN( 236)						bool _hx_tmp2;
HXDLIN( 236)						bool _hx_tmp3;
HXDLIN( 236)						if ((u >= 0)) {
HXLINE( 236)							_hx_tmp3 = (v >= 0);
            						}
            						else {
HXLINE( 236)							_hx_tmp3 = false;
            						}
HXDLIN( 236)						if (_hx_tmp3) {
HXLINE( 236)							_hx_tmp2 = ((u + v) < 1);
            						}
            						else {
HXLINE( 236)							_hx_tmp2 = false;
            						}
HXDLIN( 236)						if (_hx_tmp2) {
HXLINE( 237)							earFound = false;
HXLINE( 238)							goto _hx_goto_14;
            						}
            					}
            					_hx_goto_14:;
            				}
            			}
HXLINE( 242)			if (earFound) {
HXLINE( 243)				tgs->push(i0);
HXLINE( 244)				tgs->push(i1);
HXLINE( 245)				tgs->push(i2);
HXLINE( 246)				avl->removeRange(::hx::Mod((i + 1),al),1);
HXLINE( 247)				al = (al - 1);
HXLINE( 248)				i = 0;
            			}
            			else {
HXLINE( 249)				i = (i + 1);
HXDLIN( 249)				if (((i - 1) > (3 * al))) {
HXLINE( 250)					goto _hx_goto_13;
            				}
            			}
            		}
            		_hx_goto_13:;
HXLINE( 253)		tgs->push(avl->__get(0));
HXLINE( 254)		tgs->push(avl->__get(1));
HXLINE( 255)		tgs->push(avl->__get(2));
HXLINE( 256)		return tgs;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PolyK_obj,triangulate,return )

bool PolyK_obj::containsPoint(::Array< Float > p,Float px,Float py){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_262_containsPoint)
HXLINE( 263)		int n = (p->length >> 1);
HXLINE( 264)		Float ax;
HXLINE( 265)		Float ay = (p->__get(((2 * n) - 3)) - py);
HXLINE( 266)		Float bx = (p->__get(((2 * n) - 2)) - px);
HXLINE( 267)		Float by = (p->__get(((2 * n) - 1)) - py);
HXLINE( 268)		int twoi;
HXLINE( 269)		bool lup = (by > ay);
HXLINE( 270)		Float lx;
HXLINE( 271)		{
HXLINE( 271)			int _g = 0;
HXDLIN( 271)			int _g1 = n;
HXDLIN( 271)			while((_g < _g1)){
HXLINE( 271)				_g = (_g + 1);
HXDLIN( 271)				int i = (_g - 1);
HXLINE( 272)				ax = bx;
HXLINE( 273)				ay = by;
HXLINE( 274)				twoi = (2 * i);
HXLINE( 275)				bx = (p->__get(twoi) - px);
HXLINE( 276)				by = (p->__get((twoi + 1)) - py);
HXLINE( 277)				if ((ay == by)) {
HXLINE( 277)					continue;
            				}
HXLINE( 278)				lup = (by > ay);
            			}
            		}
HXLINE( 280)		int depth = 0;
HXLINE( 281)		{
HXLINE( 281)			int _g2 = 0;
HXDLIN( 281)			int _g3 = n;
HXDLIN( 281)			while((_g2 < _g3)){
HXLINE( 281)				_g2 = (_g2 + 1);
HXDLIN( 281)				int i = (_g2 - 1);
HXLINE( 282)				ax = bx;
HXLINE( 283)				ay = by;
HXLINE( 284)				twoi = (2 * i);
HXLINE( 285)				bx = (p->__get(twoi) - px);
HXLINE( 286)				by = (p->__get((twoi + 1)) - py);
HXLINE( 287)				bool _hx_tmp;
HXDLIN( 287)				if ((ay < 0)) {
HXLINE( 287)					_hx_tmp = (by < 0);
            				}
            				else {
HXLINE( 287)					_hx_tmp = false;
            				}
HXDLIN( 287)				if (_hx_tmp) {
HXLINE( 287)					continue;
            				}
HXLINE( 288)				bool _hx_tmp1;
HXDLIN( 288)				if ((ay > 0)) {
HXLINE( 288)					_hx_tmp1 = (by > 0);
            				}
            				else {
HXLINE( 288)					_hx_tmp1 = false;
            				}
HXDLIN( 288)				if (_hx_tmp1) {
HXLINE( 288)					continue;
            				}
HXLINE( 289)				bool _hx_tmp2;
HXDLIN( 289)				if ((ax < 0)) {
HXLINE( 289)					_hx_tmp2 = (bx < 0);
            				}
            				else {
HXLINE( 289)					_hx_tmp2 = false;
            				}
HXDLIN( 289)				if (_hx_tmp2) {
HXLINE( 289)					continue;
            				}
HXLINE( 290)				bool _hx_tmp3;
HXDLIN( 290)				if ((ay == by)) {
HXLINE( 290)					_hx_tmp3 = (::Math_obj::min(ax,bx) <= 0);
            				}
            				else {
HXLINE( 290)					_hx_tmp3 = false;
            				}
HXDLIN( 290)				if (_hx_tmp3) {
HXLINE( 290)					return true;
            				}
HXLINE( 291)				if ((ay == by)) {
HXLINE( 291)					continue;
            				}
HXLINE( 292)				lx = (ax + (((bx - ax) * -(ay)) / (by - ay)));
HXLINE( 293)				if ((lx == 0)) {
HXLINE( 293)					return true;
            				}
HXLINE( 294)				if ((lx > 0)) {
HXLINE( 294)					depth = (depth + 1);
            				}
HXLINE( 295)				bool _hx_tmp4;
HXDLIN( 295)				bool _hx_tmp5;
HXDLIN( 295)				if ((ay == 0)) {
HXLINE( 295)					_hx_tmp5 = lup;
            				}
            				else {
HXLINE( 295)					_hx_tmp5 = false;
            				}
HXDLIN( 295)				if (_hx_tmp5) {
HXLINE( 295)					_hx_tmp4 = (by > ay);
            				}
            				else {
HXLINE( 295)					_hx_tmp4 = false;
            				}
HXDLIN( 295)				if (_hx_tmp4) {
HXLINE( 295)					depth = (depth - 1);
            				}
HXLINE( 296)				bool _hx_tmp6;
HXDLIN( 296)				bool _hx_tmp7;
HXDLIN( 296)				if ((ay == 0)) {
HXLINE( 296)					_hx_tmp7 = !(lup);
            				}
            				else {
HXLINE( 296)					_hx_tmp7 = false;
            				}
HXDLIN( 296)				if (_hx_tmp7) {
HXLINE( 296)					_hx_tmp6 = (by < ay);
            				}
            				else {
HXLINE( 296)					_hx_tmp6 = false;
            				}
HXDLIN( 296)				if (_hx_tmp6) {
HXLINE( 296)					depth = (depth - 1);
            				}
HXLINE( 297)				lup = (by > ay);
            			}
            		}
HXLINE( 299)		return ((depth & 1) == 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PolyK_obj,containsPoint,return )

::Array< ::Dynamic> PolyK_obj::slice(::Array< Float > p,Float ax,Float ay,Float bx,Float by){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,Float,a_y,Float,a_x) HXARGC(2)
            		int _hx_run( ::Dynamic u, ::Dynamic v){
            			HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_333_slice)
HXLINE( 334)			Float dx = (( (Float)(u->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - a_x);
HXDLIN( 334)			Float dy = (( (Float)(u->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - a_y);
HXDLIN( 334)			Float dx1 = (( (Float)(v->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - a_x);
HXDLIN( 334)			Float dy1 = (( (Float)(v->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - a_y);
HXDLIN( 334)			Float val = (::Math_obj::sqrt(((dx * dx) + (dy * dy))) - ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1))));
HXLINE( 335)			if ((val > 0)) {
HXLINE( 336)				return 1;
            			}
HXLINE( 338)			if ((val < 0)) {
HXLINE( 339)				return -1;
            			}
HXLINE( 341)			return 0;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_305_slice)
HXLINE( 306)		bool _hx_tmp;
HXDLIN( 306)		if (!(::hxPolyK::PolyK_obj::containsPoint(p,ax,ay))) {
HXLINE( 306)			_hx_tmp = ::hxPolyK::PolyK_obj::containsPoint(p,bx,by);
            		}
            		else {
HXLINE( 306)			_hx_tmp = true;
            		}
HXDLIN( 306)		if (_hx_tmp) {
HXLINE( 306)			return ::Array_obj< ::Dynamic>::__new(1)->init(0,p->slice(0,null()));
            		}
HXLINE( 307)		Float a_y;
HXDLIN( 307)		Float a_x = ax;
HXDLIN( 307)		a_y = ay;
HXDLIN( 307)		bool a_flag = false;
HXLINE( 308)		Float b_x = ax;
HXDLIN( 308)		Float b_y = ay;
HXDLIN( 308)		bool b_flag = false;
HXLINE( 309)		::Array< ::Dynamic> iscs = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 310)		::Array< ::Dynamic> ps = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 311)		{
HXLINE( 311)			int _g = 0;
HXDLIN( 311)			::Array< Float > _g1 = ::hxPolyK::_PolyK::ArrayPairs_Impl__obj::_new(p);
HXDLIN( 311)			while((_g < ::Std_obj::_hx_int((( (Float)(_g1->length) ) / ( (Float)(2) ))))){
HXLINE( 311)				int i = ::Std_obj::_hx_int(( (Float)((_g * 2)) ));
HXDLIN( 311)				Float i_x = _g1->__get(i);
HXDLIN( 311)				Float i_y = _g1->__get((i + 1));
HXDLIN( 311)				_g = (_g + 1);
HXDLIN( 311)				ps->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("x",78,00,00,00),i_x)
            					->setFixed(1,HX_("y",79,00,00,00),i_y)
            					->setFixed(2,HX_("flag",ac,0b,be,43),false)));
            			}
            		}
HXLINE( 312)		int l = ps->length;
HXLINE( 313)		 ::Dynamic isc;
HXLINE( 314)		bool skip = false;
HXLINE( 315)		{
HXLINE( 315)			int _g2 = 0;
HXDLIN( 315)			int _g3 = l;
HXDLIN( 315)			while((_g2 < _g3)){
HXLINE( 315)				_g2 = (_g2 + 1);
HXDLIN( 315)				int i = (_g2 - 1);
HXLINE( 316)				if (skip) {
HXLINE( 317)					skip = false;
HXLINE( 318)					continue;
            				}
HXLINE( 320)				 ::Dynamic b1 = ps->__get(i);
HXDLIN( 320)				 ::Dynamic b2 = ps->__get(::hx::Mod((i + 1),ps->length));
HXDLIN( 320)				Float dax = (a_x - b_x);
HXDLIN( 320)				Float dbx = (( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)				Float day = (a_y - b_y);
HXDLIN( 320)				Float dby = (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)				Float Den = ((dax * dby) - (day * dbx));
HXDLIN( 320)				if ((Den == 0)) {
HXLINE( 320)					isc = null();
            				}
            				else {
HXLINE( 320)					Float A = ((a_x * b_y) - (a_y * b_x));
HXDLIN( 320)					Float B = ((( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXDLIN( 320)					 ::Dynamic I =  ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) / Den))
            						->setFixed(1,HX_("y",79,00,00,00),(((A * dby) - (day * B)) / Den))
            						->setFixed(2,HX_("flag",ac,0b,be,43),false));
HXDLIN( 320)					bool isc1;
HXDLIN( 320)					Float minx = ::Math_obj::min(a_x,b_x);
HXDLIN( 320)					Float maxx = ::Math_obj::max(a_x,b_x);
HXDLIN( 320)					Float miny = ::Math_obj::min(a_y,b_y);
HXDLIN( 320)					Float maxy = ::Math_obj::max(a_y,b_y);
HXDLIN( 320)					bool isc2;
HXDLIN( 320)					if ((minx == maxx)) {
HXLINE( 320)						if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 320)							isc2 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            						}
            						else {
HXLINE( 320)							isc2 = false;
            						}
            					}
            					else {
HXLINE( 320)						if ((miny == maxy)) {
HXLINE( 320)							if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 320)								isc2 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            							}
            							else {
HXLINE( 320)								isc2 = false;
            							}
            						}
            						else {
HXLINE( 320)							bool isc;
HXDLIN( 320)							bool isc1;
HXDLIN( 320)							if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 320)								isc1 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            							}
            							else {
HXLINE( 320)								isc1 = false;
            							}
HXDLIN( 320)							if (isc1) {
HXLINE( 320)								isc = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            							}
            							else {
HXLINE( 320)								isc = false;
            							}
HXDLIN( 320)							if (isc) {
HXLINE( 320)								isc2 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            							}
            							else {
HXLINE( 320)								isc2 = false;
            							}
            						}
            					}
HXDLIN( 320)					if (isc2) {
HXLINE( 320)						Float minx = ::Math_obj::min(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)						Float maxx = ::Math_obj::max(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)						Float miny = ::Math_obj::min(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)						Float maxy = ::Math_obj::max(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 320)						if ((minx == maxx)) {
HXLINE( 320)							if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 320)								isc1 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            							}
            							else {
HXLINE( 320)								isc1 = false;
            							}
            						}
            						else {
HXLINE( 320)							if ((miny == maxy)) {
HXLINE( 320)								if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 320)									isc1 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            								}
            								else {
HXLINE( 320)									isc1 = false;
            								}
            							}
            							else {
HXLINE( 320)								bool isc;
HXDLIN( 320)								bool isc2;
HXDLIN( 320)								if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 320)									isc2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            								}
            								else {
HXLINE( 320)									isc2 = false;
            								}
HXDLIN( 320)								if (isc2) {
HXLINE( 320)									isc = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            								}
            								else {
HXLINE( 320)									isc = false;
            								}
HXDLIN( 320)								if (isc) {
HXLINE( 320)									isc1 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            								}
            								else {
HXLINE( 320)									isc1 = false;
            								}
            							}
            						}
            					}
            					else {
HXLINE( 320)						isc1 = false;
            					}
HXDLIN( 320)					if (isc1) {
HXLINE( 320)						isc = I;
            					}
            					else {
HXLINE( 320)						isc = null();
            					}
            				}
HXLINE( 321)				 ::Dynamic fisc = iscs->__get(0);
HXLINE( 322)				 ::Dynamic lisc = iscs->__get((iscs->length - 1));
HXLINE( 323)				bool _hx_tmp;
HXDLIN( 323)				bool _hx_tmp1;
HXDLIN( 323)				if (::hx::IsNotNull( isc )) {
HXLINE( 323)					if (::hx::IsNotNull( fisc )) {
HXLINE( 323)						Float dx = (( (Float)(fisc->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(isc->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 323)						Float dy = (( (Float)(fisc->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(isc->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 323)						_hx_tmp1 = (::Math_obj::sqrt(((dx * dx) + (dy * dy))) > ((Float)0.0000000001));
            					}
            					else {
HXLINE( 323)						_hx_tmp1 = true;
            					}
            				}
            				else {
HXLINE( 323)					_hx_tmp1 = false;
            				}
HXDLIN( 323)				if (_hx_tmp1) {
HXLINE( 323)					if (::hx::IsNotNull( lisc )) {
HXLINE( 323)						Float dx = (( (Float)(lisc->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(isc->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 323)						Float dy = (( (Float)(lisc->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(isc->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 323)						_hx_tmp = (::Math_obj::sqrt(((dx * dx) + (dy * dy))) > ((Float)0.0000000001));
            					}
            					else {
HXLINE( 323)						_hx_tmp = true;
            					}
            				}
            				else {
HXLINE( 323)					_hx_tmp = false;
            				}
HXDLIN( 323)				if (_hx_tmp) {
HXLINE( 325)					isc->__SetField(HX_("flag",ac,0b,be,43),true,::hx::paccDynamic);
HXLINE( 326)					iscs->push(isc);
HXLINE( 327)					ps->removeRange((i + 1),0);
HXLINE( 328)					ps->insert((i + 1),isc);
HXLINE( 329)					skip = true;
            				}
            			}
            		}
HXLINE( 332)		if ((iscs->length < 2)) {
HXLINE( 332)			return ::Array_obj< ::Dynamic>::__new(1)->init(0,p->slice(0,null()));
            		}
HXLINE( 333)		 ::Dynamic comp =  ::Dynamic(new _hx_Closure_0(a_y,a_x));
HXLINE( 343)		iscs->sort(comp);
HXLINE( 344)		::Array< ::Dynamic> pgs = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 345)		int dir = 0;
HXLINE( 346)		while((iscs->length > 0)){
HXLINE( 347)			int n = ps->length;
HXLINE( 348)			 ::Dynamic i0 = iscs->__get(0);
HXLINE( 349)			 ::Dynamic i1 = iscs->__get(1);
HXLINE( 351)			int ind0 = ps->indexOf(i0,null());
HXLINE( 352)			int ind1 = ps->indexOf(i1,null());
HXLINE( 353)			bool solved = false;
HXLINE( 354)			if ((::hxPolyK::PolyK_obj::firstWithFlag(ps,ind0) == ind1)) {
HXLINE( 355)				solved = true;
            			}
            			else {
HXLINE( 357)				i0 = iscs->__get(1);
HXLINE( 358)				i1 = iscs->__get(0);
HXLINE( 359)				ind0 = ps->indexOf(i0,null());
HXLINE( 360)				ind1 = ps->indexOf(i1,null());
HXLINE( 361)				if ((::hxPolyK::PolyK_obj::firstWithFlag(ps,ind0) == ind1)) {
HXLINE( 361)					solved = true;
            				}
            			}
HXLINE( 363)			if (solved) {
HXLINE( 364)				dir = (dir - 1);
HXLINE( 365)				int ind11 = ind1;
HXDLIN( 365)				int n = ps->length;
HXDLIN( 365)				::Array< ::Dynamic> nps = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 365)				if ((ind11 < ind0)) {
HXLINE( 365)					ind11 = (ind11 + n);
            				}
HXDLIN( 365)				int l = (ind11 + 1);
HXDLIN( 365)				{
HXLINE( 365)					int _g = ind0;
HXDLIN( 365)					int _g1 = l;
HXDLIN( 365)					while((_g < _g1)){
HXLINE( 365)						_g = (_g + 1);
HXDLIN( 365)						int i = (_g - 1);
HXDLIN( 365)						nps->push(ps->__get(::hx::Mod(i,n)));
            					}
            				}
HXDLIN( 365)				::Array< ::Dynamic> pgn = nps;
HXLINE( 366)				pgs->push(pgn);
HXLINE( 367)				int ind12 = ind0;
HXDLIN( 367)				int n1 = ps->length;
HXDLIN( 367)				::Array< ::Dynamic> nps1 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 367)				if ((ind12 < ind1)) {
HXLINE( 367)					ind12 = (ind12 + n1);
            				}
HXDLIN( 367)				int l1 = (ind12 + 1);
HXDLIN( 367)				int _g2 = ind1;
HXDLIN( 367)				int _g3 = l1;
HXDLIN( 367)				while((_g2 < _g3)){
HXLINE( 367)					_g2 = (_g2 + 1);
HXDLIN( 367)					int i = (_g2 - 1);
HXDLIN( 367)					nps1->push(ps->__get(::hx::Mod(i,n1)));
            				}
HXDLIN( 367)				ps = nps1;
HXLINE( 368)				i0->__SetField(HX_("flag",ac,0b,be,43),(i1->__SetField(HX_("flag",ac,0b,be,43),false,::hx::paccDynamic)),::hx::paccDynamic);
HXLINE( 369)				iscs->removeRange(0,2);
HXLINE( 370)				if ((iscs->length == 0)) {
HXLINE( 370)					pgs->push(ps);
            				}
            			}
            			else {
HXLINE( 372)				dir = (dir + 1);
HXLINE( 373)				iscs->reverse();
            			}
HXLINE( 375)			if ((dir > 1)) {
HXLINE( 375)				goto _hx_goto_21;
            			}
            		}
            		_hx_goto_21:;
HXLINE( 377)		::Array< ::Dynamic> result = ::Array_obj< ::Dynamic>::__new();
HXLINE( 378)		int l1 = pgs->length;
HXLINE( 379)		int l2;
HXLINE( 380)		{
HXLINE( 380)			int _g4 = 0;
HXDLIN( 380)			int _g5 = l1;
HXDLIN( 380)			while((_g4 < _g5)){
HXLINE( 380)				_g4 = (_g4 + 1);
HXDLIN( 380)				int i = (_g4 - 1);
HXLINE( 381)				::Array< ::Dynamic> pg = pgs->__get(i).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 382)				::Array< Float > npg = ::Array_obj< Float >::__new();
HXLINE( 383)				l2 = pg->length;
HXLINE( 384)				{
HXLINE( 384)					int _g = 0;
HXDLIN( 384)					int _g1 = l2;
HXDLIN( 384)					while((_g < _g1)){
HXLINE( 384)						_g = (_g + 1);
HXDLIN( 384)						int j = (_g - 1);
HXLINE( 385)						npg->push( ::Dynamic(pg->__get(j)->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)));
HXLINE( 386)						npg->push( ::Dynamic(pg->__get(j)->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)));
            					}
            				}
HXLINE( 388)				result->push(npg);
            			}
            		}
HXLINE( 390)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(PolyK_obj,slice,return )

 ::Dynamic PolyK_obj::raycast(::Array< Float > p,Float x,Float y,Float dx,Float dy, ::Dynamic isc){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_396_raycast)
HXLINE( 397)		int l = (p->length - 2);
HXLINE( 398)		::Array< ::Dynamic> tp = ::Array_obj< ::Dynamic>::__new();
HXLINE( 399)		{
HXLINE( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 399)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
            		}
HXLINE( 400)		 ::Dynamic a1 = tp->__get(0);
HXLINE( 401)		 ::Dynamic a2 = tp->__get(1);
HXLINE( 402)		 ::Dynamic b1 = tp->__get(2);
HXLINE( 403)		 ::Dynamic b2 = tp->__get(3);
HXLINE( 404)		 ::Dynamic c = tp->__get(4);
HXLINE( 405)		a1->__SetField(HX_("x",78,00,00,00),x,::hx::paccDynamic);
HXLINE( 406)		a1->__SetField(HX_("y",79,00,00,00),y,::hx::paccDynamic);
HXLINE( 407)		a2->__SetField(HX_("x",78,00,00,00),(x + dx),::hx::paccDynamic);
HXLINE( 408)		a2->__SetField(HX_("y",79,00,00,00),(y + dy),::hx::paccDynamic);
HXLINE( 409)		if (::hx::IsNull( isc )) {
HXLINE( 409)			isc =  ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("dist",66,67,69,42),( (Float)(0) ))
            				->setFixed(1,HX_("edge",3d,c8,0e,43),( (Float)(0) ))
            				->setFixed(2,HX_("norm",3c,16,0a,49), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            					->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) ))))
            				->setFixed(3,HX_("refl",b9,4f,a7,4b), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            					->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) )))));
            		}
HXLINE( 410)		isc->__SetField(HX_("dist",66,67,69,42),::Math_obj::POSITIVE_INFINITY,::hx::paccDynamic);
HXLINE( 411)		int l2 = ::Std_obj::_hx_int((( (Float)(l) ) / ( (Float)(2) )));
HXLINE( 412)		int i;
HXLINE( 413)		{
HXLINE( 413)			int _g = 0;
HXDLIN( 413)			int _g1 = l2;
HXDLIN( 413)			while((_g < _g1)){
HXLINE( 413)				_g = (_g + 1);
HXDLIN( 413)				int k = (_g - 1);
HXLINE( 414)				i = (k * 2);
HXLINE( 415)				b1->__SetField(HX_("x",78,00,00,00),p->__get(i),::hx::paccDynamic);
HXLINE( 416)				b1->__SetField(HX_("y",79,00,00,00),p->__get((i + 1)),::hx::paccDynamic);
HXLINE( 417)				b2->__SetField(HX_("x",78,00,00,00),p->__get((i + 2)),::hx::paccDynamic);
HXLINE( 418)				b2->__SetField(HX_("y",79,00,00,00),p->__get((i + 3)),::hx::paccDynamic);
HXLINE( 419)				Float dax = (( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)				Float dbx = (( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)				Float day = (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)				Float dby = (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)				Float Den = ((dax * dby) - (day * dbx));
HXDLIN( 419)				 ::Dynamic nisc;
HXDLIN( 419)				if ((Den == 0)) {
HXLINE( 419)					nisc = null();
            				}
            				else {
HXLINE( 419)					Float A = ((( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXDLIN( 419)					Float B = ((( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXDLIN( 419)					 ::Dynamic I = c;
HXDLIN( 419)					Float iDen = (( (Float)(1) ) / Den);
HXDLIN( 419)					I->__SetField(HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) * iDen),::hx::paccDynamic);
HXDLIN( 419)					I->__SetField(HX_("y",79,00,00,00),(((A * dby) - (day * B)) * iDen),::hx::paccDynamic);
HXDLIN( 419)					Float minx = ::Math_obj::min(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)					Float maxx = ::Math_obj::max(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)					Float miny = ::Math_obj::min(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)					Float maxy = ::Math_obj::max(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 419)					bool nisc1;
HXDLIN( 419)					if ((minx == maxx)) {
HXLINE( 419)						if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 419)							nisc1 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            						}
            						else {
HXLINE( 419)							nisc1 = false;
            						}
            					}
            					else {
HXLINE( 419)						if ((miny == maxy)) {
HXLINE( 419)							if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 419)								nisc1 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            							}
            							else {
HXLINE( 419)								nisc1 = false;
            							}
            						}
            						else {
HXLINE( 419)							bool nisc;
HXDLIN( 419)							bool nisc2;
HXDLIN( 419)							if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 419)								nisc2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            							}
            							else {
HXLINE( 419)								nisc2 = false;
            							}
HXDLIN( 419)							if (nisc2) {
HXLINE( 419)								nisc = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            							}
            							else {
HXLINE( 419)								nisc = false;
            							}
HXDLIN( 419)							if (nisc) {
HXLINE( 419)								nisc1 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            							}
            							else {
HXLINE( 419)								nisc1 = false;
            							}
            						}
            					}
HXDLIN( 419)					if (!(nisc1)) {
HXLINE( 419)						nisc = null();
            					}
            					else {
HXLINE( 419)						bool nisc1;
HXDLIN( 419)						bool nisc2;
HXDLIN( 419)						if ((day > 0)) {
HXLINE( 419)							nisc2 = ::hx::IsGreater( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            						}
            						else {
HXLINE( 419)							nisc2 = false;
            						}
HXDLIN( 419)						if (!(nisc2)) {
HXLINE( 419)							if ((day < 0)) {
HXLINE( 419)								nisc1 = ::hx::IsLess( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            							}
            							else {
HXLINE( 419)								nisc1 = false;
            							}
            						}
            						else {
HXLINE( 419)							nisc1 = true;
            						}
HXDLIN( 419)						if (nisc1) {
HXLINE( 419)							nisc = null();
            						}
            						else {
HXLINE( 419)							bool nisc1;
HXDLIN( 419)							bool nisc2;
HXDLIN( 419)							if ((dax > 0)) {
HXLINE( 419)								nisc2 = ::hx::IsGreater( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            							}
            							else {
HXLINE( 419)								nisc2 = false;
            							}
HXDLIN( 419)							if (!(nisc2)) {
HXLINE( 419)								if ((dax < 0)) {
HXLINE( 419)									nisc1 = ::hx::IsLess( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            								}
            								else {
HXLINE( 419)									nisc1 = false;
            								}
            							}
            							else {
HXLINE( 419)								nisc1 = true;
            							}
HXDLIN( 419)							if (nisc1) {
HXLINE( 419)								nisc = null();
            							}
            							else {
HXLINE( 419)								nisc = I;
            							}
            						}
            					}
            				}
HXDLIN( 419)				 ::Dynamic nisc1 = nisc;
HXLINE( 420)				if (::hx::IsNotNull( nisc1 )) {
HXLINE( 420)					Float dx1 = (( (Float)(c->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 420)					Float dy1 = (( (Float)(c->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 420)					Float nrl = ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1)));
HXDLIN( 420)					if (::hx::IsLess( nrl,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 420)						Float dx1 = (( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 420)						Float dy1 = (( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 420)						Float ibl = (( (Float)(1) ) / ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1))));
HXDLIN( 420)						Float nx = (-((( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ))) * ibl);
HXDLIN( 420)						Float ny = ((( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )) * ibl);
HXDLIN( 420)						Float ddot = (( (Float)(2) ) * ((dx * nx) + (dy * ny)));
HXDLIN( 420)						isc->__SetField(HX_("dist",66,67,69,42),nrl,::hx::paccDynamic);
HXDLIN( 420)						 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),nx,::hx::paccDynamic);
HXDLIN( 420)						 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),ny,::hx::paccDynamic);
HXDLIN( 420)						 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),((-(ddot) * nx) + dx),::hx::paccDynamic);
HXDLIN( 420)						 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),((-(ddot) * ny) + dy),::hx::paccDynamic);
HXDLIN( 420)						isc->__SetField(HX_("edge",3d,c8,0e,43),(( (Float)(i) ) / ( (Float)(2) )),::hx::paccDynamic);
            					}
            				}
            			}
            		}
HXLINE( 422)		b1->__SetField(HX_("x",78,00,00,00),b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),::hx::paccDynamic);
HXLINE( 423)		b1->__SetField(HX_("y",79,00,00,00),b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),::hx::paccDynamic);
HXLINE( 424)		b2->__SetField(HX_("x",78,00,00,00),p->__get(0),::hx::paccDynamic);
HXLINE( 425)		b2->__SetField(HX_("y",79,00,00,00),p->__get(1),::hx::paccDynamic);
HXLINE( 426)		Float dax = (( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)		Float dbx = (( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)		Float day = (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)		Float dby = (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)		Float Den = ((dax * dby) - (day * dbx));
HXDLIN( 426)		 ::Dynamic nisc;
HXDLIN( 426)		if ((Den == 0)) {
HXLINE( 426)			nisc = null();
            		}
            		else {
HXLINE( 426)			Float A = ((( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXDLIN( 426)			Float B = ((( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXDLIN( 426)			 ::Dynamic I = c;
HXDLIN( 426)			Float iDen = (( (Float)(1) ) / Den);
HXDLIN( 426)			I->__SetField(HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) * iDen),::hx::paccDynamic);
HXDLIN( 426)			I->__SetField(HX_("y",79,00,00,00),(((A * dby) - (day * B)) * iDen),::hx::paccDynamic);
HXDLIN( 426)			Float minx = ::Math_obj::min(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)			Float maxx = ::Math_obj::max(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)			Float miny = ::Math_obj::min(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)			Float maxy = ::Math_obj::max(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 426)			bool nisc1;
HXDLIN( 426)			if ((minx == maxx)) {
HXLINE( 426)				if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 426)					nisc1 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            				}
            				else {
HXLINE( 426)					nisc1 = false;
            				}
            			}
            			else {
HXLINE( 426)				if ((miny == maxy)) {
HXLINE( 426)					if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 426)						nisc1 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            					}
            					else {
HXLINE( 426)						nisc1 = false;
            					}
            				}
            				else {
HXLINE( 426)					bool nisc;
HXDLIN( 426)					bool nisc2;
HXDLIN( 426)					if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 426)						nisc2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            					}
            					else {
HXLINE( 426)						nisc2 = false;
            					}
HXDLIN( 426)					if (nisc2) {
HXLINE( 426)						nisc = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            					}
            					else {
HXLINE( 426)						nisc = false;
            					}
HXDLIN( 426)					if (nisc) {
HXLINE( 426)						nisc1 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            					}
            					else {
HXLINE( 426)						nisc1 = false;
            					}
            				}
            			}
HXDLIN( 426)			if (!(nisc1)) {
HXLINE( 426)				nisc = null();
            			}
            			else {
HXLINE( 426)				bool nisc1;
HXDLIN( 426)				bool nisc2;
HXDLIN( 426)				if ((day > 0)) {
HXLINE( 426)					nisc2 = ::hx::IsGreater( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            				}
            				else {
HXLINE( 426)					nisc2 = false;
            				}
HXDLIN( 426)				if (!(nisc2)) {
HXLINE( 426)					if ((day < 0)) {
HXLINE( 426)						nisc1 = ::hx::IsLess( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            					}
            					else {
HXLINE( 426)						nisc1 = false;
            					}
            				}
            				else {
HXLINE( 426)					nisc1 = true;
            				}
HXDLIN( 426)				if (nisc1) {
HXLINE( 426)					nisc = null();
            				}
            				else {
HXLINE( 426)					bool nisc1;
HXDLIN( 426)					bool nisc2;
HXDLIN( 426)					if ((dax > 0)) {
HXLINE( 426)						nisc2 = ::hx::IsGreater( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            					}
            					else {
HXLINE( 426)						nisc2 = false;
            					}
HXDLIN( 426)					if (!(nisc2)) {
HXLINE( 426)						if ((dax < 0)) {
HXLINE( 426)							nisc1 = ::hx::IsLess( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            						}
            						else {
HXLINE( 426)							nisc1 = false;
            						}
            					}
            					else {
HXLINE( 426)						nisc1 = true;
            					}
HXDLIN( 426)					if (nisc1) {
HXLINE( 426)						nisc = null();
            					}
            					else {
HXLINE( 426)						nisc = I;
            					}
            				}
            			}
            		}
HXDLIN( 426)		 ::Dynamic nisc1 = nisc;
HXLINE( 427)		if (::hx::IsNotNull( nisc1 )) {
HXLINE( 427)			Float dx1 = (( (Float)(c->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 427)			Float dy1 = (( (Float)(c->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 427)			Float nrl = ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1)));
HXDLIN( 427)			if (::hx::IsLess( nrl,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 427)				Float dx1 = (( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 427)				Float dy1 = (( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 427)				Float ibl = (( (Float)(1) ) / ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1))));
HXDLIN( 427)				Float nx = (-((( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ))) * ibl);
HXDLIN( 427)				Float ny = ((( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )) * ibl);
HXDLIN( 427)				Float ddot = (( (Float)(2) ) * ((dx * nx) + (dy * ny)));
HXDLIN( 427)				isc->__SetField(HX_("dist",66,67,69,42),nrl,::hx::paccDynamic);
HXDLIN( 427)				 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),nx,::hx::paccDynamic);
HXDLIN( 427)				 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),ny,::hx::paccDynamic);
HXDLIN( 427)				 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),((-(ddot) * nx) + dx),::hx::paccDynamic);
HXDLIN( 427)				 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),((-(ddot) * ny) + dy),::hx::paccDynamic);
HXDLIN( 427)				isc->__SetField(HX_("edge",3d,c8,0e,43),((( (Float)(p->length) ) / ( (Float)(2) )) - ( (Float)(1) )),::hx::paccDynamic);
            			}
            		}
HXLINE( 428)		if (::hx::IsNotEq( isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic),::Math_obj::POSITIVE_INFINITY )) {
HXLINE( 428)			return isc;
            		}
            		else {
HXLINE( 428)			return null();
            		}
HXDLIN( 428)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(PolyK_obj,raycast,return )

 ::Dynamic PolyK_obj::closestEdge(::Array< Float > p,Float x,Float y, ::Dynamic isc){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_432_closestEdge)
HXLINE( 433)		int l = (p->length - 2);
HXLINE( 434)		::Array< ::Dynamic> tp = ::Array_obj< ::Dynamic>::__new();
HXLINE( 435)		{
HXLINE( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
HXDLIN( 435)			tp->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("x",78,00,00,00),((Float)0.))
            				->setFixed(1,HX_("y",79,00,00,00),((Float)0.))
            				->setFixed(2,HX_("flag",ac,0b,be,43),false)));
            		}
HXLINE( 436)		 ::Dynamic a1 = tp->__get(0);
HXLINE( 437)		 ::Dynamic b1 = tp->__get(2);
HXLINE( 438)		 ::Dynamic b2 = tp->__get(3);
HXLINE( 439)		 ::Dynamic c = tp->__get(4);
HXLINE( 440)		a1->__SetField(HX_("x",78,00,00,00),x,::hx::paccDynamic);
HXLINE( 441)		a1->__SetField(HX_("y",79,00,00,00),y,::hx::paccDynamic);
HXLINE( 442)		if (::hx::IsNull( isc )) {
HXLINE( 442)			isc =  ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("point",50,b4,8f,c6), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            					->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) ))))
            				->setFixed(1,HX_("dist",66,67,69,42),( (Float)(0) ))
            				->setFixed(2,HX_("edge",3d,c8,0e,43),( (Float)(0) ))
            				->setFixed(3,HX_("norm",3c,16,0a,49), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("x",78,00,00,00),( (Float)(0) ))
            					->setFixed(1,HX_("y",79,00,00,00),( (Float)(0) )))));
            		}
HXLINE( 443)		isc->__SetField(HX_("dist",66,67,69,42),::Math_obj::POSITIVE_INFINITY,::hx::paccDynamic);
HXLINE( 444)		int l2 = ::Std_obj::_hx_int((( (Float)(l) ) / ( (Float)(2) )));
HXLINE( 445)		int i;
HXLINE( 446)		{
HXLINE( 446)			int _g = 0;
HXDLIN( 446)			int _g1 = l2;
HXDLIN( 446)			while((_g < _g1)){
HXLINE( 446)				_g = (_g + 1);
HXDLIN( 446)				int k = (_g - 1);
HXLINE( 447)				i = (k * 2);
HXLINE( 448)				b1->__SetField(HX_("x",78,00,00,00),p->__get(i),::hx::paccDynamic);
HXLINE( 449)				b1->__SetField(HX_("y",79,00,00,00),p->__get((i + 1)),::hx::paccDynamic);
HXLINE( 450)				b2->__SetField(HX_("x",78,00,00,00),p->__get((i + 2)),::hx::paccDynamic);
HXLINE( 451)				b2->__SetField(HX_("y",79,00,00,00),p->__get((i + 3)),::hx::paccDynamic);
HXLINE( 452)				{
HXLINE( 452)					Float x = ( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float y = ( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float x1 = ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float y1 = ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float x2 = ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float y2 = ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 452)					Float A = (x - x1);
HXDLIN( 452)					Float B = (y - y1);
HXDLIN( 452)					Float C = (x2 - x1);
HXDLIN( 452)					Float D = (y2 - y1);
HXDLIN( 452)					Float dot = ((A * C) + (B * D));
HXDLIN( 452)					Float len_sq = ((C * C) + (D * D));
HXDLIN( 452)					Float param = (dot / len_sq);
HXDLIN( 452)					Float xx;
HXDLIN( 452)					Float yy;
HXDLIN( 452)					bool _hx_tmp;
HXDLIN( 452)					if (!((param < 0))) {
HXLINE( 452)						if ((x1 == x2)) {
HXLINE( 452)							_hx_tmp = (y1 == y2);
            						}
            						else {
HXLINE( 452)							_hx_tmp = false;
            						}
            					}
            					else {
HXLINE( 452)						_hx_tmp = true;
            					}
HXDLIN( 452)					if (_hx_tmp) {
HXLINE( 452)						xx = x1;
HXDLIN( 452)						yy = y1;
            					}
            					else {
HXLINE( 452)						if ((param > 1)) {
HXLINE( 452)							xx = x2;
HXDLIN( 452)							yy = y2;
            						}
            						else {
HXLINE( 452)							xx = (x1 + (param * C));
HXDLIN( 452)							yy = (y1 + (param * D));
            						}
            					}
HXDLIN( 452)					Float dx = (x - xx);
HXDLIN( 452)					Float dy = (y - yy);
HXDLIN( 452)					Float dst = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXDLIN( 452)					if (::hx::IsLess( dst,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 452)						isc->__SetField(HX_("dist",66,67,69,42),dst,::hx::paccDynamic);
HXDLIN( 452)						isc->__SetField(HX_("edge",3d,c8,0e,43),(i >> 1),::hx::paccDynamic);
HXDLIN( 452)						 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),xx,::hx::paccDynamic);
HXDLIN( 452)						 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),yy,::hx::paccDynamic);
            					}
            				}
            			}
            		}
HXLINE( 454)		b1->__SetField(HX_("x",78,00,00,00),b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),::hx::paccDynamic);
HXLINE( 455)		b1->__SetField(HX_("y",79,00,00,00),b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),::hx::paccDynamic);
HXLINE( 456)		b2->__SetField(HX_("x",78,00,00,00),p->__get(0),::hx::paccDynamic);
HXLINE( 457)		b2->__SetField(HX_("y",79,00,00,00),p->__get(1),::hx::paccDynamic);
HXLINE( 458)		{
HXLINE( 458)			Float x1 = ( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float y1 = ( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float x11 = ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float y11 = ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float x2 = ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float y2 = ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXDLIN( 458)			Float A = (x1 - x11);
HXDLIN( 458)			Float B = (y1 - y11);
HXDLIN( 458)			Float C = (x2 - x11);
HXDLIN( 458)			Float D = (y2 - y11);
HXDLIN( 458)			Float dot = ((A * C) + (B * D));
HXDLIN( 458)			Float len_sq = ((C * C) + (D * D));
HXDLIN( 458)			Float param = (dot / len_sq);
HXDLIN( 458)			Float xx;
HXDLIN( 458)			Float yy;
HXDLIN( 458)			bool _hx_tmp;
HXDLIN( 458)			if (!((param < 0))) {
HXLINE( 458)				if ((x11 == x2)) {
HXLINE( 458)					_hx_tmp = (y11 == y2);
            				}
            				else {
HXLINE( 458)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 458)				_hx_tmp = true;
            			}
HXDLIN( 458)			if (_hx_tmp) {
HXLINE( 458)				xx = x11;
HXDLIN( 458)				yy = y11;
            			}
            			else {
HXLINE( 458)				if ((param > 1)) {
HXLINE( 458)					xx = x2;
HXDLIN( 458)					yy = y2;
            				}
            				else {
HXLINE( 458)					xx = (x11 + (param * C));
HXDLIN( 458)					yy = (y11 + (param * D));
            				}
            			}
HXDLIN( 458)			Float dx = (x1 - xx);
HXDLIN( 458)			Float dy = (y1 - yy);
HXDLIN( 458)			Float dst = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXDLIN( 458)			if (::hx::IsLess( dst,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 458)				isc->__SetField(HX_("dist",66,67,69,42),dst,::hx::paccDynamic);
HXDLIN( 458)				isc->__SetField(HX_("edge",3d,c8,0e,43),(l >> 1),::hx::paccDynamic);
HXDLIN( 458)				 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),xx,::hx::paccDynamic);
HXDLIN( 458)				 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),yy,::hx::paccDynamic);
            			}
            		}
HXLINE( 459)		Float idst = (( (Float)(1) ) / ( (Float)(isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic)) ));
HXLINE( 460)		 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),((x - ( (Float)( ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )) * idst),::hx::paccDynamic);
HXLINE( 461)		 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),((y - ( (Float)( ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) * idst),::hx::paccDynamic);
HXLINE( 462)		return isc;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(PolyK_obj,closestEdge,return )

void PolyK_obj::pointLineDist( ::Dynamic p, ::Dynamic a, ::Dynamic b,Float edge, ::Dynamic isc){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_465_pointLineDist)
HXLINE( 466)		Float x = ( (Float)(p->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXLINE( 467)		Float y = ( (Float)(p->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXLINE( 468)		Float x1 = ( (Float)(a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXLINE( 469)		Float y1 = ( (Float)(a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXLINE( 470)		Float x2 = ( (Float)(b->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXLINE( 471)		Float y2 = ( (Float)(b->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXLINE( 472)		Float A = (x - x1);
HXLINE( 473)		Float B = (y - y1);
HXLINE( 474)		Float C = (x2 - x1);
HXLINE( 475)		Float D = (y2 - y1);
HXLINE( 476)		Float dot = ((A * C) + (B * D));
HXLINE( 477)		Float len_sq = ((C * C) + (D * D));
HXLINE( 478)		Float param = (dot / len_sq);
HXLINE( 479)		Float xx;
HXLINE( 480)		Float yy;
HXLINE( 481)		bool _hx_tmp;
HXDLIN( 481)		if (!((param < 0))) {
HXLINE( 481)			if ((x1 == x2)) {
HXLINE( 481)				_hx_tmp = (y1 == y2);
            			}
            			else {
HXLINE( 481)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 481)			_hx_tmp = true;
            		}
HXDLIN( 481)		if (_hx_tmp) {
HXLINE( 482)			xx = x1;
HXLINE( 483)			yy = y1;
            		}
            		else {
HXLINE( 484)			if ((param > 1)) {
HXLINE( 485)				xx = x2;
HXLINE( 486)				yy = y2;
            			}
            			else {
HXLINE( 488)				xx = (x1 + (param * C));
HXLINE( 489)				yy = (y1 + (param * D));
            			}
            		}
HXLINE( 491)		Float dx = (x - xx);
HXLINE( 492)		Float dy = (y - yy);
HXLINE( 493)		Float dst = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXLINE( 494)		if (::hx::IsLess( dst,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 495)			isc->__SetField(HX_("dist",66,67,69,42),dst,::hx::paccDynamic);
HXLINE( 496)			isc->__SetField(HX_("edge",3d,c8,0e,43),edge,::hx::paccDynamic);
HXLINE( 497)			 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),xx,::hx::paccDynamic);
HXLINE( 498)			 ::Dynamic(isc->__Field(HX_("point",50,b4,8f,c6),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),yy,::hx::paccDynamic);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(PolyK_obj,pointLineDist,(void))

void PolyK_obj::updateISC(Float dx,Float dy, ::Dynamic a1, ::Dynamic b1, ::Dynamic b2, ::Dynamic c,Float edge, ::Dynamic isc){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_502_updateISC)
HXLINE( 503)		Float dx1 = (( (Float)(c->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 503)		Float dy1 = (( (Float)(c->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 503)		Float nrl = ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1)));
HXLINE( 504)		if (::hx::IsLess( nrl,isc->__Field(HX_("dist",66,67,69,42),::hx::paccDynamic) )) {
HXLINE( 505)			Float dx1 = (( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 505)			Float dy1 = (( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 505)			Float ibl = (( (Float)(1) ) / ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1))));
HXLINE( 506)			Float nx = (-((( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ))) * ibl);
HXLINE( 507)			Float ny = ((( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )) * ibl);
HXLINE( 508)			Float ddot = (( (Float)(2) ) * ((dx * nx) + (dy * ny)));
HXLINE( 509)			isc->__SetField(HX_("dist",66,67,69,42),nrl,::hx::paccDynamic);
HXLINE( 510)			 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),nx,::hx::paccDynamic);
HXLINE( 511)			 ::Dynamic(isc->__Field(HX_("norm",3c,16,0a,49),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),ny,::hx::paccDynamic);
HXLINE( 512)			 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),((-(ddot) * nx) + dx),::hx::paccDynamic);
HXLINE( 513)			 ::Dynamic(isc->__Field(HX_("refl",b9,4f,a7,4b),::hx::paccDynamic))->__SetField(HX_("y",79,00,00,00),((-(ddot) * ny) + dy),::hx::paccDynamic);
HXLINE( 514)			isc->__SetField(HX_("edge",3d,c8,0e,43),edge,::hx::paccDynamic);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(PolyK_obj,updateISC,(void))

::Array< ::Dynamic> PolyK_obj::getPoints(::Array< ::Dynamic> ps,int ind0,int ind1){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_518_getPoints)
HXLINE( 519)		int n = ps->length;
HXLINE( 520)		::Array< ::Dynamic> nps = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 521)		if ((ind1 < ind0)) {
HXLINE( 521)			ind1 = (ind1 + n);
            		}
HXLINE( 522)		int l = (ind1 + 1);
HXLINE( 523)		{
HXLINE( 523)			int _g = ind0;
HXDLIN( 523)			int _g1 = l;
HXDLIN( 523)			while((_g < _g1)){
HXLINE( 523)				_g = (_g + 1);
HXDLIN( 523)				int i = (_g - 1);
HXDLIN( 523)				nps->push(ps->__get(::hx::Mod(i,n)));
            			}
            		}
HXLINE( 524)		return nps;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PolyK_obj,getPoints,return )

int PolyK_obj::firstWithFlag(::Array< ::Dynamic> ps,int ind){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_528_firstWithFlag)
HXLINE( 529)		int n = ps->length;
HXLINE( 530)		while(true){
HXLINE( 531)			ind = ::hx::Mod((ind + 1),n);
HXLINE( 532)			if (( (bool)(ps->__get(ind)->__Field(HX_("flag",ac,0b,be,43),::hx::paccDynamic)) )) {
HXLINE( 532)				return ind;
            			}
            		}
HXLINE( 530)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(PolyK_obj,firstWithFlag,return )

bool PolyK_obj::pointInTriangle(Float px,Float py,Float ax,Float ay,Float bx,Float by,Float cx,Float cy){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_536_pointInTriangle)
HXLINE( 537)		Float v0x = (cx - ax);
HXLINE( 538)		Float v0y = (cy - ay);
HXLINE( 539)		Float v1x = (bx - ax);
HXLINE( 540)		Float v1y = (by - ay);
HXLINE( 541)		Float v2x = (px - ax);
HXLINE( 542)		Float v2y = (py - ay);
HXLINE( 543)		Float dot00 = ((v0x * v0x) + (v0y * v0y));
HXLINE( 544)		Float dot01 = ((v0x * v1x) + (v0y * v1y));
HXLINE( 545)		Float dot02 = ((v0x * v2x) + (v0y * v2y));
HXLINE( 546)		Float dot11 = ((v1x * v1x) + (v1y * v1y));
HXLINE( 547)		Float dot12 = ((v1x * v2x) + (v1y * v2y));
HXLINE( 548)		Float invDenom = (( (Float)(1) ) / ((dot00 * dot11) - (dot01 * dot01)));
HXLINE( 549)		Float u = (((dot11 * dot02) - (dot01 * dot12)) * invDenom);
HXLINE( 550)		Float v = (((dot00 * dot12) - (dot01 * dot02)) * invDenom);
HXLINE( 552)		bool _hx_tmp;
HXDLIN( 552)		if ((u >= 0)) {
HXLINE( 552)			_hx_tmp = (v >= 0);
            		}
            		else {
HXLINE( 552)			_hx_tmp = false;
            		}
HXDLIN( 552)		if (_hx_tmp) {
HXLINE( 552)			return ((u + v) < 1);
            		}
            		else {
HXLINE( 552)			return false;
            		}
HXDLIN( 552)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(PolyK_obj,pointInTriangle,return )

 ::Dynamic PolyK_obj::rayLineIntersection( ::Dynamic a1, ::Dynamic a2, ::Dynamic b1, ::Dynamic b2, ::Dynamic c){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_555_rayLineIntersection)
HXLINE( 556)		Float dax = (( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 557)		Float dbx = (( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 558)		Float day = (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 559)		Float dby = (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 560)		Float Den = ((dax * dby) - (day * dbx));
HXLINE( 561)		if ((Den == 0)) {
HXLINE( 561)			return null();
            		}
HXLINE( 562)		Float A = ((( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXLINE( 563)		Float B = ((( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXLINE( 564)		 ::Dynamic I = c;
HXLINE( 565)		Float iDen = (( (Float)(1) ) / Den);
HXLINE( 566)		I->__SetField(HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) * iDen),::hx::paccDynamic);
HXLINE( 567)		I->__SetField(HX_("y",79,00,00,00),(((A * dby) - (day * B)) * iDen),::hx::paccDynamic);
HXLINE( 568)		Float minx = ::Math_obj::min(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 568)		Float maxx = ::Math_obj::max(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 568)		Float miny = ::Math_obj::min(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 568)		Float maxy = ::Math_obj::max(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 568)		bool _hx_tmp;
HXDLIN( 568)		if ((minx == maxx)) {
HXLINE( 568)			if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 568)				_hx_tmp = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            			}
            			else {
HXLINE( 568)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 568)			if ((miny == maxy)) {
HXLINE( 568)				if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 568)					_hx_tmp = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            				}
            				else {
HXLINE( 568)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 568)				bool _hx_tmp1;
HXDLIN( 568)				bool _hx_tmp2;
HXDLIN( 568)				if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 568)					_hx_tmp2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            				}
            				else {
HXLINE( 568)					_hx_tmp2 = false;
            				}
HXDLIN( 568)				if (_hx_tmp2) {
HXLINE( 568)					_hx_tmp1 = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            				}
            				else {
HXLINE( 568)					_hx_tmp1 = false;
            				}
HXDLIN( 568)				if (_hx_tmp1) {
HXLINE( 568)					_hx_tmp = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            				}
            				else {
HXLINE( 568)					_hx_tmp = false;
            				}
            			}
            		}
HXDLIN( 568)		if (!(_hx_tmp)) {
HXLINE( 568)			return null();
            		}
HXLINE( 569)		bool _hx_tmp1;
HXDLIN( 569)		bool _hx_tmp2;
HXDLIN( 569)		if ((day > 0)) {
HXLINE( 569)			_hx_tmp2 = ::hx::IsGreater( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            		}
            		else {
HXLINE( 569)			_hx_tmp2 = false;
            		}
HXDLIN( 569)		if (!(_hx_tmp2)) {
HXLINE( 569)			if ((day < 0)) {
HXLINE( 569)				_hx_tmp1 = ::hx::IsLess( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) );
            			}
            			else {
HXLINE( 569)				_hx_tmp1 = false;
            			}
            		}
            		else {
HXLINE( 569)			_hx_tmp1 = true;
            		}
HXDLIN( 569)		if (_hx_tmp1) {
HXLINE( 569)			return null();
            		}
HXLINE( 570)		bool _hx_tmp3;
HXDLIN( 570)		bool _hx_tmp4;
HXDLIN( 570)		if ((dax > 0)) {
HXLINE( 570)			_hx_tmp4 = ::hx::IsGreater( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            		}
            		else {
HXLINE( 570)			_hx_tmp4 = false;
            		}
HXDLIN( 570)		if (!(_hx_tmp4)) {
HXLINE( 570)			if ((dax < 0)) {
HXLINE( 570)				_hx_tmp3 = ::hx::IsLess( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) );
            			}
            			else {
HXLINE( 570)				_hx_tmp3 = false;
            			}
            		}
            		else {
HXLINE( 570)			_hx_tmp3 = true;
            		}
HXDLIN( 570)		if (_hx_tmp3) {
HXLINE( 570)			return null();
            		}
HXLINE( 571)		return I;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(PolyK_obj,rayLineIntersection,return )

 ::Dynamic PolyK_obj::getLineIntersection( ::Dynamic a1, ::Dynamic a2, ::Dynamic b1, ::Dynamic b2){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_574_getLineIntersection)
HXLINE( 575)		Float dax = (( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 575)		Float dbx = (( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 576)		Float day = (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 576)		Float dby = (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 577)		Float Den = ((dax * dby) - (day * dbx));
HXLINE( 578)		if ((Den == 0)) {
HXLINE( 578)			return null();
            		}
HXLINE( 579)		Float A = ((( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXLINE( 580)		Float B = ((( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) )) - (( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) * ( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) )));
HXLINE( 581)		 ::Dynamic I =  ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(((A * dbx) - (dax * B)) / Den))
            			->setFixed(1,HX_("y",79,00,00,00),(((A * dby) - (day * B)) / Den))
            			->setFixed(2,HX_("flag",ac,0b,be,43),false));
HXLINE( 582)		bool _hx_tmp;
HXDLIN( 582)		Float minx = ::Math_obj::min(( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)		Float maxx = ::Math_obj::max(( (Float)(a1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(a2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)		Float miny = ::Math_obj::min(( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)		Float maxy = ::Math_obj::max(( (Float)(a1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(a2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)		bool _hx_tmp1;
HXDLIN( 582)		if ((minx == maxx)) {
HXLINE( 582)			if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 582)				_hx_tmp1 = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            			}
            			else {
HXLINE( 582)				_hx_tmp1 = false;
            			}
            		}
            		else {
HXLINE( 582)			if ((miny == maxy)) {
HXLINE( 582)				if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 582)					_hx_tmp1 = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            				}
            				else {
HXLINE( 582)					_hx_tmp1 = false;
            				}
            			}
            			else {
HXLINE( 582)				bool _hx_tmp;
HXDLIN( 582)				bool _hx_tmp2;
HXDLIN( 582)				if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 582)					_hx_tmp2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            				}
            				else {
HXLINE( 582)					_hx_tmp2 = false;
            				}
HXDLIN( 582)				if (_hx_tmp2) {
HXLINE( 582)					_hx_tmp = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            				}
            				else {
HXLINE( 582)					_hx_tmp = false;
            				}
HXDLIN( 582)				if (_hx_tmp) {
HXLINE( 582)					_hx_tmp1 = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            				}
            				else {
HXLINE( 582)					_hx_tmp1 = false;
            				}
            			}
            		}
HXDLIN( 582)		if (_hx_tmp1) {
HXLINE( 582)			Float minx = ::Math_obj::min(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)			Float maxx = ::Math_obj::max(( (Float)(b1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)			Float miny = ::Math_obj::min(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)			Float maxy = ::Math_obj::max(( (Float)(b1->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(b2->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXDLIN( 582)			if ((minx == maxx)) {
HXLINE( 582)				if (::hx::IsLessEq( miny,I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 582)					_hx_tmp = ::hx::IsLessEq( I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            				}
            				else {
HXLINE( 582)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 582)				if ((miny == maxy)) {
HXLINE( 582)					if (::hx::IsLessEq( minx,I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 582)						_hx_tmp = ::hx::IsLessEq( I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            					}
            					else {
HXLINE( 582)						_hx_tmp = false;
            					}
            				}
            				else {
HXLINE( 582)					bool _hx_tmp1;
HXDLIN( 582)					bool _hx_tmp2;
HXDLIN( 582)					if (::hx::IsLessEq( minx,(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 582)						_hx_tmp2 = ((( (Float)(I->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            					}
            					else {
HXLINE( 582)						_hx_tmp2 = false;
            					}
HXDLIN( 582)					if (_hx_tmp2) {
HXLINE( 582)						_hx_tmp1 = ::hx::IsLessEq( miny,(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            					}
            					else {
HXLINE( 582)						_hx_tmp1 = false;
            					}
HXDLIN( 582)					if (_hx_tmp1) {
HXLINE( 582)						_hx_tmp = ((( (Float)(I->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            					}
            					else {
HXLINE( 582)						_hx_tmp = false;
            					}
            				}
            			}
            		}
            		else {
HXLINE( 582)			_hx_tmp = false;
            		}
HXDLIN( 582)		if (_hx_tmp) {
HXLINE( 582)			return I;
            		}
HXLINE( 583)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(PolyK_obj,getLineIntersection,return )

bool PolyK_obj::inRect( ::Dynamic a, ::Dynamic b, ::Dynamic c){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_586_inRect)
HXLINE( 587)		Float minx = ::Math_obj::min(( (Float)(b->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(c->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 588)		Float maxx = ::Math_obj::max(( (Float)(b->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ),( (Float)(c->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 589)		Float miny = ::Math_obj::min(( (Float)(b->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(c->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 590)		Float maxy = ::Math_obj::max(( (Float)(b->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ),( (Float)(c->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 591)		if ((minx == maxx)) {
HXLINE( 591)			if (::hx::IsLessEq( miny,a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) )) {
HXLINE( 591)				return ::hx::IsLessEq( a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic),maxy );
            			}
            			else {
HXLINE( 591)				return false;
            			}
            		}
HXLINE( 592)		if ((miny == maxy)) {
HXLINE( 592)			if (::hx::IsLessEq( minx,a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) )) {
HXLINE( 592)				return ::hx::IsLessEq( a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),maxx );
            			}
            			else {
HXLINE( 592)				return false;
            			}
            		}
HXLINE( 594)		bool _hx_tmp;
HXDLIN( 594)		bool _hx_tmp1;
HXDLIN( 594)		if (::hx::IsLessEq( minx,(a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) )) {
HXLINE( 594)			_hx_tmp1 = ((( (Float)(a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxx);
            		}
            		else {
HXLINE( 594)			_hx_tmp1 = false;
            		}
HXDLIN( 594)		if (_hx_tmp1) {
HXLINE( 594)			_hx_tmp = ::hx::IsLessEq( miny,(a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic) + ((Float)0.0000000001)) );
            		}
            		else {
HXLINE( 594)			_hx_tmp = false;
            		}
HXDLIN( 594)		if (_hx_tmp) {
HXLINE( 594)			return ((( (Float)(a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ((Float)0.0000000001)) <= maxy);
            		}
            		else {
HXLINE( 594)			return false;
            		}
HXDLIN( 594)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PolyK_obj,inRect,return )

bool PolyK_obj::convex(Float ax,Float ay,Float bx,Float by,Float cx,Float cy){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_598_convex)
HXDLIN( 598)		return ((((ay - by) * (cx - bx)) + ((bx - ax) * (cy - by))) >= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(PolyK_obj,convex,return )

Float PolyK_obj::dist( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_602_dist)
HXLINE( 603)		Float dx = (( (Float)(b->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) ));
HXLINE( 604)		Float dy = (( (Float)(b->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ) - ( (Float)(a->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) ));
HXLINE( 605)		return ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(PolyK_obj,dist,return )


PolyK_obj::PolyK_obj()
{
}

bool PolyK_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"dist") ) { outValue = dist_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"slice") ) { outValue = slice_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"inRect") ) { outValue = inRect_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"convex") ) { outValue = convex_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getArea") ) { outValue = getArea_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAABB") ) { outValue = getAABB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reverse") ) { outValue = reverse_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"raycast") ) { outValue = raycast_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isSimple") ) { outValue = isSimple_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isConvex") ) { outValue = isConvex_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"updateISC") ) { outValue = updateISC_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getPoints") ) { outValue = getPoints_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"triangulate") ) { outValue = triangulate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"closestEdge") ) { outValue = closestEdge_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"containsPoint") ) { outValue = containsPoint_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pointLineDist") ) { outValue = pointLineDist_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"firstWithFlag") ) { outValue = firstWithFlag_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"pointInTriangle") ) { outValue = pointInTriangle_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"rayLineIntersection") ) { outValue = rayLineIntersection_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getLineIntersection") ) { outValue = getLineIntersection_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PolyK_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo PolyK_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &PolyK_obj::small,HX_("small",c7,f0,6a,7f)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void PolyK_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PolyK_obj::small,"small");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PolyK_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PolyK_obj::small,"small");
};

#endif

::hx::Class PolyK_obj::__mClass;

static ::String PolyK_obj_sStaticFields[] = {
	HX_("small",c7,f0,6a,7f),
	HX_("isSimple",bc,9f,e8,10),
	HX_("isConvex",f1,12,48,20),
	HX_("getArea",43,3b,f7,12),
	HX_("getAABB",36,ee,d1,12),
	HX_("reverse",22,39,fc,1a),
	HX_("triangulate",2c,65,9d,e9),
	HX_("containsPoint",b1,b9,eb,92),
	HX_("slice",52,c4,c7,7e),
	HX_("raycast",a9,31,63,3a),
	HX_("closestEdge",36,6f,29,79),
	HX_("pointLineDist",ea,f5,18,70),
	HX_("updateISC",b0,d2,dc,82),
	HX_("getPoints",59,9b,84,73),
	HX_("firstWithFlag",22,0d,35,0c),
	HX_("pointInTriangle",3d,00,a9,b8),
	HX_("rayLineIntersection",67,ca,4e,d6),
	HX_("getLineIntersection",13,8d,8b,59),
	HX_("inRect",a9,2b,0d,88),
	HX_("convex",67,77,de,c7),
	HX_("dist",66,67,69,42),
	::String(null())
};

void PolyK_obj::__register()
{
	PolyK_obj _hx_dummy;
	PolyK_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxPolyK.PolyK",00,f2,5d,c1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PolyK_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PolyK_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(PolyK_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PolyK_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PolyK_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PolyK_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PolyK_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void PolyK_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_2fc1aea7af27459c_105_boot)
HXDLIN( 105)		small = ((Float)0.0000000001);
            	}
}

} // end namespace hxPolyK
