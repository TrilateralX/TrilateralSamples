// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_justPath_StoreF6
#include <justPath/StoreF6.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_3_new,"justPath.StoreF6","new",0xd1dd3aa6,"justPath.StoreF6.new","justPath/StoreF6.hx",3,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_13_clear,"justPath.StoreF6","clear",0x9ec87953,"justPath.StoreF6.clear","justPath/StoreF6.hx",13,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_24_length,"justPath.StoreF6","length",0xe8015a60,"justPath.StoreF6.length","justPath/StoreF6.hx",24,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_26_push,"justPath.StoreF6","push",0xd114a4d4,"justPath.StoreF6.push","justPath/StoreF6.hx",26,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_46_pop,"justPath.StoreF6","pop",0xd1dec7d7,"justPath.StoreF6.pop","justPath/StoreF6.hx",46,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_74_unshift,"justPath.StoreF6","unshift",0x0a46e8cf,"justPath.StoreF6.unshift","justPath/StoreF6.hx",74,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_84_shift,"justPath.StoreF6","shift",0xd28ff448,"justPath.StoreF6.shift","justPath/StoreF6.hx",84,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_99_toString,"justPath.StoreF6","toString",0x078068a6,"justPath.StoreF6.toString","justPath/StoreF6.hx",99,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_105_populatedToString,"justPath.StoreF6","populatedToString",0xdd6c3dcc,"justPath.StoreF6.populatedToString","justPath/StoreF6.hx",105,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_130_hasNext,"justPath.StoreF6","hasNext",0xa9d9aab3,"justPath.StoreF6.hasNext","justPath/StoreF6.hx",130,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_132_resetIterator,"justPath.StoreF6","resetIterator",0x903c74a3,"justPath.StoreF6.resetIterator","justPath/StoreF6.hx",132,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_136_next,"justPath.StoreF6","next",0xcfb617ed,"justPath.StoreF6.next","justPath/StoreF6.hx",136,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_158_first,"justPath.StoreF6","first",0x570a7ff6,"justPath.StoreF6.first","justPath/StoreF6.hx",158,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_160_last,"justPath.StoreF6","last",0xce609d50,"justPath.StoreF6.last","justPath/StoreF6.hx",160,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_180_penultimate,"justPath.StoreF6","penultimate",0x565cbd70,"justPath.StoreF6.penultimate","justPath/StoreF6.hx",180,0xf375c6cb)
HX_LOCAL_STACK_FRAME(_hx_pos_76c7ece0e329c4b8_200_toArray,"justPath.StoreF6","toArray",0x83a6bf64,"justPath.StoreF6.toArray","justPath/StoreF6.hx",200,0xf375c6cb)
namespace justPath{

void StoreF6_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_3_new)
HXLINE( 128)		this->count = 0;
HXLINE(   4)		this->l = 0;
            	}

Dynamic StoreF6_obj::__CreateEmpty() { return new StoreF6_obj; }

void *StoreF6_obj::_hx_vtable = 0;

Dynamic StoreF6_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StoreF6_obj > _hx_result = new StoreF6_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StoreF6_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7f7753e8;
}

void StoreF6_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_13_clear)
HXLINE(  14)		this->l = 0;
HXLINE(  15)		this->s0 = null();
HXLINE(  16)		this->s1 = null();
HXLINE(  17)		this->s2 = null();
HXLINE(  18)		this->s3 = null();
HXLINE(  19)		this->s4 = null();
HXLINE(  20)		this->s5 = null();
HXLINE(  21)		this->s6 = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,clear,(void))

int StoreF6_obj::length(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_24_length)
HXDLIN(  24)		return this->l;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,length,return )

void StoreF6_obj::push( ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_26_push)
HXLINE(  27)		switch((int)(this->l)){
            			case (int)0: {
HXLINE(  29)				this->s0 = v;
            			}
            			break;
            			case (int)1: {
HXLINE(  31)				this->s1 = v;
            			}
            			break;
            			case (int)2: {
HXLINE(  33)				this->s2 = v;
            			}
            			break;
            			case (int)3: {
HXLINE(  35)				this->s3 = v;
            			}
            			break;
            			case (int)4: {
HXLINE(  37)				this->s4 = v;
            			}
            			break;
            			case (int)5: {
HXLINE(  39)				this->s5 = v;
            			}
            			break;
            			default:{
HXLINE(  41)				if (::hx::IsNull( this->s6 )) {
HXLINE(  41)					this->s6 =  ::justPath::StoreF6_obj::__alloc( HX_CTX );
            				}
HXLINE(  42)				this->s6->push(v);
            			}
            		}
HXLINE(  44)		this->l++;
            	}


HX_DEFINE_DYNAMIC_FUNC1(StoreF6_obj,push,(void))

 ::Dynamic StoreF6_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_46_pop)
HXLINE(  47)		 ::Dynamic out = null();
HXLINE(  48)		switch((int)(this->l)){
            			case (int)0: {
HXLINE(  50)				out = this->s0;
HXLINE(  51)				this->s0 = null();
            			}
            			break;
            			case (int)1: {
HXLINE(  53)				out = this->s1;
HXLINE(  54)				this->s1 = null();
            			}
            			break;
            			case (int)2: {
HXLINE(  56)				out = this->s2;
HXLINE(  57)				this->s2 = null();
            			}
            			break;
            			case (int)3: {
HXLINE(  59)				out = this->s3;
HXLINE(  60)				this->s3 = null();
            			}
            			break;
            			case (int)4: {
HXLINE(  62)				out = this->s4;
HXLINE(  63)				this->s4 = null();
            			}
            			break;
            			case (int)5: {
HXLINE(  65)				out = this->s5;
HXLINE(  66)				this->s5 = null();
            			}
            			break;
            			default:{
HXLINE(  68)				if (::hx::IsNotNull( this->s6 )) {
HXLINE(  68)					this->s6->pop();
            				}
            			}
            		}
HXLINE(  70)		this->l--;
HXLINE(  71)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,pop,return )

void StoreF6_obj::unshift( ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_74_unshift)
HXLINE(  75)		if (::hx::IsNull( this->s6 )) {
HXLINE(  75)			this->s6 =  ::justPath::StoreF6_obj::__alloc( HX_CTX );
            		}
HXLINE(  76)		this->s6->unshift(this->s5);
HXLINE(  77)		this->s5 = this->s4;
HXLINE(  78)		this->s4 = this->s3;
HXLINE(  79)		this->s3 = this->s2;
HXLINE(  80)		this->s2 = this->s1;
HXLINE(  81)		this->s0 = v;
HXLINE(  82)		this->l++;
            	}


HX_DEFINE_DYNAMIC_FUNC1(StoreF6_obj,unshift,(void))

 ::Dynamic StoreF6_obj::shift(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_84_shift)
HXLINE(  85)		 ::Dynamic out = this->s0;
HXLINE(  86)		if ((this->l != 0)) {
HXLINE(  87)			this->s0 = this->s1;
HXLINE(  88)			this->s1 = this->s2;
HXLINE(  89)			this->s2 = this->s3;
HXLINE(  90)			this->s3 = this->s4;
HXLINE(  91)			this->s4 = this->s5;
HXLINE(  92)			this->s5 = null();
HXLINE(  93)			if (::hx::IsNotNull( this->s6 )) {
HXLINE(  93)				this->s5 = this->s6->shift();
            			}
HXLINE(  94)			this->l--;
            		}
HXLINE(  96)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,shift,return )

::String StoreF6_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_99_toString)
HXDLIN(  99)		if (::hx::IsNull( this->s6 )) {
HXLINE( 100)			return (((((((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3) + HX_(", ",74,26,00,00)) + this->s4) + HX_(", ",74,26,00,00)) + this->s5);
            		}
            		else {
HXLINE( 102)			::String _hx_tmp = (((((((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3) + HX_(", ",74,26,00,00)) + this->s4) + HX_(", ",74,26,00,00)) + this->s5);
HXDLIN( 102)			return (_hx_tmp + this->s6->toString());
            		}
HXLINE(  99)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,toString,return )

::String StoreF6_obj::populatedToString(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_105_populatedToString)
HXLINE( 106)		::String out = HX_("",00,00,00,00);
HXLINE( 107)		switch((int)((this->l - 1))){
            			case (int)0: {
HXLINE( 109)				out = (HX_("",00,00,00,00) + this->s0);
            			}
            			break;
            			case (int)1: {
HXLINE( 111)				out = (((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1);
            			}
            			break;
            			case (int)2: {
HXLINE( 113)				out = (((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2);
            			}
            			break;
            			case (int)3: {
HXLINE( 115)				out = (((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3);
            			}
            			break;
            			case (int)4: {
HXLINE( 117)				out = (((((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3) + HX_(", ",74,26,00,00)) + this->s4);
            			}
            			break;
            			case (int)5: {
HXLINE( 119)				out = (((((((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3) + HX_(", ",74,26,00,00)) + this->s4) + HX_(", ",74,26,00,00)) + this->s5);
            			}
            			break;
            			default:{
HXLINE( 121)				out = (((((((((((HX_("",00,00,00,00) + this->s0) + HX_(", ",74,26,00,00)) + this->s1) + HX_(", ",74,26,00,00)) + this->s2) + HX_(", ",74,26,00,00)) + this->s3) + HX_(", ",74,26,00,00)) + this->s4) + HX_(", ",74,26,00,00)) + this->s5);
HXLINE( 122)				if (::hx::IsNotNull( this->s6 )) {
HXLINE( 123)					out = (out + this->s6->populatedToString());
            				}
            			}
            		}
HXLINE( 126)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,populatedToString,return )

bool StoreF6_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_130_hasNext)
HXDLIN( 130)		return (this->count < (this->l + 1));
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,hasNext,return )

void StoreF6_obj::resetIterator(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_132_resetIterator)
HXLINE( 133)		this->count = 0;
HXLINE( 134)		if (::hx::IsNotNull( this->s6 )) {
HXLINE( 134)			this->s6->resetIterator();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,resetIterator,(void))

 ::Dynamic StoreF6_obj::next(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_136_next)
HXLINE( 137)		 ::Dynamic out = null();
HXLINE( 138)		switch((int)(this->count)){
            			case (int)0: {
HXLINE( 140)				out = this->s0;
            			}
            			break;
            			case (int)1: {
HXLINE( 142)				out = this->s1;
            			}
            			break;
            			case (int)2: {
HXLINE( 144)				out = this->s2;
            			}
            			break;
            			case (int)3: {
HXLINE( 146)				out = this->s3;
            			}
            			break;
            			case (int)4: {
HXLINE( 148)				out = this->s4;
            			}
            			break;
            			case (int)5: {
HXLINE( 150)				out = this->s5;
            			}
            			break;
            			default:{
HXLINE( 152)				out = this->s6->next();
            			}
            		}
HXLINE( 154)		this->count++;
HXLINE( 155)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,next,return )

 ::Dynamic StoreF6_obj::first(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_158_first)
HXDLIN( 158)		return this->s0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,first,return )

 ::Dynamic StoreF6_obj::last(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_160_last)
HXLINE( 161)		 ::Dynamic out = null();
HXLINE( 162)		switch((int)(this->l)){
            			case (int)0: {
HXLINE( 164)				out = this->s0;
            			}
            			break;
            			case (int)1: {
HXLINE( 166)				out = this->s1;
            			}
            			break;
            			case (int)2: {
HXLINE( 168)				out = this->s2;
            			}
            			break;
            			case (int)3: {
HXLINE( 170)				out = this->s3;
            			}
            			break;
            			case (int)4: {
HXLINE( 172)				out = this->s4;
            			}
            			break;
            			case (int)5: {
HXLINE( 174)				out = this->s5;
            			}
            			break;
            			default:{
HXLINE( 176)				out = this->s6->last();
            			}
            		}
HXLINE( 178)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,last,return )

 ::Dynamic StoreF6_obj::penultimate(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_180_penultimate)
HXLINE( 181)		 ::Dynamic out = null();
HXLINE( 182)		switch((int)((this->l - 1))){
            			case (int)0: {
HXLINE( 184)				out = this->s0;
            			}
            			break;
            			case (int)1: {
HXLINE( 186)				out = this->s1;
            			}
            			break;
            			case (int)2: {
HXLINE( 188)				out = this->s2;
            			}
            			break;
            			case (int)3: {
HXLINE( 190)				out = this->s3;
            			}
            			break;
            			case (int)4: {
HXLINE( 192)				out = this->s4;
            			}
            			break;
            			case (int)5: {
HXLINE( 194)				out = this->s5;
            			}
            			break;
            			default:{
HXLINE( 196)				out = this->s6->penultimate();
            			}
            		}
HXLINE( 198)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,penultimate,return )

void StoreF6_obj::toArray(){
            	HX_STACKFRAME(&_hx_pos_76c7ece0e329c4b8_200_toArray)
HXLINE( 201)		::Array< ::Dynamic> arr = ::Array_obj< ::Dynamic>::__new();
HXLINE( 202)		this->count = 0;
HXLINE( 204)		{
HXLINE( 204)			 ::justPath::StoreF6 _g = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 204)			while((_g->count < (_g->l + 1))){
HXLINE( 204)				 ::Dynamic out = null();
HXDLIN( 204)				switch((int)(_g->count)){
            					case (int)0: {
HXLINE( 204)						out = _g->s0;
            					}
            					break;
            					case (int)1: {
HXLINE( 204)						out = _g->s1;
            					}
            					break;
            					case (int)2: {
HXLINE( 204)						out = _g->s2;
            					}
            					break;
            					case (int)3: {
HXLINE( 204)						out = _g->s3;
            					}
            					break;
            					case (int)4: {
HXLINE( 204)						out = _g->s4;
            					}
            					break;
            					case (int)5: {
HXLINE( 204)						out = _g->s5;
            					}
            					break;
            					default:{
HXLINE( 204)						 ::justPath::StoreF6 _this = _g->s6;
HXDLIN( 204)						 ::Dynamic out1 = null();
HXDLIN( 204)						switch((int)(_this->count)){
            							case (int)0: {
HXLINE( 204)								out1 = _this->s0;
            							}
            							break;
            							case (int)1: {
HXLINE( 204)								out1 = _this->s1;
            							}
            							break;
            							case (int)2: {
HXLINE( 204)								out1 = _this->s2;
            							}
            							break;
            							case (int)3: {
HXLINE( 204)								out1 = _this->s3;
            							}
            							break;
            							case (int)4: {
HXLINE( 204)								out1 = _this->s4;
            							}
            							break;
            							case (int)5: {
HXLINE( 204)								out1 = _this->s5;
            							}
            							break;
            							default:{
HXLINE( 204)								out1 = _this->s6->next();
            							}
            						}
HXDLIN( 204)						_this->count++;
HXDLIN( 204)						out = out1;
            					}
            				}
HXDLIN( 204)				_g->count++;
HXDLIN( 204)				 ::Dynamic i = out;
HXLINE( 205)				arr->push(i);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StoreF6_obj,toArray,(void))


StoreF6_obj::StoreF6_obj()
{
}

void StoreF6_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StoreF6);
	HX_MARK_MEMBER_NAME(l,"l");
	HX_MARK_MEMBER_NAME(s0,"s0");
	HX_MARK_MEMBER_NAME(s1,"s1");
	HX_MARK_MEMBER_NAME(s2,"s2");
	HX_MARK_MEMBER_NAME(s3,"s3");
	HX_MARK_MEMBER_NAME(s4,"s4");
	HX_MARK_MEMBER_NAME(s5,"s5");
	HX_MARK_MEMBER_NAME(s6,"s6");
	HX_MARK_MEMBER_NAME(count,"count");
	HX_MARK_END_CLASS();
}

void StoreF6_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(l,"l");
	HX_VISIT_MEMBER_NAME(s0,"s0");
	HX_VISIT_MEMBER_NAME(s1,"s1");
	HX_VISIT_MEMBER_NAME(s2,"s2");
	HX_VISIT_MEMBER_NAME(s3,"s3");
	HX_VISIT_MEMBER_NAME(s4,"s4");
	HX_VISIT_MEMBER_NAME(s5,"s5");
	HX_VISIT_MEMBER_NAME(s6,"s6");
	HX_VISIT_MEMBER_NAME(count,"count");
}

::hx::Val StoreF6_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"l") ) { return ::hx::Val( l ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"s0") ) { return ::hx::Val( s0 ); }
		if (HX_FIELD_EQ(inName,"s1") ) { return ::hx::Val( s1 ); }
		if (HX_FIELD_EQ(inName,"s2") ) { return ::hx::Val( s2 ); }
		if (HX_FIELD_EQ(inName,"s3") ) { return ::hx::Val( s3 ); }
		if (HX_FIELD_EQ(inName,"s4") ) { return ::hx::Val( s4 ); }
		if (HX_FIELD_EQ(inName,"s5") ) { return ::hx::Val( s5 ); }
		if (HX_FIELD_EQ(inName,"s6") ) { return ::hx::Val( s6 ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"pop") ) { return ::hx::Val( pop_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"push") ) { return ::hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"next") ) { return ::hx::Val( next_dyn() ); }
		if (HX_FIELD_EQ(inName,"last") ) { return ::hx::Val( last_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"shift") ) { return ::hx::Val( shift_dyn() ); }
		if (HX_FIELD_EQ(inName,"count") ) { return ::hx::Val( count ); }
		if (HX_FIELD_EQ(inName,"first") ) { return ::hx::Val( first_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return ::hx::Val( length_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"unshift") ) { return ::hx::Val( unshift_dyn() ); }
		if (HX_FIELD_EQ(inName,"hasNext") ) { return ::hx::Val( hasNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"toArray") ) { return ::hx::Val( toArray_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"penultimate") ) { return ::hx::Val( penultimate_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"resetIterator") ) { return ::hx::Val( resetIterator_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"populatedToString") ) { return ::hx::Val( populatedToString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StoreF6_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"l") ) { l=inValue.Cast< int >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"s0") ) { s0=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s1") ) { s1=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s2") ) { s2=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s3") ) { s3=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s4") ) { s4=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s5") ) { s5=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s6") ) { s6=inValue.Cast<  ::justPath::StoreF6 >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"count") ) { count=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StoreF6_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("l",6c,00,00,00));
	outFields->push(HX_("s0",5d,64,00,00));
	outFields->push(HX_("s1",5e,64,00,00));
	outFields->push(HX_("s2",5f,64,00,00));
	outFields->push(HX_("s3",60,64,00,00));
	outFields->push(HX_("s4",61,64,00,00));
	outFields->push(HX_("s5",62,64,00,00));
	outFields->push(HX_("s6",63,64,00,00));
	outFields->push(HX_("count",cf,44,63,4a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StoreF6_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(StoreF6_obj,l),HX_("l",6c,00,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s0),HX_("s0",5d,64,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s1),HX_("s1",5e,64,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s2),HX_("s2",5f,64,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s3),HX_("s3",60,64,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s4),HX_("s4",61,64,00,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(StoreF6_obj,s5),HX_("s5",62,64,00,00)},
	{::hx::fsObject /*  ::justPath::StoreF6 */ ,(int)offsetof(StoreF6_obj,s6),HX_("s6",63,64,00,00)},
	{::hx::fsInt,(int)offsetof(StoreF6_obj,count),HX_("count",cf,44,63,4a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *StoreF6_obj_sStaticStorageInfo = 0;
#endif

static ::String StoreF6_obj_sMemberFields[] = {
	HX_("l",6c,00,00,00),
	HX_("s0",5d,64,00,00),
	HX_("s1",5e,64,00,00),
	HX_("s2",5f,64,00,00),
	HX_("s3",60,64,00,00),
	HX_("s4",61,64,00,00),
	HX_("s5",62,64,00,00),
	HX_("s6",63,64,00,00),
	HX_("clear",8d,71,5b,48),
	HX_("length",e6,94,07,9f),
	HX_("push",da,11,61,4a),
	HX_("pop",91,5d,55,00),
	HX_("unshift",89,e3,b3,78),
	HX_("shift",82,ec,22,7c),
	HX_("toString",ac,d0,6e,38),
	HX_("populatedToString",06,a5,2f,e1),
	HX_("count",cf,44,63,4a),
	HX_("hasNext",6d,a5,46,18),
	HX_("resetIterator",dd,36,39,c4),
	HX_("next",f3,84,02,49),
	HX_("first",30,78,9d,00),
	HX_("last",56,0a,ad,47),
	HX_("penultimate",2a,9d,56,b0),
	HX_("toArray",1e,ba,13,f2),
	::String(null()) };

::hx::Class StoreF6_obj::__mClass;

void StoreF6_obj::__register()
{
	StoreF6_obj _hx_dummy;
	StoreF6_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("justPath.StoreF6",b4,af,fd,2c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StoreF6_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StoreF6_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StoreF6_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StoreF6_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace justPath
