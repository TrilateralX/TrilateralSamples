// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_kitGL_glLime_setup_NonGL
#include <kitGL/glLime/setup/NonGL.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_20b2c44dd5dad217_7_new,"kitGL.glLime.setup.NonGL","new",0xb8e0c5d2,"kitGL.glLime.setup.NonGL.new","kitGL/glLime/setup/NonGL.hx",7,0xbf6dacff)
HX_LOCAL_STACK_FRAME(_hx_pos_20b2c44dd5dad217_12_update,"kitGL.glLime.setup.NonGL","update",0xea9a03d7,"kitGL.glLime.setup.NonGL.update","kitGL/glLime/setup/NonGL.hx",12,0xbf6dacff)
HX_LOCAL_STACK_FRAME(_hx_pos_20b2c44dd5dad217_17_setup,"kitGL.glLime.setup.NonGL","setup",0x27fa646f,"kitGL.glLime.setup.NonGL.setup","kitGL/glLime/setup/NonGL.hx",17,0xbf6dacff)
HX_LOCAL_STACK_FRAME(_hx_pos_20b2c44dd5dad217_25_render,"kitGL.glLime.setup.NonGL","render",0x68bde924,"kitGL.glLime.setup.NonGL.render","kitGL/glLime/setup/NonGL.hx",25,0xbf6dacff)
namespace kitGL{
namespace glLime{
namespace setup{

void NonGL_obj::__construct(int width_,int height_){
            	HX_STACKFRAME(&_hx_pos_20b2c44dd5dad217_7_new)
HXLINE(   8)		this->width = width_;
HXLINE(   9)		this->height = height_;
            	}

Dynamic NonGL_obj::__CreateEmpty() { return new NonGL_obj; }

void *NonGL_obj::_hx_vtable = 0;

Dynamic NonGL_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NonGL_obj > _hx_result = new NonGL_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool NonGL_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x09e34002;
}

void NonGL_obj::update(){
            	HX_STACKFRAME(&_hx_pos_20b2c44dd5dad217_12_update)
            	}


HX_DEFINE_DYNAMIC_FUNC0(NonGL_obj,update,(void))

void NonGL_obj::setup( ::lime::graphics::RenderContext context){
            	HX_STACKFRAME(&_hx_pos_20b2c44dd5dad217_17_setup)
HXDLIN(  17)		::String _hx_switch_0 = context->type;
            		if (  (_hx_switch_0==HX_("cairo",88,30,19,41)) ||  (_hx_switch_0==HX_("canvas",d8,54,42,b8)) ||  (_hx_switch_0==HX_("dom",82,42,4c,00)) ||  (_hx_switch_0==HX_("flash",b0,35,8c,02)) ){
HXLINE(  18)			goto _hx_goto_2;
            		}
            		/* default */{
            		}
            		_hx_goto_2:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NonGL_obj,setup,(void))

void NonGL_obj::render( ::lime::graphics::RenderContext context){
            	HX_STACKFRAME(&_hx_pos_20b2c44dd5dad217_25_render)
HXDLIN(  25)		::String _hx_switch_0 = context->type;
            		if (  (_hx_switch_0==HX_("cairo",88,30,19,41)) ||  (_hx_switch_0==HX_("canvas",d8,54,42,b8)) ||  (_hx_switch_0==HX_("dom",82,42,4c,00)) ||  (_hx_switch_0==HX_("flash",b0,35,8c,02)) ){
HXLINE(  26)			goto _hx_goto_4;
            		}
            		/* default */{
            		}
            		_hx_goto_4:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NonGL_obj,render,(void))


::hx::ObjectPtr< NonGL_obj > NonGL_obj::__new(int width_,int height_) {
	::hx::ObjectPtr< NonGL_obj > __this = new NonGL_obj();
	__this->__construct(width_,height_);
	return __this;
}

::hx::ObjectPtr< NonGL_obj > NonGL_obj::__alloc(::hx::Ctx *_hx_ctx,int width_,int height_) {
	NonGL_obj *__this = (NonGL_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(NonGL_obj), false, "kitGL.glLime.setup.NonGL"));
	*(void **)__this = NonGL_obj::_hx_vtable;
	__this->__construct(width_,height_);
	return __this;
}

NonGL_obj::NonGL_obj()
{
}

::hx::Val NonGL_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { return ::hx::Val( width ); }
		if (HX_FIELD_EQ(inName,"setup") ) { return ::hx::Val( setup_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { return ::hx::Val( height ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val NonGL_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { width=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { height=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NonGL_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("width",06,b6,62,ca));
	outFields->push(HX_("height",e7,07,4c,02));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo NonGL_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(NonGL_obj,width),HX_("width",06,b6,62,ca)},
	{::hx::fsInt,(int)offsetof(NonGL_obj,height),HX_("height",e7,07,4c,02)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *NonGL_obj_sStaticStorageInfo = 0;
#endif

static ::String NonGL_obj_sMemberFields[] = {
	HX_("width",06,b6,62,ca),
	HX_("height",e7,07,4c,02),
	HX_("update",09,86,05,87),
	HX_("setup",7d,ae,2f,7a),
	HX_("render",56,6b,29,05),
	::String(null()) };

::hx::Class NonGL_obj::__mClass;

void NonGL_obj::__register()
{
	NonGL_obj _hx_dummy;
	NonGL_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kitGL.glLime.setup.NonGL",e0,34,b9,f9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(NonGL_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< NonGL_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NonGL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NonGL_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kitGL
} // end namespace glLime
} // end namespace setup
