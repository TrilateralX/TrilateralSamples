// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_trilateral3_drawing__ColorAbstract_ColorAbstract_Impl_
#define INCLUDED_trilateral3_drawing__ColorAbstract_ColorAbstract_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(trilateral3,drawing,_ColorAbstract,ColorAbstract_Impl_)

namespace trilateral3{
namespace drawing{
namespace _ColorAbstract{


class HXCPP_CLASS_ATTRIBUTES ColorAbstract_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ColorAbstract_Impl__obj OBJ_;
		ColorAbstract_Impl__obj();

	public:
		enum { _hx_ClassId = 0x1bbf3d5c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.drawing._ColorAbstract.ColorAbstract_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.drawing._ColorAbstract.ColorAbstract_Impl_"); }

		inline static ::hx::ObjectPtr< ColorAbstract_Impl__obj > __new() {
			::hx::ObjectPtr< ColorAbstract_Impl__obj > __this = new ColorAbstract_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ColorAbstract_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			ColorAbstract_Impl__obj *__this = (ColorAbstract_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ColorAbstract_Impl__obj), false, "trilateral3.drawing._ColorAbstract.ColorAbstract_Impl_"));
			*(void **)__this = ColorAbstract_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ColorAbstract_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ColorAbstract_Impl_",a5,d7,6c,21); }

		static  ::Dynamic _new( ::Dynamic colorType);
		static ::Dynamic _new_dyn();

		static Float get_pos( ::Dynamic this1);
		static ::Dynamic get_pos_dyn();

		static Float set_pos( ::Dynamic this1,Float v);
		static ::Dynamic set_pos_dyn();

		static int set_size( ::Dynamic this1,int v);
		static ::Dynamic set_size_dyn();

		static int get_size( ::Dynamic this1);
		static ::Dynamic get_size_dyn();

};

} // end namespace trilateral3
} // end namespace drawing
} // end namespace _ColorAbstract

#endif /* INCLUDED_trilateral3_drawing__ColorAbstract_ColorAbstract_Impl_ */ 
