// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_trilateral3_structure_StartEnd
#define INCLUDED_trilateral3_structure_StartEnd

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_4301c2a9a90f417c_6_new)
HX_DECLARE_CLASS2(trilateral3,structure,StartEnd)

namespace trilateral3{
namespace structure{


class HXCPP_CLASS_ATTRIBUTES StartEnd_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef StartEnd_obj OBJ_;
		StartEnd_obj();

	public:
		enum { _hx_ClassId = 0x776f2405 };

		void __construct(int start,int end);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.structure.StartEnd")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.structure.StartEnd"); }

		inline static ::hx::ObjectPtr< StartEnd_obj > __new(int start,int end) {
			::hx::ObjectPtr< StartEnd_obj > __this = new StartEnd_obj();
			__this->__construct(start,end);
			return __this;
		}

		inline static ::hx::ObjectPtr< StartEnd_obj > __alloc(::hx::Ctx *_hx_ctx,int start,int end) {
			StartEnd_obj *__this = (StartEnd_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StartEnd_obj), false, "trilateral3.structure.StartEnd"));
			*(void **)__this = StartEnd_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_4301c2a9a90f417c_6_new)
HXLINE(   7)		( ( ::trilateral3::structure::StartEnd)(__this) )->start = start;
HXLINE(   8)		( ( ::trilateral3::structure::StartEnd)(__this) )->end = end;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~StartEnd_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("StartEnd",b9,6c,42,1c); }

		int start;
		int end;
};

} // end namespace trilateral3
} // end namespace structure

#endif /* INCLUDED_trilateral3_structure_StartEnd */ 
