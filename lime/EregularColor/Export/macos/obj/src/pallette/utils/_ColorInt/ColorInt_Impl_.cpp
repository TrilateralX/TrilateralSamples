// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_pallette_utils_ARGB
#include <pallette/utils/ARGB.h>
#endif
#ifndef INCLUDED_pallette_utils_CYMK
#include <pallette/utils/CYMK.h>
#endif
#ifndef INCLUDED_pallette_utils_CYMKA
#include <pallette/utils/CYMKA.h>
#endif
#ifndef INCLUDED_pallette_utils_RGB
#include <pallette/utils/RGB.h>
#endif
#ifndef INCLUDED_pallette_utils__ColorInt_ColorInt_Impl_
#include <pallette/utils/_ColorInt/ColorInt_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_10__new,"pallette.utils._ColorInt.ColorInt_Impl_","_new",0x306761c6,"pallette.utils._ColorInt.ColorInt_Impl_._new","pallette/utils/ColorInt.hx",10,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_17_fromARGB,"pallette.utils._ColorInt.ColorInt_Impl_","fromARGB",0x6efeda9b,"pallette.utils._ColorInt.ColorInt_Impl_.fromARGB","pallette/utils/ColorInt.hx",17,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_22_fromRGB,"pallette.utils._ColorInt.ColorInt_Impl_","fromRGB",0xe2b3507e,"pallette.utils._ColorInt.ColorInt_Impl_.fromRGB","pallette/utils/ColorInt.hx",22,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_27_htmlStyleRGBA,"pallette.utils._ColorInt.ColorInt_Impl_","htmlStyleRGBA",0x40f16e75,"pallette.utils._ColorInt.ColorInt_Impl_.htmlStyleRGBA","pallette/utils/ColorInt.hx",27,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_32_htmlStyleHex,"pallette.utils._ColorInt.ColorInt_Impl_","htmlStyleHex",0x8c50d81a,"pallette.utils._ColorInt.ColorInt_Impl_.htmlStyleHex","pallette/utils/ColorInt.hx",32,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_37_toARGB,"pallette.utils._ColorInt.ColorInt_Impl_","toARGB",0x835583ec,"pallette.utils._ColorInt.ColorInt_Impl_.toARGB","pallette/utils/ColorInt.hx",37,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_42_toRGB,"pallette.utils._ColorInt.ColorInt_Impl_","toRGB",0x4212fc4d,"pallette.utils._ColorInt.ColorInt_Impl_.toRGB","pallette/utils/ColorInt.hx",42,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_47_fromCYMKA,"pallette.utils._ColorInt.ColorInt_Impl_","fromCYMKA",0xdb72a9fe,"pallette.utils._ColorInt.ColorInt_Impl_.fromCYMKA","pallette/utils/ColorInt.hx",47,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_52_fromCYMK,"pallette.utils._ColorInt.ColorInt_Impl_","fromCYMK",0x70569ce3,"pallette.utils._ColorInt.ColorInt_Impl_.fromCYMK","pallette/utils/ColorInt.hx",52,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_56_toCYMKA,"pallette.utils._ColorInt.ColorInt_Impl_","toCYMKA",0x92f0278d,"pallette.utils._ColorInt.ColorInt_Impl_.toCYMKA","pallette/utils/ColorInt.hx",56,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_65_toCYMK,"pallette.utils._ColorInt.ColorInt_Impl_","toCYMK",0x84ad4634,"pallette.utils._ColorInt.ColorInt_Impl_.toCYMK","pallette/utils/ColorInt.hx",65,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_75_get_cyan,"pallette.utils._ColorInt.ColorInt_Impl_","get_cyan",0x925de391,"pallette.utils._ColorInt.ColorInt_Impl_.get_cyan","pallette/utils/ColorInt.hx",75,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_78_set_cyan,"pallette.utils._ColorInt.ColorInt_Impl_","set_cyan",0x40bb3d05,"pallette.utils._ColorInt.ColorInt_Impl_.set_cyan","pallette/utils/ColorInt.hx",78,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_88_get_yellow,"pallette.utils._ColorInt.ColorInt_Impl_","get_yellow",0x9f653562,"pallette.utils._ColorInt.ColorInt_Impl_.get_yellow","pallette/utils/ColorInt.hx",88,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_91_set_yellow,"pallette.utils._ColorInt.ColorInt_Impl_","set_yellow",0xa2e2d3d6,"pallette.utils._ColorInt.ColorInt_Impl_.set_yellow","pallette/utils/ColorInt.hx",91,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_101_get_magenta,"pallette.utils._ColorInt.ColorInt_Impl_","get_magenta",0x6718547b,"pallette.utils._ColorInt.ColorInt_Impl_.get_magenta","pallette/utils/ColorInt.hx",101,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_104_set_magenta,"pallette.utils._ColorInt.ColorInt_Impl_","set_magenta",0x71855b87,"pallette.utils._ColorInt.ColorInt_Impl_.set_magenta","pallette/utils/ColorInt.hx",104,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_113_get_black,"pallette.utils._ColorInt.ColorInt_Impl_","get_black",0xe3cad791,"pallette.utils._ColorInt.ColorInt_Impl_.get_black","pallette/utils/ColorInt.hx",113,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_115_set_black,"pallette.utils._ColorInt.ColorInt_Impl_","set_black",0xc71bc39d,"pallette.utils._ColorInt.ColorInt_Impl_.set_black","pallette/utils/ColorInt.hx",115,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_126_get_alpha,"pallette.utils._ColorInt.ColorInt_Impl_","get_alpha",0x506fa930,"pallette.utils._ColorInt.ColorInt_Impl_.get_alpha","pallette/utils/ColorInt.hx",126,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_129_set_alpha,"pallette.utils._ColorInt.ColorInt_Impl_","set_alpha",0x33c0953c,"pallette.utils._ColorInt.ColorInt_Impl_.set_alpha","pallette/utils/ColorInt.hx",129,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_136_get_red,"pallette.utils._ColorInt.ColorInt_Impl_","get_red",0xb17d62a3,"pallette.utils._ColorInt.ColorInt_Impl_.get_red","pallette/utils/ColorInt.hx",136,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_139_set_red,"pallette.utils._ColorInt.ColorInt_Impl_","set_red",0xa47ef3af,"pallette.utils._ColorInt.ColorInt_Impl_.set_red","pallette/utils/ColorInt.hx",139,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_146_get_green,"pallette.utils._ColorInt.ColorInt_Impl_","get_green",0xc8c61095,"pallette.utils._ColorInt.ColorInt_Impl_.get_green","pallette/utils/ColorInt.hx",146,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_149_set_green,"pallette.utils._ColorInt.ColorInt_Impl_","set_green",0xac16fca1,"pallette.utils._ColorInt.ColorInt_Impl_.set_green","pallette/utils/ColorInt.hx",149,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_156_get_blue,"pallette.utils._ColorInt.ColorInt_Impl_","get_blue",0x91aae108,"pallette.utils._ColorInt.ColorInt_Impl_.get_blue","pallette/utils/ColorInt.hx",156,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_159_set_blue,"pallette.utils._ColorInt.ColorInt_Impl_","set_blue",0x40083a7c,"pallette.utils._ColorInt.ColorInt_Impl_.set_blue","pallette/utils/ColorInt.hx",159,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_166_aiCYMKA,"pallette.utils._ColorInt.ColorInt_Impl_","aiCYMKA",0x16b42d00,"pallette.utils._ColorInt.ColorInt_Impl_.aiCYMKA","pallette/utils/ColorInt.hx",166,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_174_aiARGB,"pallette.utils._ColorInt.ColorInt_Impl_","aiARGB",0x76262dd9,"pallette.utils._ColorInt.ColorInt_Impl_.aiARGB","pallette/utils/ColorInt.hx",174,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_181_aiGreyA,"pallette.utils._ColorInt.ColorInt_Impl_","aiGreyA",0x74e732b5,"pallette.utils._ColorInt.ColorInt_Impl_.aiGreyA","pallette/utils/ColorInt.hx",181,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_188_ARGB_CYMKA,"pallette.utils._ColorInt.ColorInt_Impl_","ARGB_CYMKA",0xa3124ddf,"pallette.utils._ColorInt.ColorInt_Impl_.ARGB_CYMKA","pallette/utils/ColorInt.hx",188,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_198_CYMKA_ARGB,"pallette.utils._ColorInt.ColorInt_Impl_","CYMKA_ARGB",0xc65b0a03,"pallette.utils._ColorInt.ColorInt_Impl_.CYMKA_ARGB","pallette/utils/ColorInt.hx",198,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_206_luminosityGrey,"pallette.utils._ColorInt.ColorInt_Impl_","luminosityGrey",0x297ddce5,"pallette.utils._ColorInt.ColorInt_Impl_.luminosityGrey","pallette/utils/ColorInt.hx",206,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_209_blendARGB,"pallette.utils._ColorInt.ColorInt_Impl_","blendARGB",0xef62df98,"pallette.utils._ColorInt.ColorInt_Impl_.blendARGB","pallette/utils/ColorInt.hx",209,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_223_blendRGB,"pallette.utils._ColorInt.ColorInt_Impl_","blendRGB",0x3babba21,"pallette.utils._ColorInt.ColorInt_Impl_.blendRGB","pallette/utils/ColorInt.hx",223,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_237_blend,"pallette.utils._ColorInt.ColorInt_Impl_","blend",0xe2ef744c,"pallette.utils._ColorInt.ColorInt_Impl_.blend","pallette/utils/ColorInt.hx",237,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_242_smootherStep,"pallette.utils._ColorInt.ColorInt_Impl_","smootherStep",0xa8ddbe6c,"pallette.utils._ColorInt.ColorInt_Impl_.smootherStep","pallette/utils/ColorInt.hx",242,0x30da14b6)
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_246_whitePercent,"pallette.utils._ColorInt.ColorInt_Impl_","whitePercent",0x930bd881,"pallette.utils._ColorInt.ColorInt_Impl_.whitePercent","pallette/utils/ColorInt.hx",246,0x30da14b6)
static const int _hx_array_data_bed96e29_38[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_250_whiteRatio,"pallette.utils._ColorInt.ColorInt_Impl_","whiteRatio",0x19f93bc7,"pallette.utils._ColorInt.ColorInt_Impl_.whiteRatio","pallette/utils/ColorInt.hx",250,0x30da14b6)
static const int _hx_array_data_bed96e29_40[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_254_blackPercent,"pallette.utils._ColorInt.ColorInt_Impl_","blackPercent",0x84a47c2b,"pallette.utils._ColorInt.ColorInt_Impl_.blackPercent","pallette/utils/ColorInt.hx",254,0x30da14b6)
static const int _hx_array_data_bed96e29_42[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_258_blackRatio,"pallette.utils._ColorInt.ColorInt_Impl_","blackRatio",0x7946c0f1,"pallette.utils._ColorInt.ColorInt_Impl_.blackRatio","pallette/utils/ColorInt.hx",258,0x30da14b6)
static const int _hx_array_data_bed96e29_44[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_262_colorPercent,"pallette.utils._ColorInt.ColorInt_Impl_","colorPercent",0xffe45d07,"pallette.utils._ColorInt.ColorInt_Impl_.colorPercent","pallette/utils/ColorInt.hx",262,0x30da14b6)
static const int _hx_array_data_bed96e29_46[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_47[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_48[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_266_colorRatio,"pallette.utils._ColorInt.ColorInt_Impl_","colorRatio",0xe71172cd,"pallette.utils._ColorInt.ColorInt_Impl_.colorRatio","pallette/utils/ColorInt.hx",266,0x30da14b6)
static const int _hx_array_data_bed96e29_50[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_51[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_52[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_270_darkColorPercent,"pallette.utils._ColorInt.ColorInt_Impl_","darkColorPercent",0xec8aed1d,"pallette.utils._ColorInt.ColorInt_Impl_.darkColorPercent","pallette/utils/ColorInt.hx",270,0x30da14b6)
static const int _hx_array_data_bed96e29_54[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_55[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_56[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_274_darkColorRatio,"pallette.utils._ColorInt.ColorInt_Impl_","darkColorRatio",0xd7fab163,"pallette.utils._ColorInt.ColorInt_Impl_.darkColorRatio","pallette/utils/ColorInt.hx",274,0x30da14b6)
static const int _hx_array_data_bed96e29_58[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_59[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_60[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_278_redPercent,"pallette.utils._ColorInt.ColorInt_Impl_","redPercent",0x56c95b99,"pallette.utils._ColorInt.ColorInt_Impl_.redPercent","pallette/utils/ColorInt.hx",278,0x30da14b6)
static const int _hx_array_data_bed96e29_62[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_282_redRatio,"pallette.utils._ColorInt.ColorInt_Impl_","redRatio",0x244748df,"pallette.utils._ColorInt.ColorInt_Impl_.redRatio","pallette/utils/ColorInt.hx",282,0x30da14b6)
static const int _hx_array_data_bed96e29_64[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_286_greenPercent,"pallette.utils._ColorInt.ColorInt_Impl_","greenPercent",0x253c2ba7,"pallette.utils._ColorInt.ColorInt_Impl_.greenPercent","pallette/utils/ColorInt.hx",286,0x30da14b6)
static const int _hx_array_data_bed96e29_66[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_290_greenRatio,"pallette.utils._ColorInt.ColorInt_Impl_","greenRatio",0x976a596d,"pallette.utils._ColorInt.ColorInt_Impl_.greenRatio","pallette/utils/ColorInt.hx",290,0x30da14b6)
static const int _hx_array_data_bed96e29_68[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_294_bluePercent,"pallette.utils._ColorInt.ColorInt_Impl_","bluePercent",0x8677b186,"pallette.utils._ColorInt.ColorInt_Impl_.bluePercent","pallette/utils/ColorInt.hx",294,0x30da14b6)
static const int _hx_array_data_bed96e29_70[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_298_blueRatio,"pallette.utils._ColorInt.ColorInt_Impl_","blueRatio",0xa78e598c,"pallette.utils._ColorInt.ColorInt_Impl_.blueRatio","pallette/utils/ColorInt.hx",298,0x30da14b6)
static const int _hx_array_data_bed96e29_72[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_302_redSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","redSoftPercent",0x856531cf,"pallette.utils._ColorInt.ColorInt_Impl_.redSoftPercent","pallette/utils/ColorInt.hx",302,0x30da14b6)
static const int _hx_array_data_bed96e29_74[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_75[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_306_redSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","redSoftRatio",0x35320595,"pallette.utils._ColorInt.ColorInt_Impl_.redSoftRatio","pallette/utils/ColorInt.hx",306,0x30da14b6)
static const int _hx_array_data_bed96e29_77[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_78[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_310_greenSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","greenSoftPercent",0xdd1c20dd,"pallette.utils._ColorInt.ColorInt_Impl_.greenSoftPercent","pallette/utils/ColorInt.hx",310,0x30da14b6)
static const int _hx_array_data_bed96e29_80[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_81[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_314_greenSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","greenSoftRatio",0xa2037523,"pallette.utils._ColorInt.ColorInt_Impl_.greenSoftRatio","pallette/utils/ColorInt.hx",314,0x30da14b6)
static const int _hx_array_data_bed96e29_83[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_84[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_318_blueSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","blueSoftPercent",0xa959823c,"pallette.utils._ColorInt.ColorInt_Impl_.blueSoftPercent","pallette/utils/ColorInt.hx",318,0x30da14b6)
static const int _hx_array_data_bed96e29_86[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_87[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_322_blueSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","blueSoftRatio",0x6d9370c2,"pallette.utils._ColorInt.ColorInt_Impl_.blueSoftRatio","pallette/utils/ColorInt.hx",322,0x30da14b6)
static const int _hx_array_data_bed96e29_89[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_90[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_326_yellowSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","yellowSoftPercent",0xcf6fa462,"pallette.utils._ColorInt.ColorInt_Impl_.yellowSoftPercent","pallette/utils/ColorInt.hx",326,0x30da14b6)
static const int _hx_array_data_bed96e29_92[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_93[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_330_yellowSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","yellowSoftRatio",0x8a889d68,"pallette.utils._ColorInt.ColorInt_Impl_.yellowSoftRatio","pallette/utils/ColorInt.hx",330,0x30da14b6)
static const int _hx_array_data_bed96e29_95[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_96[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_334_magentaSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","magentaSoftPercent",0x096a8677,"pallette.utils._ColorInt.ColorInt_Impl_.magentaSoftPercent","pallette/utils/ColorInt.hx",334,0x30da14b6)
static const int _hx_array_data_bed96e29_98[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_99[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_338_magentaSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","magentaSoftRatio",0x9fad603d,"pallette.utils._ColorInt.ColorInt_Impl_.magentaSoftRatio","pallette/utils/ColorInt.hx",338,0x30da14b6)
static const int _hx_array_data_bed96e29_101[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_102[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_342_cyanSoftPercent,"pallette.utils._ColorInt.ColorInt_Impl_","cyanSoftPercent",0xfdd36a53,"pallette.utils._ColorInt.ColorInt_Impl_.cyanSoftPercent","pallette/utils/ColorInt.hx",342,0x30da14b6)
static const int _hx_array_data_bed96e29_104[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_105[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
HX_LOCAL_STACK_FRAME(_hx_pos_31ee5c6d20716e56_346_cyanSoftRatio,"pallette.utils._ColorInt.ColorInt_Impl_","cyanSoftRatio",0xbb4a5519,"pallette.utils._ColorInt.ColorInt_Impl_.cyanSoftRatio","pallette/utils/ColorInt.hx",346,0x30da14b6)
static const int _hx_array_data_bed96e29_107[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
static const int _hx_array_data_bed96e29_108[] = {
	(int)0,(int)48,(int)80,(int)128,(int)10,(int)13,(int)15,(int)18,(int)20,(int)23,(int)25,(int)28,(int)31,(int)33,(int)36,(int)38,(int)41,(int)43,(int)46,(int)48,(int)51,(int)54,(int)56,(int)59,(int)61,(int)64,(int)66,(int)69,(int)71,(int)74,(int)76,(int)79,(int)82,(int)84,(int)87,(int)89,(int)92,(int)94,(int)97,(int)99,(int)102,(int)105,(int)107,(int)110,(int)112,(int)115,(int)117,(int)120,(int)122,(int)125,(int)127,(int)130,(int)133,(int)135,(int)138,(int)140,(int)143,(int)145,(int)148,(int)150,(int)153,(int)156,(int)158,(int)161,(int)163,(int)166,(int)168,(int)171,(int)173,(int)176,(int)178,(int)181,(int)186,(int)189,(int)191,(int)194,(int)196,(int)199,(int)201,(int)201,(int)204,(int)207,(int)209,(int)212,(int)214,(int)217,(int)219,(int)222,(int)224,(int)227,(int)229,(int)232,(int)235,(int)237,(int)240,(int)242,(int)245,(int)247,(int)250,(int)252,(int)255,
};
namespace pallette{
namespace utils{
namespace _ColorInt{

void ColorInt_Impl__obj::__construct() { }

Dynamic ColorInt_Impl__obj::__CreateEmpty() { return new ColorInt_Impl__obj; }

void *ColorInt_Impl__obj::_hx_vtable = 0;

Dynamic ColorInt_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ColorInt_Impl__obj > _hx_result = new ColorInt_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ColorInt_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x67eeb23b;
}

int ColorInt_Impl__obj::_new(int v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_10__new)
HXDLIN(  10)		int this1 = v;
HXDLIN(  10)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,_new,return )

int ColorInt_Impl__obj::fromARGB( ::pallette::utils::ARGB argb){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_17_fromARGB)
HXDLIN(  17)		int this1 = ((((::Math_obj::round((argb->a * ( (Float)(255) ))) << 24) | (::Math_obj::round((argb->r * ( (Float)(255) ))) << 16)) | (::Math_obj::round((argb->g * ( (Float)(255) ))) << 8)) | ::Math_obj::round((argb->b * ( (Float)(255) ))));
HXDLIN(  17)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,fromARGB,return )

int ColorInt_Impl__obj::fromRGB( ::pallette::utils::RGB argb){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_22_fromRGB)
HXDLIN(  22)		int this1 = ((((::Math_obj::round(((Float)255.)) << 24) | (::Math_obj::round((argb->r * ( (Float)(255) ))) << 16)) | (::Math_obj::round((argb->g * ( (Float)(255) ))) << 8)) | ::Math_obj::round((argb->b * ( (Float)(255) ))));
HXDLIN(  22)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,fromRGB,return )

::String ColorInt_Impl__obj::htmlStyleRGBA(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_27_htmlStyleRGBA)
HXDLIN(  27)		Float r = (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
HXDLIN(  27)		Float g = (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN(  27)		Float b = (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
HXDLIN(  27)		Float a = (( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN(  27)		return ((((((((HX_("rgba(",f4,cc,0d,e8) + r) + HX_(",",2c,00,00,00)) + g) + HX_(",",2c,00,00,00)) + b) + HX_(",",2c,00,00,00)) + a) + HX_(")",29,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,htmlStyleRGBA,return )

::String ColorInt_Impl__obj::htmlStyleHex(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_32_htmlStyleHex)
HXDLIN(  32)		return (HX_("#",23,00,00,00) + ::StringTools_obj::hex((((::Math_obj::round(((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 16) | (::Math_obj::round(((( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 8)) | ::Math_obj::round(((( (Float)((this1 & 255)) ) / ( (Float)(255) )) * ( (Float)(255) )))),6));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,htmlStyleHex,return )

 ::pallette::utils::ARGB ColorInt_Impl__obj::toARGB(int this1){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_37_toARGB)
HXDLIN(  37)		return  ::pallette::utils::ARGB_obj::__alloc( HX_CTX ,(( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )),(( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,toARGB,return )

 ::pallette::utils::RGB ColorInt_Impl__obj::toRGB(int this1){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_42_toRGB)
HXDLIN(  42)		return  ::pallette::utils::RGB_obj::__alloc( HX_CTX ,(( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,toRGB,return )

int ColorInt_Impl__obj::fromCYMKA( ::pallette::utils::CYMKA c){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_47_fromCYMKA)
HXDLIN(  47)		Float k = c->k;
HXDLIN(  47)		int this1 = ((((::Math_obj::round((c->a * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (c->c / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (c->m / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (c->y / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN(  47)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,fromCYMKA,return )

int ColorInt_Impl__obj::fromCYMK( ::pallette::utils::CYMK c){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_52_fromCYMK)
HXDLIN(  52)		Float k = c->k;
HXDLIN(  52)		int this1 = (((::Math_obj::round((((( (Float)(1) ) - (c->c / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16) | (::Math_obj::round((((( (Float)(1) ) - (c->m / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (c->y / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN(  52)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,fromCYMK,return )

 ::pallette::utils::CYMKA ColorInt_Impl__obj::toCYMKA(int this1){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_56_toCYMKA)
HXLINE(  57)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE(  58)		Float c = (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  59)		Float m = (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  60)		Float y = (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  61)		return  ::pallette::utils::CYMKA_obj::__alloc( HX_CTX ,c,y,m,k,(( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,toCYMKA,return )

 ::pallette::utils::CYMK ColorInt_Impl__obj::toCYMK(int this1){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_65_toCYMK)
HXLINE(  66)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE(  67)		Float c = (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  68)		Float m = (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  69)		Float y = (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  70)		return  ::pallette::utils::CYMK_obj::__alloc( HX_CTX ,c,y,m,k);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,toCYMK,return )

Float ColorInt_Impl__obj::get_cyan(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_75_get_cyan)
HXDLIN(  75)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXDLIN(  75)		return (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_cyan,return )

Float ColorInt_Impl__obj::set_cyan(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_78_set_cyan)
HXLINE(  79)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE(  80)		Float m = (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  81)		Float y = (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  82)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (v / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (m / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (y / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN(  82)		this1 = this2;
HXLINE(  83)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_cyan,return )

Float ColorInt_Impl__obj::get_yellow(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_88_get_yellow)
HXDLIN(  88)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXDLIN(  88)		return (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_yellow,return )

Float ColorInt_Impl__obj::set_yellow(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_91_set_yellow)
HXLINE(  92)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE(  93)		Float c = (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  94)		Float m = (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE(  95)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (v / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (m / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (v / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN(  95)		this1 = this2;
HXLINE(  96)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_yellow,return )

Float ColorInt_Impl__obj::get_magenta(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_101_get_magenta)
HXDLIN( 101)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXDLIN( 101)		return (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_magenta,return )

Float ColorInt_Impl__obj::set_magenta(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_104_set_magenta)
HXLINE( 105)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE( 106)		Float c = (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE( 107)		Float y = (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE( 108)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (c / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (v / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (y / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN( 108)		this1 = this2;
HXLINE( 109)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_magenta,return )

Float ColorInt_Impl__obj::get_black(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_113_get_black)
HXDLIN( 113)		return (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_black,return )

Float ColorInt_Impl__obj::set_black(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_115_set_black)
HXLINE( 116)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )),(( (Float)((this1 & 255)) ) / ( (Float)(255) ))),(( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))));
HXLINE( 117)		Float c = (((((Float)1.) - (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE( 118)		Float m = (((((Float)1.) - (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE( 119)		Float y = (((((Float)1.) - (( (Float)((this1 & 255)) ) / ( (Float)(255) ))) - k) / (((Float)1.) - k));
HXLINE( 120)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (c / ( (Float)(100) ))) * (( (Float)(1) ) - (v / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (m / ( (Float)(100) ))) * (( (Float)(1) ) - (v / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (y / ( (Float)(100) ))) * (( (Float)(1) ) - (v / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN( 120)		this1 = this2;
HXLINE( 121)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_black,return )

Float ColorInt_Impl__obj::get_alpha(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_126_get_alpha)
HXDLIN( 126)		return (( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_alpha,return )

Float ColorInt_Impl__obj::set_alpha(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_129_set_alpha)
HXLINE( 130)		int this2 = ((((::Math_obj::round((v * ( (Float)(255) ))) << 24) | (::Math_obj::round(((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 16)) | (::Math_obj::round(((( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 8)) | ::Math_obj::round(((( (Float)((this1 & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))));
HXDLIN( 130)		this1 = this2;
HXLINE( 131)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_alpha,return )

Float ColorInt_Impl__obj::get_red(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_136_get_red)
HXDLIN( 136)		return (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_red,return )

Float ColorInt_Impl__obj::set_red(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_139_set_red)
HXLINE( 140)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round((v * ( (Float)(255) ))) << 16)) | (::Math_obj::round(((( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 8)) | ::Math_obj::round(((( (Float)((this1 & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))));
HXDLIN( 140)		this1 = this2;
HXLINE( 141)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_red,return )

Float ColorInt_Impl__obj::get_green(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_146_get_green)
HXDLIN( 146)		return (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_green,return )

Float ColorInt_Impl__obj::set_green(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_149_set_green)
HXLINE( 150)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round(((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((v * ( (Float)(255) ))) << 8)) | ::Math_obj::round(((( (Float)((this1 & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))));
HXDLIN( 150)		this1 = this2;
HXLINE( 151)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_green,return )

Float ColorInt_Impl__obj::get_blue(int this1){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_156_get_blue)
HXDLIN( 156)		return (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,get_blue,return )

Float ColorInt_Impl__obj::set_blue(int this1,Float v){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_159_set_blue)
HXLINE( 160)		int this2 = ((((::Math_obj::round(((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 24) | (::Math_obj::round(((( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 16)) | (::Math_obj::round(((( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((v * ( (Float)(255) ))));
HXDLIN( 160)		this1 = this2;
HXLINE( 161)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,set_blue,return )

int ColorInt_Impl__obj::aiCYMKA(::Array< ::String > arr,::hx::Null< Float >  __o_alpha){
            		Float alpha = __o_alpha.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_166_aiCYMKA)
HXDLIN( 166)		Float c = ::Std_obj::parseFloat(arr->__get(0));
HXDLIN( 166)		Float y = ::Std_obj::parseFloat(arr->__get(1));
HXDLIN( 166)		Float m = ::Std_obj::parseFloat(arr->__get(2));
HXDLIN( 166)		Float k = ::Std_obj::parseFloat(arr->__get(3));
HXDLIN( 166)		int this1 = ((((::Math_obj::round((alpha * ( (Float)(255) ))) << 24) | (::Math_obj::round((((( (Float)(1) ) - (c / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 16)) | (::Math_obj::round((((( (Float)(1) ) - (m / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))) << 8)) | ::Math_obj::round((((( (Float)(1) ) - (y / ( (Float)(100) ))) * (( (Float)(1) ) - (k / ( (Float)(100) )))) * ( (Float)(255) ))));
HXDLIN( 166)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,aiCYMKA,return )

int ColorInt_Impl__obj::aiARGB(::Array< ::String > arr,::hx::Null< Float >  __o_alpha){
            		Float alpha = __o_alpha.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_174_aiARGB)
HXDLIN( 174)		Float r = ::Std_obj::parseFloat(arr->__get(0));
HXDLIN( 174)		Float g = ::Std_obj::parseFloat(arr->__get(1));
HXDLIN( 174)		Float b = ::Std_obj::parseFloat(arr->__get(2));
HXDLIN( 174)		int this1 = ((((::Math_obj::round((alpha * ( (Float)(255) ))) << 24) | (::Math_obj::round((r * ( (Float)(255) ))) << 16)) | (::Math_obj::round((g * ( (Float)(255) ))) << 8)) | ::Math_obj::round((b * ( (Float)(255) ))));
HXDLIN( 174)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,aiARGB,return )

int ColorInt_Impl__obj::aiGreyA(::String s,::hx::Null< Float >  __o_alpha){
            		Float alpha = __o_alpha.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_181_aiGreyA)
HXLINE( 182)		Float v = ::Std_obj::parseFloat(s);
HXLINE( 183)		int this1 = ((((::Math_obj::round((alpha * ( (Float)(255) ))) << 24) | (::Math_obj::round((v * ( (Float)(255) ))) << 16)) | (::Math_obj::round((v * ( (Float)(255) ))) << 8)) | ::Math_obj::round((v * ( (Float)(255) ))));
HXDLIN( 183)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,aiGreyA,return )

 ::pallette::utils::CYMKA ColorInt_Impl__obj::ARGB_CYMKA( ::pallette::utils::ARGB v){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_188_ARGB_CYMKA)
HXLINE( 189)		Float k = (((Float)1.) - ::Math_obj::max(::Math_obj::max(v->r,v->b),v->g));
HXLINE( 190)		Float c = (((((Float)1.) - v->r) - k) / (((Float)1.) - k));
HXLINE( 191)		Float m = (((((Float)1.) - v->g) - k) / (((Float)1.) - k));
HXLINE( 192)		Float y = (((((Float)1.) - v->b) - k) / (((Float)1.) - k));
HXLINE( 193)		return  ::pallette::utils::CYMKA_obj::__alloc( HX_CTX ,c,y,m,k,v->a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,ARGB_CYMKA,return )

 ::pallette::utils::ARGB ColorInt_Impl__obj::CYMKA_ARGB( ::pallette::utils::CYMKA v){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_198_CYMKA_ARGB)
HXLINE( 199)		Float r = ((( (Float)(1) ) - (v->c / ( (Float)(100) ))) * (( (Float)(1) ) - (v->k / ( (Float)(100) ))));
HXLINE( 200)		Float g = ((( (Float)(1) ) - (v->m / ( (Float)(100) ))) * (( (Float)(1) ) - (v->k / ( (Float)(100) ))));
HXLINE( 201)		Float b = ((( (Float)(1) ) - (v->y / ( (Float)(100) ))) * (( (Float)(1) ) - (v->k / ( (Float)(100) ))));
HXLINE( 202)		return  ::pallette::utils::ARGB_obj::__alloc( HX_CTX ,v->a,r,g,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,CYMKA_ARGB,return )

Float ColorInt_Impl__obj::luminosityGrey(int this1,::hx::Null< Float >  __o_scale){
            		Float scale = __o_scale.Default(((Float)1.));
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_206_luminosityGrey)
HXDLIN( 206)		return (((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) * (((((Float)0.21) * (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) + (((Float)0.72) * (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) )))) + (((Float)0.07) * (( (Float)((this1 & 255)) ) / ( (Float)(255) ))))) * scale);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,luminosityGrey,return )

int ColorInt_Impl__obj::blendARGB(int this1,int colB,Float t){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_209_blendARGB)
HXLINE( 211)		Float v = (((t * t) * t) * ((t * ((t * ((Float)6.0)) - ((Float)15.0))) + ((Float)10.0)));
HXLINE( 212)		Float a = (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
HXDLIN( 212)		Float r = (a + (v * ((( (Float)(((colB >> 16) & 255)) ) / ( (Float)(255) )) - a)));
HXLINE( 213)		Float a1 = (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 213)		Float g = (a1 + (v * ((( (Float)(((colB >> 8) & 255)) ) / ( (Float)(255) )) - a1)));
HXLINE( 214)		Float a2 = (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
HXDLIN( 214)		Float b = (a2 + (v * ((( (Float)((colB & 255)) ) / ( (Float)(255) )) - a2)));
HXLINE( 215)		Float a3 = (( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) ));
HXDLIN( 215)		Float a4 = (a3 + (v * ((( (Float)(((colB >> 24) & 255)) ) / ( (Float)(255) )) - a3)));
HXLINE( 217)		 ::pallette::utils::ARGB argb =  ::pallette::utils::ARGB_obj::__alloc( HX_CTX ,a4,r,g,b);
HXLINE( 218)		int this2 = ((((::Math_obj::round((argb->a * ( (Float)(255) ))) << 24) | (::Math_obj::round((argb->r * ( (Float)(255) ))) << 16)) | (::Math_obj::round((argb->g * ( (Float)(255) ))) << 8)) | ::Math_obj::round((argb->b * ( (Float)(255) ))));
HXDLIN( 218)		int colInt = this2;
HXLINE( 219)		int c = colInt;
HXLINE( 220)		return c;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,blendARGB,return )

int ColorInt_Impl__obj::blendRGB(int this1,int colB,Float t){
            	HX_GC_STACKFRAME(&_hx_pos_31ee5c6d20716e56_223_blendRGB)
HXLINE( 225)		Float v = (((t * t) * t) * ((t * ((t * ((Float)6.0)) - ((Float)15.0))) + ((Float)10.0)));
HXLINE( 226)		Float a = (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
HXDLIN( 226)		Float r = (a + (v * ((( (Float)(((colB >> 16) & 255)) ) / ( (Float)(255) )) - a)));
HXLINE( 227)		Float a1 = (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
HXDLIN( 227)		Float g = (a1 + (v * ((( (Float)(((colB >> 8) & 255)) ) / ( (Float)(255) )) - a1)));
HXLINE( 228)		Float a2 = (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
HXDLIN( 228)		Float b = (a2 + (v * ((( (Float)((colB & 255)) ) / ( (Float)(255) )) - a2)));
HXLINE( 230)		 ::pallette::utils::ARGB argb =  ::pallette::utils::ARGB_obj::__alloc( HX_CTX ,((Float)1.),r,g,b);
HXLINE( 231)		int this2 = ((((::Math_obj::round((argb->a * ( (Float)(255) ))) << 24) | (::Math_obj::round((argb->r * ( (Float)(255) ))) << 16)) | (::Math_obj::round((argb->g * ( (Float)(255) ))) << 8)) | ::Math_obj::round((argb->b * ( (Float)(255) ))));
HXDLIN( 231)		int colInt = this2;
HXLINE( 232)		int c = colInt;
HXLINE( 233)		return c;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,blendRGB,return )

Float ColorInt_Impl__obj::blend(int this1,Float a,Float b,Float t){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_237_blend)
HXDLIN( 237)		return (a + (t * (b - a)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(ColorInt_Impl__obj,blend,return )

Float ColorInt_Impl__obj::smootherStep(int this1,Float t){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_242_smootherStep)
HXDLIN( 242)		return (((t * t) * t) * ((t * ((t * ((Float)6.0)) - ((Float)15.0))) + ((Float)10.0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,smootherStep,return )

int ColorInt_Impl__obj::whitePercent(int percent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_246_whitePercent)
HXDLIN( 246)		int v = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_38,101)->__get(percent);
HXDLIN( 246)		int this1 = (((-16777216 | (v << 16)) | (v << 8)) | v);
HXDLIN( 246)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,whitePercent,return )

int ColorInt_Impl__obj::whiteRatio(Float ratio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_250_whiteRatio)
HXDLIN( 250)		int v = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_40,101)->__get(::Math_obj::round((ratio * ( (Float)(100) ))));
HXDLIN( 250)		int this1 = (((-16777216 | (v << 16)) | (v << 8)) | v);
HXDLIN( 250)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,whiteRatio,return )

int ColorInt_Impl__obj::blackPercent(int percent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_254_blackPercent)
HXDLIN( 254)		int v = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_42,101)->__get((100 - percent));
HXDLIN( 254)		int this1 = (((-16777216 | (v << 16)) | (v << 8)) | v);
HXDLIN( 254)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,blackPercent,return )

int ColorInt_Impl__obj::blackRatio(Float ratio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_258_blackRatio)
HXDLIN( 258)		int v = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_44,101)->__get((100 - ::Math_obj::round((ratio * ( (Float)(100) )))));
HXDLIN( 258)		int this1 = (((-16777216 | (v << 16)) | (v << 8)) | v);
HXDLIN( 258)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,blackRatio,return )

int ColorInt_Impl__obj::colorPercent(int rPercent,int gPercent,int bPercent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_262_colorPercent)
HXDLIN( 262)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_46,101)->__get(rPercent) << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_47,101)->__get(gPercent) << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_48,101)->__get(bPercent));
HXDLIN( 262)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,colorPercent,return )

int ColorInt_Impl__obj::colorRatio(Float rRatio,Float gRatio,Float bRatio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_266_colorRatio)
HXDLIN( 266)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_50,101)->__get(::Math_obj::round((rRatio * ( (Float)(100) )))) << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_51,101)->__get(::Math_obj::round((gRatio * ( (Float)(100) )))) << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_52,101)->__get(::Math_obj::round((bRatio * ( (Float)(100) )))));
HXDLIN( 266)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,colorRatio,return )

int ColorInt_Impl__obj::darkColorPercent(int rPercent,int gPercent,int bPercent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_270_darkColorPercent)
HXDLIN( 270)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_54,101)->__get((100 - rPercent)) << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_55,101)->__get((100 - gPercent)) << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_56,101)->__get((100 - bPercent)));
HXDLIN( 270)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,darkColorPercent,return )

int ColorInt_Impl__obj::darkColorRatio(Float rRatio,Float gRatio,Float bRatio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_274_darkColorRatio)
HXDLIN( 274)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_58,101)->__get((100 - ::Math_obj::round((rRatio * ( (Float)(100) ))))) << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_59,101)->__get((100 - ::Math_obj::round((gRatio * ( (Float)(100) ))))) << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_60,101)->__get((100 - ::Math_obj::round((bRatio * ( (Float)(100) ))))));
HXDLIN( 274)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ColorInt_Impl__obj,darkColorRatio,return )

int ColorInt_Impl__obj::redPercent(int percent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_278_redPercent)
HXDLIN( 278)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_62,101)->__get(percent) << 16)) | 0) | 0);
HXDLIN( 278)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,redPercent,return )

int ColorInt_Impl__obj::redRatio(Float ratio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_282_redRatio)
HXDLIN( 282)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_64,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))) << 16)) | 0) | 0);
HXDLIN( 282)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,redRatio,return )

int ColorInt_Impl__obj::greenPercent(int percent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_286_greenPercent)
HXDLIN( 286)		int this1 = ((-65536 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_66,101)->__get(percent) << 8)) | 255);
HXDLIN( 286)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,greenPercent,return )

int ColorInt_Impl__obj::greenRatio(Float ratio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_290_greenRatio)
HXDLIN( 290)		int this1 = ((-65536 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_68,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))) << 8)) | 255);
HXDLIN( 290)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,greenRatio,return )

int ColorInt_Impl__obj::bluePercent(int percent){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_294_bluePercent)
HXDLIN( 294)		int this1 = (-256 | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_70,101)->__get(percent));
HXDLIN( 294)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,bluePercent,return )

int ColorInt_Impl__obj::blueRatio(Float ratio){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_298_blueRatio)
HXDLIN( 298)		int this1 = (-256 | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_72,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))));
HXDLIN( 298)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorInt_Impl__obj,blueRatio,return )

int ColorInt_Impl__obj::redSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_302_redSoftPercent)
HXDLIN( 302)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_74,101)->__get(percentSoft);
HXDLIN( 302)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_75,101)->__get(percent) << 16)) | (soft << 8)) | soft);
HXDLIN( 302)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,redSoftPercent,return )

int ColorInt_Impl__obj::redSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_306_redSoftRatio)
HXDLIN( 306)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_77,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 306)		int this1 = (((-16777216 | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_78,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))) << 16)) | (soft << 8)) | soft);
HXDLIN( 306)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,redSoftRatio,return )

int ColorInt_Impl__obj::greenSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_310_greenSoftPercent)
HXDLIN( 310)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_80,101)->__get(percentSoft);
HXDLIN( 310)		int this1 = (((-16777216 | (soft << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_81,101)->__get(percent) << 8)) | soft);
HXDLIN( 310)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,greenSoftPercent,return )

int ColorInt_Impl__obj::greenSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_314_greenSoftRatio)
HXDLIN( 314)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_83,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 314)		int this1 = (((-16777216 | (soft << 16)) | (::Array_obj< int >::fromData( _hx_array_data_bed96e29_84,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))) << 8)) | soft);
HXDLIN( 314)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,greenSoftRatio,return )

int ColorInt_Impl__obj::blueSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_318_blueSoftPercent)
HXDLIN( 318)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_86,101)->__get(percentSoft);
HXDLIN( 318)		int this1 = (((-16777216 | (soft << 16)) | (soft << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_87,101)->__get(percent));
HXDLIN( 318)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,blueSoftPercent,return )

int ColorInt_Impl__obj::blueSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_322_blueSoftRatio)
HXDLIN( 322)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_89,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 322)		int this1 = (((-16777216 | (soft << 16)) | (soft << 8)) | ::Array_obj< int >::fromData( _hx_array_data_bed96e29_90,101)->__get(::Math_obj::round((ratio * ( (Float)(100) )))));
HXDLIN( 322)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,blueSoftRatio,return )

int ColorInt_Impl__obj::yellowSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_326_yellowSoftPercent)
HXDLIN( 326)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_92,101)->__get(percentSoft);
HXDLIN( 326)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_93,101)->__get(percent);
HXDLIN( 326)		int this1 = (((-16777216 | (color << 16)) | (color << 8)) | soft);
HXDLIN( 326)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,yellowSoftPercent,return )

int ColorInt_Impl__obj::yellowSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_330_yellowSoftRatio)
HXDLIN( 330)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_95,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 330)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_96,101)->__get(::Math_obj::round((ratio * ( (Float)(100) ))));
HXDLIN( 330)		int this1 = (((-16777216 | (color << 16)) | (color << 8)) | soft);
HXDLIN( 330)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,yellowSoftRatio,return )

int ColorInt_Impl__obj::magentaSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_334_magentaSoftPercent)
HXDLIN( 334)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_98,101)->__get(percentSoft);
HXDLIN( 334)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_99,101)->__get(percent);
HXDLIN( 334)		int this1 = (((-16777216 | (color << 16)) | (soft << 8)) | color);
HXDLIN( 334)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,magentaSoftPercent,return )

int ColorInt_Impl__obj::magentaSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_338_magentaSoftRatio)
HXDLIN( 338)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_101,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 338)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_102,101)->__get(::Math_obj::round((ratio * ( (Float)(100) ))));
HXDLIN( 338)		int this1 = (((-16777216 | (color << 16)) | (soft << 8)) | color);
HXDLIN( 338)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,magentaSoftRatio,return )

int ColorInt_Impl__obj::cyanSoftPercent(int percent,int percentSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_342_cyanSoftPercent)
HXDLIN( 342)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_104,101)->__get(percentSoft);
HXDLIN( 342)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_105,101)->__get(percent);
HXDLIN( 342)		int this1 = (((-16777216 | (soft << 16)) | (color << 8)) | color);
HXDLIN( 342)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,cyanSoftPercent,return )

int ColorInt_Impl__obj::cyanSoftRatio(Float ratio,Float ratioSoft){
            	HX_STACKFRAME(&_hx_pos_31ee5c6d20716e56_346_cyanSoftRatio)
HXDLIN( 346)		int soft = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_107,101)->__get(::Math_obj::round((ratioSoft * ( (Float)(100) ))));
HXDLIN( 346)		int color = ::Array_obj< int >::fromData( _hx_array_data_bed96e29_108,101)->__get(::Math_obj::round((ratio * ( (Float)(100) ))));
HXDLIN( 346)		int this1 = (((-16777216 | (soft << 16)) | (color << 8)) | color);
HXDLIN( 346)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ColorInt_Impl__obj,cyanSoftRatio,return )


ColorInt_Impl__obj::ColorInt_Impl__obj()
{
}

bool ColorInt_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toRGB") ) { outValue = toRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blend") ) { outValue = blend_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toARGB") ) { outValue = toARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCYMK") ) { outValue = toCYMK_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"aiARGB") ) { outValue = aiARGB_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromRGB") ) { outValue = fromRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCYMKA") ) { outValue = toCYMKA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_red") ) { outValue = get_red_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_red") ) { outValue = set_red_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"aiCYMKA") ) { outValue = aiCYMKA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"aiGreyA") ) { outValue = aiGreyA_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fromARGB") ) { outValue = fromARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromCYMK") ) { outValue = fromCYMK_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cyan") ) { outValue = get_cyan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cyan") ) { outValue = set_cyan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_blue") ) { outValue = get_blue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blue") ) { outValue = set_blue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendRGB") ) { outValue = blendRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"redRatio") ) { outValue = redRatio_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromCYMKA") ) { outValue = fromCYMKA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_black") ) { outValue = get_black_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_black") ) { outValue = set_black_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alpha") ) { outValue = get_alpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alpha") ) { outValue = set_alpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_green") ) { outValue = get_green_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_green") ) { outValue = set_green_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendARGB") ) { outValue = blendARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blueRatio") ) { outValue = blueRatio_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_yellow") ) { outValue = get_yellow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_yellow") ) { outValue = set_yellow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ARGB_CYMKA") ) { outValue = ARGB_CYMKA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"CYMKA_ARGB") ) { outValue = CYMKA_ARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"whiteRatio") ) { outValue = whiteRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blackRatio") ) { outValue = blackRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorRatio") ) { outValue = colorRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"redPercent") ) { outValue = redPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greenRatio") ) { outValue = greenRatio_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_magenta") ) { outValue = get_magenta_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_magenta") ) { outValue = set_magenta_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bluePercent") ) { outValue = bluePercent_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"htmlStyleHex") ) { outValue = htmlStyleHex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"smootherStep") ) { outValue = smootherStep_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"whitePercent") ) { outValue = whitePercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blackPercent") ) { outValue = blackPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorPercent") ) { outValue = colorPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greenPercent") ) { outValue = greenPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"redSoftRatio") ) { outValue = redSoftRatio_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"htmlStyleRGBA") ) { outValue = htmlStyleRGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blueSoftRatio") ) { outValue = blueSoftRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cyanSoftRatio") ) { outValue = cyanSoftRatio_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"luminosityGrey") ) { outValue = luminosityGrey_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"darkColorRatio") ) { outValue = darkColorRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"redSoftPercent") ) { outValue = redSoftPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greenSoftRatio") ) { outValue = greenSoftRatio_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"blueSoftPercent") ) { outValue = blueSoftPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"yellowSoftRatio") ) { outValue = yellowSoftRatio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cyanSoftPercent") ) { outValue = cyanSoftPercent_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"darkColorPercent") ) { outValue = darkColorPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greenSoftPercent") ) { outValue = greenSoftPercent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"magentaSoftRatio") ) { outValue = magentaSoftRatio_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"yellowSoftPercent") ) { outValue = yellowSoftPercent_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"magentaSoftPercent") ) { outValue = magentaSoftPercent_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ColorInt_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ColorInt_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class ColorInt_Impl__obj::__mClass;

static ::String ColorInt_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("fromARGB",b6,f7,27,9e),
	HX_("fromRGB",c3,8f,01,58),
	HX_("htmlStyleRGBA",7a,ef,41,a2),
	HX_("htmlStyleHex",b5,1e,9e,2e),
	HX_("toARGB",47,94,15,76),
	HX_("toRGB",52,70,18,14),
	HX_("fromCYMKA",83,04,43,f0),
	HX_("fromCYMK",fe,b9,7f,9f),
	HX_("toCYMKA",d2,66,3e,08),
	HX_("toCYMK",8f,56,6d,77),
	HX_("get_cyan",ac,00,87,c1),
	HX_("set_cyan",20,5a,e4,6f),
	HX_("get_yellow",3d,0f,e4,c0),
	HX_("set_yellow",b1,ad,61,c4),
	HX_("get_magenta",40,1a,98,94),
	HX_("set_magenta",4c,21,05,9f),
	HX_("get_black",16,32,9b,f8),
	HX_("set_black",22,1e,ec,db),
	HX_("get_alpha",b5,03,40,65),
	HX_("set_alpha",c1,ef,90,48),
	HX_("get_red",e8,a1,cb,26),
	HX_("set_red",f4,32,cd,19),
	HX_("get_green",1a,6b,96,dd),
	HX_("set_green",26,57,e7,c0),
	HX_("get_blue",23,fe,d3,c0),
	HX_("set_blue",97,57,31,6f),
	HX_("aiCYMKA",45,6c,02,8c),
	HX_("aiARGB",34,3e,e6,68),
	HX_("aiGreyA",fa,71,35,ea),
	HX_("ARGB_CYMKA",ba,27,91,c4),
	HX_("CYMKA_ARGB",de,e3,d9,e7),
	HX_("luminosityGrey",40,40,9e,ee),
	HX_("blendARGB",1d,3a,33,04),
	HX_("blendRGB",3c,d7,d4,6a),
	HX_("blend",51,e8,f4,b4),
	HX_("smootherStep",07,05,2b,4b),
	HX_("whitePercent",1c,1f,59,35),
	HX_("whiteRatio",a2,15,78,3b),
	HX_("blackPercent",c6,c2,f1,26),
	HX_("blackRatio",cc,9a,c5,9a),
	HX_("colorPercent",a2,a3,31,a2),
	HX_("colorRatio",a8,4c,90,08),
	HX_("darkColorPercent",38,1d,0f,85),
	HX_("darkColorRatio",be,14,1b,9d),
	HX_("redPercent",74,35,48,78),
	HX_("redRatio",fa,65,70,53),
	HX_("greenPercent",42,72,89,c7),
	HX_("greenRatio",48,33,e9,b8),
	HX_("bluePercent",4b,77,f7,b3),
	HX_("blueRatio",11,b4,5e,bc),
	HX_("redSoftPercent",2a,95,85,4a),
	HX_("redSoftRatio",30,4c,7f,d7),
	HX_("greenSoftPercent",f8,50,a0,75),
	HX_("greenSoftRatio",7e,d8,23,67),
	HX_("blueSoftPercent",81,0e,90,60),
	HX_("blueSoftRatio",c7,f1,e3,ce),
	HX_("yellowSoftPercent",e7,8b,95,aa),
	HX_("yellowSoftRatio",ad,29,bf,41),
	HX_("magentaSoftPercent",52,33,6f,ef),
	HX_("magentaSoftRatio",58,90,31,38),
	HX_("cyanSoftPercent",98,f6,09,b5),
	HX_("cyanSoftRatio",1e,d6,9a,1c),
	::String(null())
};

void ColorInt_Impl__obj::__register()
{
	ColorInt_Impl__obj _hx_dummy;
	ColorInt_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pallette.utils._ColorInt.ColorInt_Impl_",29,6e,d9,be);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ColorInt_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ColorInt_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ColorInt_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ColorInt_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ColorInt_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pallette
} // end namespace utils
} // end namespace _ColorInt
