// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_trilateral3_Trilateral
#include <trilateral3/Trilateral.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Pen
#include <trilateral3/drawing/Pen.h>
#endif
#ifndef INCLUDED_trilateral3_matrix_MatrixDozen
#include <trilateral3/matrix/MatrixDozen.h>
#endif
#ifndef INCLUDED_trilateral3_matrix_Vertex
#include <trilateral3/matrix/Vertex.h>
#endif
#ifndef INCLUDED_trilateral3_structure_StartEnd
#include <trilateral3/structure/StartEnd.h>
#endif
#ifndef INCLUDED_trilateral3_structure_TriInt
#include <trilateral3/structure/TriInt.h>
#endif
#ifndef INCLUDED_trilateral3_structure_Triangle3D
#include <trilateral3/structure/Triangle3D.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_16_new,"trilateral3.drawing.Pen","new",0x0b5158b4,"trilateral3.drawing.Pen.new","trilateral3/drawing/Pen.hx",16,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_35_transformRange,"trilateral3.drawing.Pen","transformRange",0x2bd130dd,"trilateral3.drawing.Pen.transformRange","trilateral3/drawing/Pen.hx",35,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_38_up,"trilateral3.drawing.Pen","up",0x11454487,"trilateral3.drawing.Pen.up","trilateral3/drawing/Pen.hx",38,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_43_down,"trilateral3.drawing.Pen","down",0xd547b98e,"trilateral3.drawing.Pen.down","trilateral3/drawing/Pen.hx",43,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_49_back,"trilateral3.drawing.Pen","back",0xd3ea9b53,"trilateral3.drawing.Pen.back","trilateral3/drawing/Pen.hx",49,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_53_transBack,"trilateral3.drawing.Pen","transBack",0x209b51c3,"trilateral3.drawing.Pen.transBack","trilateral3/drawing/Pen.hx",53,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_82_cornerColor,"trilateral3.drawing.Pen","cornerColor",0xdaa819a2,"trilateral3.drawing.Pen.cornerColor","trilateral3/drawing/Pen.hx",82,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_88_cornerColors,"trilateral3.drawing.Pen","cornerColors",0x786e5491,"trilateral3.drawing.Pen.cornerColors","trilateral3/drawing/Pen.hx",88,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_92_middleColor,"trilateral3.drawing.Pen","middleColor",0x8cdfd622,"trilateral3.drawing.Pen.middleColor","trilateral3/drawing/Pen.hx",92,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_96_middleColors,"trilateral3.drawing.Pen","middleColors",0xb6fb8811,"trilateral3.drawing.Pen.middleColors","trilateral3/drawing/Pen.hx",96,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_101_colorTriangles,"trilateral3.drawing.Pen","colorTriangles",0xb81d4af4,"trilateral3.drawing.Pen.colorTriangles","trilateral3/drawing/Pen.hx",101,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_109_addTriangle,"trilateral3.drawing.Pen","addTriangle",0x061df25d,"trilateral3.drawing.Pen.addTriangle","trilateral3/drawing/Pen.hx",109,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_130_triangle2DFill,"trilateral3.drawing.Pen","triangle2DFill",0x3f48ec69,"trilateral3.drawing.Pen.triangle2DFill","trilateral3/drawing/Pen.hx",130,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_140_get_pos,"trilateral3.drawing.Pen","get_pos",0xd0d4687f,"trilateral3.drawing.Pen.get_pos","trilateral3/drawing/Pen.hx",140,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_143_set_pos,"trilateral3.drawing.Pen","set_pos",0xc3d5f98b,"trilateral3.drawing.Pen.set_pos","trilateral3/drawing/Pen.hx",143,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_154_get_triangleCurrent,"trilateral3.drawing.Pen","get_triangleCurrent",0x3dc52dbc,"trilateral3.drawing.Pen.get_triangleCurrent","trilateral3/drawing/Pen.hx",154,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_162_get_color3Current,"trilateral3.drawing.Pen","get_color3Current",0x28ee8b54,"trilateral3.drawing.Pen.get_color3Current","trilateral3/drawing/Pen.hx",162,0xcfd64fbe)
HX_LOCAL_STACK_FRAME(_hx_pos_bf2a6fc66f3165af_165_copyRange,"trilateral3.drawing.Pen","copyRange",0x5cf9491c,"trilateral3.drawing.Pen.copyRange","trilateral3/drawing/Pen.hx",165,0xcfd64fbe)
namespace trilateral3{
namespace drawing{

void Pen_obj::__construct( ::Dynamic drawType_, ::Dynamic colorType_){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_16_new)
HXLINE(  28)		this->indices = ::Array_obj< int >::__new(0);
HXLINE(  19)		this->currentColor = 16435934;
HXLINE(  18)		this->dz = ((Float)0.01);
HXLINE(  17)		this->rounded = ((Float)30);
HXLINE(  30)		this->drawType = drawType_;
HXLINE(  31)		this->colorType = colorType_;
            	}

Dynamic Pen_obj::__CreateEmpty() { return new Pen_obj; }

void *Pen_obj::_hx_vtable = 0;

Dynamic Pen_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Pen_obj > _hx_result = new Pen_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Pen_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x33d0c03e;
}

void Pen_obj::transformRange( ::trilateral3::matrix::MatrixDozen trans, ::trilateral3::structure::StartEnd ir){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_35_transformRange)
HXDLIN(  35)		this->drawType->__Field(HX_("transformRange",b1,c0,a1,5a),::hx::paccDynamic)(trans,ir);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Pen_obj,transformRange,(void))

void Pen_obj::up( ::trilateral3::structure::StartEnd ir){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_38_up)
HXLINE(  39)		 ::trilateral3::matrix::MatrixDozen trans = ( ( ::trilateral3::matrix::MatrixDozen)(this->translateZ((this->dz / ( (Float)(2) )))) );
HXLINE(  40)		this->drawType->__Field(HX_("transformRange",b1,c0,a1,5a),::hx::paccDynamic)(trans,ir);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,up,(void))

void Pen_obj::down( ::trilateral3::structure::StartEnd ir){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_43_down)
HXLINE(  44)		 ::trilateral3::matrix::MatrixDozen trans = ( ( ::trilateral3::matrix::MatrixDozen)(this->translateZ((-(this->dz) / ( (Float)(2) )))) );
HXLINE(  45)		this->drawType->__Field(HX_("transformRange",b1,c0,a1,5a),::hx::paccDynamic)(trans,ir);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,down,(void))

void Pen_obj::back( ::trilateral3::structure::StartEnd ir){
            	HX_GC_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_49_back)
HXDLIN(  49)		 ::trilateral3::matrix::MatrixDozen r = ( ( ::trilateral3::matrix::MatrixDozen)(this->rotateX(::Math_obj::PI)) );
HXDLIN(  49)		 ::trilateral3::matrix::MatrixDozen s = ( ( ::trilateral3::matrix::MatrixDozen)(this->translateX(this->dz)) );
HXDLIN(  49)		 ::trilateral3::matrix::MatrixDozen m =  ::trilateral3::matrix::MatrixDozen_obj::__alloc( HX_CTX ,(((r->a * s->a) + (r->b * s->e)) + (r->c * s->i)),(((r->a * s->b) + (r->b * s->f)) + (r->c * s->j)),(((r->a * s->c) + (r->b * s->g)) + (r->c * s->k)),((((r->a * s->d) + (r->b * s->h)) + (r->c * s->l)) + r->d),(((r->e * s->a) + (r->f * s->e)) + (r->g * s->i)),(((r->e * s->b) + (r->f * s->f)) + (r->g * s->j)),(((r->e * s->c) + (r->f * s->g)) + (r->g * s->k)),((((r->e * s->d) + (r->f * s->h)) + (r->g * s->l)) + r->h),(((r->i * s->a) + (r->j * s->e)) + (r->k * s->i)),(((r->i * s->b) + (r->j * s->f)) + (r->k * s->j)),(((r->i * s->c) + (r->j * s->g)) + (r->k * s->k)),((((r->i * s->d) + (r->j * s->h)) + (r->k * s->l)) + r->l));
HXDLIN(  49)		this->drawType->__Field(HX_("transformRange",b1,c0,a1,5a),::hx::paccDynamic)(m,ir);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,back,(void))

 ::trilateral3::matrix::MatrixDozen Pen_obj::transBack(){
            	HX_GC_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_53_transBack)
HXDLIN(  53)		 ::trilateral3::matrix::MatrixDozen r = ( ( ::trilateral3::matrix::MatrixDozen)(this->rotateX(::Math_obj::PI)) );
HXDLIN(  53)		 ::trilateral3::matrix::MatrixDozen s = ( ( ::trilateral3::matrix::MatrixDozen)(this->translateX(this->dz)) );
HXDLIN(  53)		 ::trilateral3::matrix::MatrixDozen m =  ::trilateral3::matrix::MatrixDozen_obj::__alloc( HX_CTX ,(((r->a * s->a) + (r->b * s->e)) + (r->c * s->i)),(((r->a * s->b) + (r->b * s->f)) + (r->c * s->j)),(((r->a * s->c) + (r->b * s->g)) + (r->c * s->k)),((((r->a * s->d) + (r->b * s->h)) + (r->c * s->l)) + r->d),(((r->e * s->a) + (r->f * s->e)) + (r->g * s->i)),(((r->e * s->b) + (r->f * s->f)) + (r->g * s->j)),(((r->e * s->c) + (r->f * s->g)) + (r->g * s->k)),((((r->e * s->d) + (r->f * s->h)) + (r->g * s->l)) + r->h),(((r->i * s->a) + (r->j * s->e)) + (r->k * s->i)),(((r->i * s->b) + (r->j * s->f)) + (r->k * s->j)),(((r->i * s->c) + (r->j * s->g)) + (r->k * s->k)),((((r->i * s->d) + (r->j * s->h)) + (r->k * s->l)) + r->l));
HXDLIN(  53)		return m;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Pen_obj,transBack,return )

void Pen_obj::cornerColor(::hx::Null< int >  __o_color){
            		int color = __o_color.Default(-1);
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_82_cornerColor)
HXLINE(  83)		if ((color == -1)) {
HXLINE(  83)			color = this->currentColor;
            		}
HXLINE(  84)		this->colorType->__Field(HX_("cornerColors",65,87,ed,a2),::hx::paccDynamic)(color,color,color);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,cornerColor,(void))

void Pen_obj::cornerColors(int colorA,int colorB,int colorC){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_88_cornerColors)
HXDLIN(  88)		this->colorType->__Field(HX_("cornerColors",65,87,ed,a2),::hx::paccDynamic)(colorA,colorB,colorC);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,cornerColors,(void))

void Pen_obj::middleColor(int color,int colorCentre){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_92_middleColor)
HXDLIN(  92)		this->colorType->__Field(HX_("cornerColors",65,87,ed,a2),::hx::paccDynamic)(colorCentre,color,color);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Pen_obj,middleColor,(void))

void Pen_obj::middleColors(int color,int colorCentre,int times){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_96_middleColors)
HXDLIN(  96)		int _g = 0;
HXDLIN(  96)		int _g1 = times;
HXDLIN(  96)		while((_g < _g1)){
HXDLIN(  96)			_g = (_g + 1);
HXDLIN(  96)			int i = (_g - 1);
HXLINE(  97)			this->colorType->__Field(HX_("cornerColors",65,87,ed,a2),::hx::paccDynamic)(colorCentre,color,color);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,middleColors,(void))

void Pen_obj::colorTriangles(int color,int times){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_101_colorTriangles)
HXLINE( 102)		if ((color == -1)) {
HXLINE( 102)			color = this->currentColor;
            		}
HXLINE( 103)		this->colorType->__Field(HX_("colorTriangles",c8,da,ed,e6),::hx::paccDynamic)(color,times);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Pen_obj,colorTriangles,(void))

void Pen_obj::addTriangle(float ax,float ay,float az,float bx,float by,float bz,float cx,float cy,float cz){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_109_addTriangle)
HXLINE( 111)		this->drawType->__Field(HX_("triangle",c8,be,c5,8d),::hx::paccDynamic)(ax,ay,az,bx,by,bz,cx,cy,cz);
HXLINE( 112)		if (::hx::IsNotNull( ::trilateral3::Trilateral_obj::transformMatrix )) {
HXLINE( 112)			this->drawType->__Field(HX_("transform",6c,2d,93,45),::hx::paccDynamic)(::trilateral3::Trilateral_obj::transformMatrix);
            		}
HXLINE( 113)		this->drawType->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
            	}


HX_DEFINE_DYNAMIC_FUNC9(Pen_obj,addTriangle,(void))

int Pen_obj::triangle2DFill(Float ax,Float ay,Float bx,Float by,Float cx,Float cy,::hx::Null< int >  __o_color){
            		int color = __o_color.Default(-1);
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_130_triangle2DFill)
HXLINE( 132)		if ((color == -1)) {
HXLINE( 132)			color = this->currentColor;
            		}
HXLINE( 133)		{
HXLINE( 133)			this->drawType->__Field(HX_("triangle",c8,be,c5,8d),::hx::paccDynamic)(ax,ay,0,bx,by,0,cx,cy,0);
HXDLIN( 133)			if (::hx::IsNotNull( ::trilateral3::Trilateral_obj::transformMatrix )) {
HXLINE( 133)				this->drawType->__Field(HX_("transform",6c,2d,93,45),::hx::paccDynamic)(::trilateral3::Trilateral_obj::transformMatrix);
            			}
HXDLIN( 133)			this->drawType->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
            		}
HXLINE( 134)		this->colorType->__Field(HX_("cornerColors",65,87,ed,a2),::hx::paccDynamic)(color,color,color);
HXLINE( 135)		return 1;
            	}


HX_DEFINE_DYNAMIC_FUNC7(Pen_obj,triangle2DFill,return )

Float Pen_obj::get_pos(){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_140_get_pos)
HXDLIN( 140)		return ( (Float)(this->drawType->__Field(HX_("get_pos",2b,26,ca,26),::hx::paccDynamic)()) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Pen_obj,get_pos,return )

Float Pen_obj::set_pos(Float v){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_143_set_pos)
HXLINE( 144)		this->drawType->__Field(HX_("set_pos",37,b7,cb,19),::hx::paccDynamic)(v);
HXLINE( 145)		this->colorType->__Field(HX_("set_pos",37,b7,cb,19),::hx::paccDynamic)(v);
HXLINE( 146)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Pen_obj,set_pos,return )

 ::Dynamic Pen_obj::get_triangleCurrent(){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_154_get_triangleCurrent)
HXDLIN( 154)		return this->drawType->__Field(HX_("triangleCurrent",51,ee,2b,9e),::hx::paccDynamic);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Pen_obj,get_triangleCurrent,return )

 ::Dynamic Pen_obj::get_color3Current(){
            	HX_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_162_get_color3Current)
HXDLIN( 162)		return this->colorType->__Field(HX_("color3current",c9,64,01,5a),::hx::paccDynamic);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Pen_obj,get_color3Current,return )

 ::trilateral3::structure::StartEnd Pen_obj::copyRange( ::trilateral3::drawing::Pen otherPen, ::trilateral3::structure::StartEnd startEnd, ::trilateral3::matrix::Vertex vec){
            	HX_GC_STACKFRAME(&_hx_pos_bf2a6fc66f3165af_165_copyRange)
HXLINE( 166)		Float start = ( (Float)(this->drawType->__Field(HX_("get_pos",2b,26,ca,26),::hx::paccDynamic)()) );
HXLINE( 167)		{
HXLINE( 167)			Float v = ( (Float)(startEnd->start) );
HXDLIN( 167)			otherPen->drawType->__Field(HX_("set_pos",37,b7,cb,19),::hx::paccDynamic)(v);
HXDLIN( 167)			otherPen->colorType->__Field(HX_("set_pos",37,b7,cb,19),::hx::paccDynamic)(v);
            		}
HXLINE( 168)		 ::trilateral3::structure::TriInt colors;
HXLINE( 169)		{
HXLINE( 169)			int _g = startEnd->start;
HXDLIN( 169)			int _g1 = (startEnd->end + 1);
HXDLIN( 169)			while((_g < _g1)){
HXLINE( 169)				_g = (_g + 1);
HXDLIN( 169)				int i = (_g - 1);
HXLINE( 170)				 ::trilateral3::structure::Triangle3D tri = ( ( ::trilateral3::structure::Triangle3D)(otherPen->drawType->__Field(HX_("getTriangle3D",af,89,3b,36),::hx::paccDynamic)()) );
HXLINE( 171)				this->drawType->__Field(HX_("triangle",c8,be,c5,8d),::hx::paccDynamic)((tri->a->x + vec->x),(tri->a->y + vec->y),(tri->a->z + vec->z),(tri->b->x + vec->x),(tri->b->y + vec->y),(tri->b->z + vec->z),(tri->c->x + vec->x),(tri->c->y + vec->y),(tri->c->z + vec->z));
HXLINE( 174)				this->drawType->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
            			}
            		}
HXLINE( 178)		int end = ::Std_obj::_hx_int((( (Float)(this->drawType->__Field(HX_("get_pos",2b,26,ca,26),::hx::paccDynamic)()) ) - ( (Float)(1) )));
HXLINE( 179)		 ::trilateral3::structure::StartEnd s0 =  ::trilateral3::structure::StartEnd_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(start),end);
HXLINE( 180)		return s0;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Pen_obj,copyRange,return )


::hx::ObjectPtr< Pen_obj > Pen_obj::__new( ::Dynamic drawType_, ::Dynamic colorType_) {
	::hx::ObjectPtr< Pen_obj > __this = new Pen_obj();
	__this->__construct(drawType_,colorType_);
	return __this;
}

::hx::ObjectPtr< Pen_obj > Pen_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic drawType_, ::Dynamic colorType_) {
	Pen_obj *__this = (Pen_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Pen_obj), true, "trilateral3.drawing.Pen"));
	*(void **)__this = Pen_obj::_hx_vtable;
	__this->__construct(drawType_,colorType_);
	return __this;
}

Pen_obj::Pen_obj()
{
}

void Pen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Pen);
	HX_MARK_MEMBER_NAME(rounded,"rounded");
	HX_MARK_MEMBER_NAME(dz,"dz");
	HX_MARK_MEMBER_NAME(currentColor,"currentColor");
	HX_MARK_MEMBER_NAME(drawType,"drawType");
	HX_MARK_MEMBER_NAME(colorType,"colorType");
	HX_MARK_MEMBER_NAME(translateX,"translateX");
	HX_MARK_MEMBER_NAME(translateY,"translateY");
	HX_MARK_MEMBER_NAME(translateZ,"translateZ");
	HX_MARK_MEMBER_NAME(rotateX,"rotateX");
	HX_MARK_MEMBER_NAME(rotateY,"rotateY");
	HX_MARK_MEMBER_NAME(rotateZ,"rotateZ");
	HX_MARK_MEMBER_NAME(indices,"indices");
	HX_MARK_END_CLASS();
}

void Pen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(rounded,"rounded");
	HX_VISIT_MEMBER_NAME(dz,"dz");
	HX_VISIT_MEMBER_NAME(currentColor,"currentColor");
	HX_VISIT_MEMBER_NAME(drawType,"drawType");
	HX_VISIT_MEMBER_NAME(colorType,"colorType");
	HX_VISIT_MEMBER_NAME(translateX,"translateX");
	HX_VISIT_MEMBER_NAME(translateY,"translateY");
	HX_VISIT_MEMBER_NAME(translateZ,"translateZ");
	HX_VISIT_MEMBER_NAME(rotateX,"rotateX");
	HX_VISIT_MEMBER_NAME(rotateY,"rotateY");
	HX_VISIT_MEMBER_NAME(rotateZ,"rotateZ");
	HX_VISIT_MEMBER_NAME(indices,"indices");
}

::hx::Val Pen_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"dz") ) { return ::hx::Val( dz ); }
		if (HX_FIELD_EQ(inName,"up") ) { return ::hx::Val( up_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_pos() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"down") ) { return ::hx::Val( down_dyn() ); }
		if (HX_FIELD_EQ(inName,"back") ) { return ::hx::Val( back_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rounded") ) { return ::hx::Val( rounded ); }
		if (HX_FIELD_EQ(inName,"rotateX") ) { return ::hx::Val( rotateX ); }
		if (HX_FIELD_EQ(inName,"rotateY") ) { return ::hx::Val( rotateY ); }
		if (HX_FIELD_EQ(inName,"rotateZ") ) { return ::hx::Val( rotateZ ); }
		if (HX_FIELD_EQ(inName,"indices") ) { return ::hx::Val( indices ); }
		if (HX_FIELD_EQ(inName,"get_pos") ) { return ::hx::Val( get_pos_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pos") ) { return ::hx::Val( set_pos_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawType") ) { return ::hx::Val( drawType ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"colorType") ) { return ::hx::Val( colorType ); }
		if (HX_FIELD_EQ(inName,"transBack") ) { return ::hx::Val( transBack_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyRange") ) { return ::hx::Val( copyRange_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"translateX") ) { return ::hx::Val( translateX ); }
		if (HX_FIELD_EQ(inName,"translateY") ) { return ::hx::Val( translateY ); }
		if (HX_FIELD_EQ(inName,"translateZ") ) { return ::hx::Val( translateZ ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"cornerColor") ) { return ::hx::Val( cornerColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"middleColor") ) { return ::hx::Val( middleColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"addTriangle") ) { return ::hx::Val( addTriangle_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentColor") ) { return ::hx::Val( currentColor ); }
		if (HX_FIELD_EQ(inName,"cornerColors") ) { return ::hx::Val( cornerColors_dyn() ); }
		if (HX_FIELD_EQ(inName,"middleColors") ) { return ::hx::Val( middleColors_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"color3Current") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_color3Current() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"transformRange") ) { return ::hx::Val( transformRange_dyn() ); }
		if (HX_FIELD_EQ(inName,"colorTriangles") ) { return ::hx::Val( colorTriangles_dyn() ); }
		if (HX_FIELD_EQ(inName,"triangle2DFill") ) { return ::hx::Val( triangle2DFill_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"triangleCurrent") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_triangleCurrent() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_color3Current") ) { return ::hx::Val( get_color3Current_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"get_triangleCurrent") ) { return ::hx::Val( get_triangleCurrent_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Pen_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"dz") ) { dz=inValue.Cast< Float >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_pos(inValue.Cast< Float >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rounded") ) { rounded=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rotateX") ) { rotateX=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rotateY") ) { rotateY=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rotateZ") ) { rotateZ=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"indices") ) { indices=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawType") ) { drawType=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"colorType") ) { colorType=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"translateX") ) { translateX=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"translateY") ) { translateY=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"translateZ") ) { translateZ=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentColor") ) { currentColor=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Pen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("rounded",2d,80,0f,8d));
	outFields->push(HX_("dz",96,57,00,00));
	outFields->push(HX_("currentColor",6a,56,68,91));
	outFields->push(HX_("drawType",de,9c,72,61));
	outFields->push(HX_("colorType",bd,7d,76,28));
	outFields->push(HX_("indices",27,47,54,e3));
	outFields->push(HX_("pos",94,5d,55,00));
	outFields->push(HX_("triangleCurrent",51,ee,2b,9e));
	outFields->push(HX_("color3Current",a9,8c,52,27));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Pen_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(Pen_obj,rounded),HX_("rounded",2d,80,0f,8d)},
	{::hx::fsFloat,(int)offsetof(Pen_obj,dz),HX_("dz",96,57,00,00)},
	{::hx::fsInt,(int)offsetof(Pen_obj,currentColor),HX_("currentColor",6a,56,68,91)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,drawType),HX_("drawType",de,9c,72,61)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,colorType),HX_("colorType",bd,7d,76,28)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,translateX),HX_("translateX",4a,8d,5c,06)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,translateY),HX_("translateY",4b,8d,5c,06)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,translateZ),HX_("translateZ",4c,8d,5c,06)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,rotateX),HX_("rotateX",9d,49,1d,f1)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,rotateY),HX_("rotateY",9e,49,1d,f1)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Pen_obj,rotateZ),HX_("rotateZ",9f,49,1d,f1)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(Pen_obj,indices),HX_("indices",27,47,54,e3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Pen_obj_sStaticStorageInfo = 0;
#endif

static ::String Pen_obj_sMemberFields[] = {
	HX_("rounded",2d,80,0f,8d),
	HX_("dz",96,57,00,00),
	HX_("currentColor",6a,56,68,91),
	HX_("drawType",de,9c,72,61),
	HX_("colorType",bd,7d,76,28),
	HX_("translateX",4a,8d,5c,06),
	HX_("translateY",4b,8d,5c,06),
	HX_("translateZ",4c,8d,5c,06),
	HX_("rotateX",9d,49,1d,f1),
	HX_("rotateY",9e,49,1d,f1),
	HX_("rotateZ",9f,49,1d,f1),
	HX_("indices",27,47,54,e3),
	HX_("transformRange",b1,c0,a1,5a),
	HX_("up",5b,66,00,00),
	HX_("down",62,f8,6d,42),
	HX_("back",27,da,10,41),
	HX_("transBack",6f,d2,bc,2d),
	HX_("cornerColor",4e,1d,ac,93),
	HX_("cornerColors",65,87,ed,a2),
	HX_("middleColor",ce,d9,e3,45),
	HX_("middleColors",e5,ba,7a,e1),
	HX_("colorTriangles",c8,da,ed,e6),
	HX_("addTriangle",09,f6,21,bf),
	HX_("triangle2DFill",3d,7c,19,6e),
	HX_("get_pos",2b,26,ca,26),
	HX_("set_pos",37,b7,cb,19),
	HX_("get_triangleCurrent",68,bd,36,29),
	HX_("get_color3Current",00,98,c2,2d),
	HX_("copyRange",c8,c9,1a,6a),
	::String(null()) };

::hx::Class Pen_obj::__mClass;

void Pen_obj::__register()
{
	Pen_obj _hx_dummy;
	Pen_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("trilateral3.drawing.Pen",c2,2e,2a,ed);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Pen_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Pen_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Pen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Pen_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace trilateral3
} // end namespace drawing
