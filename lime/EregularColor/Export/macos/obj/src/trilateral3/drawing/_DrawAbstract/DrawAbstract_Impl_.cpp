// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_trilateral3_drawing__DrawAbstract_DrawAbstract_Impl_
#include <trilateral3/drawing/_DrawAbstract/DrawAbstract_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8c066c0452d07b41_4__new,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_","_new",0x4844e369,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_._new","trilateral3/drawing/DrawAbstract.hx",4,0x732bfa1f)
HX_LOCAL_STACK_FRAME(_hx_pos_8c066c0452d07b41_9_get_pos,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_","get_pos",0xd202cd23,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_.get_pos","trilateral3/drawing/DrawAbstract.hx",9,0x732bfa1f)
HX_LOCAL_STACK_FRAME(_hx_pos_8c066c0452d07b41_11_set_pos,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_","set_pos",0xc5045e2f,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_.set_pos","trilateral3/drawing/DrawAbstract.hx",11,0x732bfa1f)
HX_LOCAL_STACK_FRAME(_hx_pos_8c066c0452d07b41_16_set_size,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_","set_size",0xa0c527c6,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_.set_size","trilateral3/drawing/DrawAbstract.hx",16,0x732bfa1f)
HX_LOCAL_STACK_FRAME(_hx_pos_8c066c0452d07b41_21_get_size,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_","get_size",0xf267ce52,"trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_.get_size","trilateral3/drawing/DrawAbstract.hx",21,0x732bfa1f)
namespace trilateral3{
namespace drawing{
namespace _DrawAbstract{

void DrawAbstract_Impl__obj::__construct() { }

Dynamic DrawAbstract_Impl__obj::__CreateEmpty() { return new DrawAbstract_Impl__obj; }

void *DrawAbstract_Impl__obj::_hx_vtable = 0;

Dynamic DrawAbstract_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DrawAbstract_Impl__obj > _hx_result = new DrawAbstract_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DrawAbstract_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x02344808;
}

 ::Dynamic DrawAbstract_Impl__obj::_new( ::Dynamic drawType){
            	HX_STACKFRAME(&_hx_pos_8c066c0452d07b41_4__new)
HXDLIN(   4)		 ::Dynamic this1 = drawType;
HXDLIN(   4)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawAbstract_Impl__obj,_new,return )

Float DrawAbstract_Impl__obj::get_pos( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_8c066c0452d07b41_9_get_pos)
HXDLIN(   9)		return ( (Float)(this1->__Field(HX_("get_pos",2b,26,ca,26),::hx::paccDynamic)()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawAbstract_Impl__obj,get_pos,return )

Float DrawAbstract_Impl__obj::set_pos( ::Dynamic this1,Float v){
            	HX_STACKFRAME(&_hx_pos_8c066c0452d07b41_11_set_pos)
HXLINE(  12)		this1->__Field(HX_("set_pos",37,b7,cb,19),::hx::paccDynamic)(v);
HXLINE(  13)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DrawAbstract_Impl__obj,set_pos,return )

int DrawAbstract_Impl__obj::set_size( ::Dynamic this1,int v){
            	HX_STACKFRAME(&_hx_pos_8c066c0452d07b41_16_set_size)
HXLINE(  17)		this1->__Field(HX_("set_size",be,b5,6b,7a),::hx::paccDynamic)(v);
HXLINE(  18)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DrawAbstract_Impl__obj,set_size,return )

int DrawAbstract_Impl__obj::get_size( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_8c066c0452d07b41_21_get_size)
HXDLIN(  21)		return ( (int)(this1->__Field(HX_("get_size",4a,5c,0e,cc),::hx::paccDynamic)()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawAbstract_Impl__obj,get_size,return )


DrawAbstract_Impl__obj::DrawAbstract_Impl__obj()
{
}

bool DrawAbstract_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_pos") ) { outValue = get_pos_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_pos") ) { outValue = set_pos_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"set_size") ) { outValue = set_size_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_size") ) { outValue = get_size_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DrawAbstract_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DrawAbstract_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class DrawAbstract_Impl__obj::__mClass;

static ::String DrawAbstract_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("get_pos",2b,26,ca,26),
	HX_("set_pos",37,b7,cb,19),
	HX_("set_size",be,b5,6b,7a),
	HX_("get_size",4a,5c,0e,cc),
	::String(null())
};

void DrawAbstract_Impl__obj::__register()
{
	DrawAbstract_Impl__obj _hx_dummy;
	DrawAbstract_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("trilateral3.drawing._DrawAbstract.DrawAbstract_Impl_",66,4f,91,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DrawAbstract_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DrawAbstract_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DrawAbstract_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DrawAbstract_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DrawAbstract_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace trilateral3
} // end namespace drawing
} // end namespace _DrawAbstract
