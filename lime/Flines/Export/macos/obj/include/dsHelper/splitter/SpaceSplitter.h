// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_dsHelper_splitter_SpaceSplitter
#define INCLUDED_dsHelper_splitter_SpaceSplitter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(dsHelper,splitter,SpaceSplitter)

namespace dsHelper{
namespace splitter{


class HXCPP_CLASS_ATTRIBUTES SpaceSplitter_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SpaceSplitter_obj OBJ_;
		SpaceSplitter_obj();

	public:
		enum { _hx_ClassId = 0x1d0776a1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="dsHelper.splitter.SpaceSplitter")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"dsHelper.splitter.SpaceSplitter"); }

		inline static ::hx::ObjectPtr< SpaceSplitter_obj > __new() {
			::hx::ObjectPtr< SpaceSplitter_obj > __this = new SpaceSplitter_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SpaceSplitter_obj > __alloc(::hx::Ctx *_hx_ctx) {
			SpaceSplitter_obj *__this = (SpaceSplitter_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SpaceSplitter_obj), false, "dsHelper.splitter.SpaceSplitter"));
			*(void **)__this = SpaceSplitter_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SpaceSplitter_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SpaceSplitter",0d,06,dc,78); }

		static ::Array< ::Dynamic> parse(::String str);
		static ::Dynamic parse_dyn();

};

} // end namespace dsHelper
} // end namespace splitter

#endif /* INCLUDED_dsHelper_splitter_SpaceSplitter */ 
