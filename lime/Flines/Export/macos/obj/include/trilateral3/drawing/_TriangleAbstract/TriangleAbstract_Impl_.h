// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_trilateral3_drawing__TriangleAbstract_TriangleAbstract_Impl_
#define INCLUDED_trilateral3_drawing__TriangleAbstract_TriangleAbstract_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(trilateral3,drawing,_TriangleAbstract,TriangleAbstract_Impl_)

namespace trilateral3{
namespace drawing{
namespace _TriangleAbstract{


class HXCPP_CLASS_ATTRIBUTES TriangleAbstract_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TriangleAbstract_Impl__obj OBJ_;
		TriangleAbstract_Impl__obj();

	public:
		enum { _hx_ClassId = 0x4081ee3c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.drawing._TriangleAbstract.TriangleAbstract_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.drawing._TriangleAbstract.TriangleAbstract_Impl_"); }

		inline static ::hx::ObjectPtr< TriangleAbstract_Impl__obj > __new() {
			::hx::ObjectPtr< TriangleAbstract_Impl__obj > __this = new TriangleAbstract_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TriangleAbstract_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			TriangleAbstract_Impl__obj *__this = (TriangleAbstract_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TriangleAbstract_Impl__obj), false, "trilateral3.drawing._TriangleAbstract.TriangleAbstract_Impl_"));
			*(void **)__this = TriangleAbstract_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TriangleAbstract_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TriangleAbstract_Impl_",0a,28,c2,b8); }

		static  ::Dynamic _new( ::Dynamic triangleType);
		static ::Dynamic _new_dyn();

		static Float get_bottom( ::Dynamic this1);
		static ::Dynamic get_bottom_dyn();

		static Float get_back( ::Dynamic this1);
		static ::Dynamic get_back_dyn();

		static Float get_right( ::Dynamic this1);
		static ::Dynamic get_right_dyn();

		static Float get_x( ::Dynamic this1);
		static ::Dynamic get_x_dyn();

		static Float set_x( ::Dynamic this1,Float v);
		static ::Dynamic set_x_dyn();

		static Float get_y( ::Dynamic this1);
		static ::Dynamic get_y_dyn();

		static Float set_y( ::Dynamic this1,Float v);
		static ::Dynamic set_y_dyn();

		static Float get_z( ::Dynamic this1);
		static ::Dynamic get_z_dyn();

		static Float set_z( ::Dynamic this1,Float v);
		static ::Dynamic set_z_dyn();

};

} // end namespace trilateral3
} // end namespace drawing
} // end namespace _TriangleAbstract

#endif /* INCLUDED_trilateral3_drawing__TriangleAbstract_TriangleAbstract_Impl_ */ 
