// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_dsHelper_splitter_StringCodeIterator
#define INCLUDED_dsHelper_splitter_StringCodeIterator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(StringBuf)
HX_DECLARE_CLASS2(dsHelper,splitter,StringCodeIterator)

namespace dsHelper{
namespace splitter{


class HXCPP_CLASS_ATTRIBUTES StringCodeIterator_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef StringCodeIterator_obj OBJ_;
		StringCodeIterator_obj();

	public:
		enum { _hx_ClassId = 0x30d031b8 };

		void __construct(::String str_, ::Dynamic __o_pos_);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="dsHelper.splitter.StringCodeIterator")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"dsHelper.splitter.StringCodeIterator"); }
		static ::hx::ObjectPtr< StringCodeIterator_obj > __new(::String str_, ::Dynamic __o_pos_);
		static ::hx::ObjectPtr< StringCodeIterator_obj > __alloc(::hx::Ctx *_hx_ctx,::String str_, ::Dynamic __o_pos_);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~StringCodeIterator_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("StringCodeIterator",cc,3a,a0,ab); }

		::String str;
		 ::StringBuf b;
		int pos;
		int c;
		::String last2;
		::String last;
		int length;
		void addChar();
		::Dynamic addChar_dyn();

		::String toStr();
		::Dynamic toStr_dyn();

		bool isRepeat();
		::Dynamic isRepeat_dyn();

		void resetBuffer();
		::Dynamic resetBuffer_dyn();

		void reset();
		::Dynamic reset_dyn();

		bool hasNext();
		::Dynamic hasNext_dyn();

		int next();
		::Dynamic next_dyn();

};

} // end namespace dsHelper
} // end namespace splitter

#endif /* INCLUDED_dsHelper_splitter_StringCodeIterator */ 
