// Generated by Haxe 4.2.0-rc.1+7dc565e63
#ifndef INCLUDED_kitGL_glLime__Shaders_Shaders_Fields_
#define INCLUDED_kitGL_glLime__Shaders_Shaders_Fields_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(kitGL,glLime,_Shaders,Shaders_Fields_)

namespace kitGL{
namespace glLime{
namespace _Shaders{


class HXCPP_CLASS_ATTRIBUTES Shaders_Fields__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Shaders_Fields__obj OBJ_;
		Shaders_Fields__obj();

	public:
		enum { _hx_ClassId = 0x0bc853d1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kitGL.glLime._Shaders.Shaders_Fields_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"kitGL.glLime._Shaders.Shaders_Fields_"); }

		inline static ::hx::ObjectPtr< Shaders_Fields__obj > __new() {
			::hx::ObjectPtr< Shaders_Fields__obj > __this = new Shaders_Fields__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Shaders_Fields__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Shaders_Fields__obj *__this = (Shaders_Fields__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Shaders_Fields__obj), false, "kitGL.glLime._Shaders.Shaders_Fields_"));
			*(void **)__this = Shaders_Fields__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Shaders_Fields__obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Shaders_Fields_",b5,84,48,bf); }

		static void __boot();
		static ::String vertexSimpleColor;
		static ::String fragmentSimpleColor;
		static ::String vertexString0;
		static ::String fragmentString0;
		static ::String vertexColor;
		static ::String fragmentColor;
		static ::String vertexTexture;
		static ::String fragmentTexture;
};

} // end namespace kitGL
} // end namespace glLime
} // end namespace _Shaders

#endif /* INCLUDED_kitGL_glLime__Shaders_Shaders_Fields_ */ 
