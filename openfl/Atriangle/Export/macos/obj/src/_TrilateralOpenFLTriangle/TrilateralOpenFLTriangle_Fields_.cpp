// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_TrilateralOpenFLTriangle
#include <TrilateralOpenFLTriangle.h>
#endif
#ifndef INCLUDED__TrilateralOpenFLTriangle_TrilateralOpenFLTriangle_Fields_
#include <_TrilateralOpenFLTriangle/TrilateralOpenFLTriangle_Fields_.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_trilateral3_target_openfl_AppOpenFL
#include <trilateral3/target/openfl/AppOpenFL.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4f4d08751ff02df5_22_main,"_TrilateralOpenFLTriangle.TrilateralOpenFLTriangle_Fields_","main",0xcf4cf511,"_TrilateralOpenFLTriangle.TrilateralOpenFLTriangle_Fields_.main","TrilateralOpenFLTriangle.hx",22,0x4e1338da)
namespace _TrilateralOpenFLTriangle{

void TrilateralOpenFLTriangle_Fields__obj::__construct() { }

Dynamic TrilateralOpenFLTriangle_Fields__obj::__CreateEmpty() { return new TrilateralOpenFLTriangle_Fields__obj; }

void *TrilateralOpenFLTriangle_Fields__obj::_hx_vtable = 0;

Dynamic TrilateralOpenFLTriangle_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TrilateralOpenFLTriangle_Fields__obj > _hx_result = new TrilateralOpenFLTriangle_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TrilateralOpenFLTriangle_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0d3c620e;
}

void TrilateralOpenFLTriangle_Fields__obj::main(){
            	HX_GC_STACKFRAME(&_hx_pos_4f4d08751ff02df5_22_main)
HXLINE(  26)		::haxe::Log_obj::trace(HX_("TrilateralOpenFLTriangle example",6e,b0,cb,77),::hx::SourceInfo(HX_("TrilateralOpenFLTriangle.hx",da,38,13,4e),26,HX_("_TrilateralOpenFLTriangle.TrilateralOpenFLTriangle_Fields_",96,d2,06,2b),HX_("main",39,38,56,48)));
HXLINE(  27)		 ::TrilateralOpenFLTriangle_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TrilateralOpenFLTriangle_Fields__obj,main,(void))


TrilateralOpenFLTriangle_Fields__obj::TrilateralOpenFLTriangle_Fields__obj()
{
}

bool TrilateralOpenFLTriangle_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TrilateralOpenFLTriangle_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TrilateralOpenFLTriangle_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class TrilateralOpenFLTriangle_Fields__obj::__mClass;

static ::String TrilateralOpenFLTriangle_Fields__obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void TrilateralOpenFLTriangle_Fields__obj::__register()
{
	TrilateralOpenFLTriangle_Fields__obj _hx_dummy;
	TrilateralOpenFLTriangle_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("_TrilateralOpenFLTriangle.TrilateralOpenFLTriangle_Fields_",96,d2,06,2b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TrilateralOpenFLTriangle_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TrilateralOpenFLTriangle_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TrilateralOpenFLTriangle_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TrilateralOpenFLTriangle_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TrilateralOpenFLTriangle_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace _TrilateralOpenFLTriangle
