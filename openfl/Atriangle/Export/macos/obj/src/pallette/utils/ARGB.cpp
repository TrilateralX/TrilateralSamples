// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_pallette_utils_ARGB
#include <pallette/utils/ARGB.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4e5fe218f29cef28_6_new,"pallette.utils.ARGB","new",0xb09b7718,"pallette.utils.ARGB.new","pallette/utils/ARGB.hx",6,0xb57db8d6)
namespace pallette{
namespace utils{

void ARGB_obj::__construct(Float a,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_4e5fe218f29cef28_6_new)
HXLINE(  10)		this->b = ((Float)0.);
HXLINE(   9)		this->g = ((Float)0.);
HXLINE(   8)		this->r = ((Float)0.);
HXLINE(   7)		this->a = ((Float)0.);
HXLINE(  12)		this->a = a;
HXLINE(  13)		this->r = r;
HXLINE(  14)		this->g = g;
HXLINE(  15)		this->b = b;
            	}

Dynamic ARGB_obj::__CreateEmpty() { return new ARGB_obj; }

void *ARGB_obj::_hx_vtable = 0;

Dynamic ARGB_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ARGB_obj > _hx_result = new ARGB_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool ARGB_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x44344228;
}


ARGB_obj::ARGB_obj()
{
}

::hx::Val ARGB_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return ::hx::Val( a ); }
		if (HX_FIELD_EQ(inName,"r") ) { return ::hx::Val( r ); }
		if (HX_FIELD_EQ(inName,"g") ) { return ::hx::Val( g ); }
		if (HX_FIELD_EQ(inName,"b") ) { return ::hx::Val( b ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ARGB_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { a=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"r") ) { r=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"g") ) { g=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ARGB_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("a",61,00,00,00));
	outFields->push(HX_("r",72,00,00,00));
	outFields->push(HX_("g",67,00,00,00));
	outFields->push(HX_("b",62,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ARGB_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(ARGB_obj,a),HX_("a",61,00,00,00)},
	{::hx::fsFloat,(int)offsetof(ARGB_obj,r),HX_("r",72,00,00,00)},
	{::hx::fsFloat,(int)offsetof(ARGB_obj,g),HX_("g",67,00,00,00)},
	{::hx::fsFloat,(int)offsetof(ARGB_obj,b),HX_("b",62,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ARGB_obj_sStaticStorageInfo = 0;
#endif

static ::String ARGB_obj_sMemberFields[] = {
	HX_("a",61,00,00,00),
	HX_("r",72,00,00,00),
	HX_("g",67,00,00,00),
	HX_("b",62,00,00,00),
	::String(null()) };

::hx::Class ARGB_obj::__mClass;

void ARGB_obj::__register()
{
	ARGB_obj _hx_dummy;
	ARGB_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pallette.utils.ARGB",26,4b,24,41);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ARGB_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ARGB_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ARGB_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ARGB_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pallette
} // end namespace utils
