// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_text__TextLayout_TextDirection_Impl_
#include <openfl/_internal/text/_TextLayout/TextDirection_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_298_reverse,"openfl._internal.text._TextLayout.TextDirection_Impl_","reverse",0xf3fb0bfd,"openfl._internal.text._TextLayout.TextDirection_Impl_.reverse","openfl/_internal/text/TextLayout.hx",298,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_303_toString,"openfl._internal.text._TextLayout.TextDirection_Impl_","toString",0x3e687d71,"openfl._internal.text._TextLayout.TextDirection_Impl_.toString","openfl/_internal/text/TextLayout.hx",303,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_316_toHBDirection,"openfl._internal.text._TextLayout.TextDirection_Impl_","toHBDirection",0x7ad2a365,"openfl._internal.text._TextLayout.TextDirection_Impl_.toHBDirection","openfl/_internal/text/TextLayout.hx",316,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_329_get_backward,"openfl._internal.text._TextLayout.TextDirection_Impl_","get_backward",0x2c628331,"openfl._internal.text._TextLayout.TextDirection_Impl_.get_backward","openfl/_internal/text/TextLayout.hx",329,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_334_get_forward,"openfl._internal.text._TextLayout.TextDirection_Impl_","get_forward",0xda561e37,"openfl._internal.text._TextLayout.TextDirection_Impl_.get_forward","openfl/_internal/text/TextLayout.hx",334,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_339_get_horizontal,"openfl._internal.text._TextLayout.TextDirection_Impl_","get_horizontal",0x3e4093b2,"openfl._internal.text._TextLayout.TextDirection_Impl_.get_horizontal","openfl/_internal/text/TextLayout.hx",339,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_344_get_vertical,"openfl._internal.text._TextLayout.TextDirection_Impl_","get_vertical",0x6f5f63c4,"openfl._internal.text._TextLayout.TextDirection_Impl_.get_vertical","openfl/_internal/text/TextLayout.hx",344,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_286_boot,"openfl._internal.text._TextLayout.TextDirection_Impl_","boot",0xe4242a77,"openfl._internal.text._TextLayout.TextDirection_Impl_.boot","openfl/_internal/text/TextLayout.hx",286,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_287_boot,"openfl._internal.text._TextLayout.TextDirection_Impl_","boot",0xe4242a77,"openfl._internal.text._TextLayout.TextDirection_Impl_.boot","openfl/_internal/text/TextLayout.hx",287,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_288_boot,"openfl._internal.text._TextLayout.TextDirection_Impl_","boot",0xe4242a77,"openfl._internal.text._TextLayout.TextDirection_Impl_.boot","openfl/_internal/text/TextLayout.hx",288,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_289_boot,"openfl._internal.text._TextLayout.TextDirection_Impl_","boot",0xe4242a77,"openfl._internal.text._TextLayout.TextDirection_Impl_.boot","openfl/_internal/text/TextLayout.hx",289,0x21621597)
HX_LOCAL_STACK_FRAME(_hx_pos_25e1fe7cb7da8702_290_boot,"openfl._internal.text._TextLayout.TextDirection_Impl_","boot",0xe4242a77,"openfl._internal.text._TextLayout.TextDirection_Impl_.boot","openfl/_internal/text/TextLayout.hx",290,0x21621597)
namespace openfl{
namespace _internal{
namespace text{
namespace _TextLayout{

void TextDirection_Impl__obj::__construct() { }

Dynamic TextDirection_Impl__obj::__CreateEmpty() { return new TextDirection_Impl__obj; }

void *TextDirection_Impl__obj::_hx_vtable = 0;

Dynamic TextDirection_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextDirection_Impl__obj > _hx_result = new TextDirection_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextDirection_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x106383f1;
}

int TextDirection_Impl__obj::INVALID;

int TextDirection_Impl__obj::LEFT_TO_RIGHT;

int TextDirection_Impl__obj::RIGHT_TO_LEFT;

int TextDirection_Impl__obj::TOP_TO_BOTTOM;

int TextDirection_Impl__obj::BOTTOM_TO_TOP;

void TextDirection_Impl__obj::reverse(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_298_reverse)
HXDLIN( 298)		this1 = (this1 ^ 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,reverse,(void))

::String TextDirection_Impl__obj::toString(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_303_toString)
HXDLIN( 303)		switch((int)(this1)){
            			case (int)4: {
HXLINE( 305)				return HX_("leftToRight",1a,97,7b,b5);
            			}
            			break;
            			case (int)5: {
HXLINE( 306)				return HX_("rightToLeft",1e,40,ee,e6);
            			}
            			break;
            			case (int)6: {
HXLINE( 307)				return HX_("topToBottom",7b,ce,19,75);
            			}
            			break;
            			case (int)7: {
HXLINE( 308)				return HX_("bottomToTop",ef,ac,aa,79);
            			}
            			break;
            			default:{
HXLINE( 309)				return HX_("",00,00,00,00);
            			}
            		}
HXLINE( 303)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,toString,return )

int TextDirection_Impl__obj::toHBDirection(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_316_toHBDirection)
HXDLIN( 316)		switch((int)(this1)){
            			case (int)4: {
HXLINE( 318)				return 4;
            			}
            			break;
            			case (int)5: {
HXLINE( 319)				return 5;
            			}
            			break;
            			case (int)6: {
HXLINE( 320)				return 6;
            			}
            			break;
            			case (int)7: {
HXLINE( 321)				return 7;
            			}
            			break;
            			default:{
HXLINE( 322)				return 0;
            			}
            		}
HXLINE( 316)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,toHBDirection,return )

bool TextDirection_Impl__obj::get_backward(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_329_get_backward)
HXDLIN( 329)		return ((this1 & -3) == 5);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,get_backward,return )

bool TextDirection_Impl__obj::get_forward(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_334_get_forward)
HXDLIN( 334)		return ((this1 & -3) == 4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,get_forward,return )

bool TextDirection_Impl__obj::get_horizontal(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_339_get_horizontal)
HXDLIN( 339)		return ((this1 & -2) == 4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,get_horizontal,return )

bool TextDirection_Impl__obj::get_vertical(int this1){
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_344_get_vertical)
HXDLIN( 344)		return ((this1 & -2) == 6);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextDirection_Impl__obj,get_vertical,return )


TextDirection_Impl__obj::TextDirection_Impl__obj()
{
}

bool TextDirection_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"reverse") ) { outValue = reverse_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_forward") ) { outValue = get_forward_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_backward") ) { outValue = get_backward_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_vertical") ) { outValue = get_vertical_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"toHBDirection") ) { outValue = toHBDirection_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_horizontal") ) { outValue = get_horizontal_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TextDirection_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo TextDirection_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &TextDirection_Impl__obj::INVALID,HX_("INVALID",d7,ae,1b,bb)},
	{::hx::fsInt,(void *) &TextDirection_Impl__obj::LEFT_TO_RIGHT,HX_("LEFT_TO_RIGHT",30,11,7b,07)},
	{::hx::fsInt,(void *) &TextDirection_Impl__obj::RIGHT_TO_LEFT,HX_("RIGHT_TO_LEFT",c8,1d,8d,7b)},
	{::hx::fsInt,(void *) &TextDirection_Impl__obj::TOP_TO_BOTTOM,HX_("TOP_TO_BOTTOM",e5,52,9a,32)},
	{::hx::fsInt,(void *) &TextDirection_Impl__obj::BOTTOM_TO_TOP,HX_("BOTTOM_TO_TOP",85,ec,ed,b3)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void TextDirection_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TextDirection_Impl__obj::INVALID,"INVALID");
	HX_MARK_MEMBER_NAME(TextDirection_Impl__obj::LEFT_TO_RIGHT,"LEFT_TO_RIGHT");
	HX_MARK_MEMBER_NAME(TextDirection_Impl__obj::RIGHT_TO_LEFT,"RIGHT_TO_LEFT");
	HX_MARK_MEMBER_NAME(TextDirection_Impl__obj::TOP_TO_BOTTOM,"TOP_TO_BOTTOM");
	HX_MARK_MEMBER_NAME(TextDirection_Impl__obj::BOTTOM_TO_TOP,"BOTTOM_TO_TOP");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TextDirection_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TextDirection_Impl__obj::INVALID,"INVALID");
	HX_VISIT_MEMBER_NAME(TextDirection_Impl__obj::LEFT_TO_RIGHT,"LEFT_TO_RIGHT");
	HX_VISIT_MEMBER_NAME(TextDirection_Impl__obj::RIGHT_TO_LEFT,"RIGHT_TO_LEFT");
	HX_VISIT_MEMBER_NAME(TextDirection_Impl__obj::TOP_TO_BOTTOM,"TOP_TO_BOTTOM");
	HX_VISIT_MEMBER_NAME(TextDirection_Impl__obj::BOTTOM_TO_TOP,"BOTTOM_TO_TOP");
};

#endif

::hx::Class TextDirection_Impl__obj::__mClass;

static ::String TextDirection_Impl__obj_sStaticFields[] = {
	HX_("INVALID",d7,ae,1b,bb),
	HX_("LEFT_TO_RIGHT",30,11,7b,07),
	HX_("RIGHT_TO_LEFT",c8,1d,8d,7b),
	HX_("TOP_TO_BOTTOM",e5,52,9a,32),
	HX_("BOTTOM_TO_TOP",85,ec,ed,b3),
	HX_("reverse",22,39,fc,1a),
	HX_("toString",ac,d0,6e,38),
	HX_("toHBDirection",4a,ba,0d,a1),
	HX_("get_backward",ec,8f,32,dc),
	HX_("get_forward",dc,41,c5,6b),
	HX_("get_horizontal",2d,85,b9,8b),
	HX_("get_vertical",7f,70,2f,1f),
	::String(null())
};

void TextDirection_Impl__obj::__register()
{
	TextDirection_Impl__obj _hx_dummy;
	TextDirection_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl._internal.text._TextLayout.TextDirection_Impl_",49,60,b7,d4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TextDirection_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TextDirection_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TextDirection_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TextDirection_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TextDirection_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextDirection_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextDirection_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TextDirection_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_286_boot)
HXDLIN( 286)		INVALID = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_287_boot)
HXDLIN( 287)		LEFT_TO_RIGHT = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_288_boot)
HXDLIN( 288)		RIGHT_TO_LEFT = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_289_boot)
HXDLIN( 289)		TOP_TO_BOTTOM = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_25e1fe7cb7da8702_290_boot)
HXDLIN( 290)		BOTTOM_TO_TOP = 7;
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace text
} // end namespace _TextLayout
