// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_pallette_wheel_ColorWheel24
#include <pallette/wheel/ColorWheel24.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4fec8d54fe704ecb_36_getWheel,"pallette.wheel.ColorWheel24","getWheel",0xdf7ccbc9,"pallette.wheel.ColorWheel24.getWheel","pallette/wheel/ColorWheel24.hx",36,0x76db4332)
static const int _hx_array_data_23885d4a_1[] = {
	(int)-1098686,(int)-893376,(int)-884166,(int)-617161,(int)-742865,(int)-605897,(int)-338891,(int)-134353,(int)-211,(int)-2100183,(int)-5778134,(int)-8796379,(int)-11288539,(int)-11352449,(int)-11686193,(int)-12217654,(int)-12617788,(int)-12953665,(int)-13354819,(int)-11851843,(int)-9230154,(int)-4904763,(int)-3986796,(int)-2280591,
};
HX_LOCAL_STACK_FRAME(_hx_pos_4fec8d54fe704ecb_62_random,"pallette.wheel.ColorWheel24","random",0xe9ecb8a7,"pallette.wheel.ColorWheel24.random","pallette/wheel/ColorWheel24.hx",62,0x76db4332)
static const int _hx_array_data_23885d4a_3[] = {
	(int)-1098686,(int)-893376,(int)-884166,(int)-617161,(int)-742865,(int)-605897,(int)-338891,(int)-134353,(int)-211,(int)-2100183,(int)-5778134,(int)-8796379,(int)-11288539,(int)-11352449,(int)-11686193,(int)-12217654,(int)-12617788,(int)-12953665,(int)-13354819,(int)-11851843,(int)-9230154,(int)-4904763,(int)-3986796,(int)-2280591,
};
HX_LOCAL_STACK_FRAME(_hx_pos_4fec8d54fe704ecb_69_getName,"pallette.wheel.ColorWheel24","getName",0xfb085add,"pallette.wheel.ColorWheel24.getName","pallette/wheel/ColorWheel24.hx",69,0x76db4332)
HX_LOCAL_STACK_FRAME(_hx_pos_4fec8d54fe704ecb_97_next,"pallette.wheel.ColorWheel24","next",0x9be06a97,"pallette.wheel.ColorWheel24.next","pallette/wheel/ColorWheel24.hx",97,0x76db4332)
static const int _hx_array_data_23885d4a_6[] = {
	(int)-1098686,(int)-893376,(int)-884166,(int)-617161,(int)-742865,(int)-605897,(int)-338891,(int)-134353,(int)-211,(int)-2100183,(int)-5778134,(int)-8796379,(int)-11288539,(int)-11352449,(int)-11686193,(int)-12217654,(int)-12617788,(int)-12953665,(int)-13354819,(int)-11851843,(int)-9230154,(int)-4904763,(int)-3986796,(int)-2280591,
};
namespace pallette{
namespace wheel{

void ColorWheel24_obj::__construct() { }

Dynamic ColorWheel24_obj::__CreateEmpty() { return new ColorWheel24_obj; }

void *ColorWheel24_obj::_hx_vtable = 0;

Dynamic ColorWheel24_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ColorWheel24_obj > _hx_result = new ColorWheel24_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ColorWheel24_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fb974b8;
}

::Array< int > ColorWheel24_obj::getWheel(){
            	HX_STACKFRAME(&_hx_pos_4fec8d54fe704ecb_36_getWheel)
HXDLIN(  36)		return ::Array_obj< int >::fromData( _hx_array_data_23885d4a_1,24);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ColorWheel24_obj,getWheel,return )

int ColorWheel24_obj::random(){
            	HX_STACKFRAME(&_hx_pos_4fec8d54fe704ecb_62_random)
HXLINE(  63)		::Array< int > wheel = ::Array_obj< int >::fromData( _hx_array_data_23885d4a_3,24);
HXLINE(  64)		int rnd = ::Math_obj::round((::Math_obj::random() * ( (Float)(23) )));
HXLINE(  65)		return wheel->__get(rnd);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ColorWheel24_obj,random,return )

::String ColorWheel24_obj::getName(int w){
            	HX_STACKFRAME(&_hx_pos_4fec8d54fe704ecb_69_getName)
HXDLIN(  69)		switch((int)(w)){
            			case (int)-13354819: {
HXLINE(  88)				return HX_("earlySpringNight",e8,c7,0b,c5);
            			}
            			break;
            			case (int)-12953665: {
HXLINE(  87)				return HX_("freeSpeechBlue",a8,d5,a2,a6);
            			}
            			break;
            			case (int)-12617788: {
HXLINE(  86)				return HX_("celestialPlum",8c,fb,e0,0d);
            			}
            			break;
            			case (int)-12217654: {
HXLINE(  85)				return HX_("blueTourmaline",1a,df,fc,c5);
            			}
            			break;
            			case (int)-11851843: {
HXLINE(  89)				return HX_("blueDepression",e0,19,e7,94);
            			}
            			break;
            			case (int)-11686193: {
HXLINE(  84)				return HX_("maximumBlue",9a,8e,c9,7c);
            			}
            			break;
            			case (int)-11352449: {
HXLINE(  83)				return HX_("parisGreen",38,bf,f6,bc);
            			}
            			break;
            			case (int)-11288539: {
HXLINE(  82)				return HX_("fieldGreen",a9,87,6f,67);
            			}
            			break;
            			case (int)-9230154: {
HXLINE(  90)				return HX_("nebulaFuschsia",a1,e4,23,2f);
            			}
            			break;
            			case (int)-8796379: {
HXLINE(  81)				return HX_("appleGreen",09,53,1b,46);
            			}
            			break;
            			case (int)-5778134: {
HXLINE(  80)				return HX_("peraRocha",fb,92,37,a8);
            			}
            			break;
            			case (int)-4904763: {
HXLINE(  91)				return HX_("fushsiaFlair",9d,c9,c1,49);
            			}
            			break;
            			case (int)-3986796: {
HXLINE(  92)				return HX_("royalFuchsia",90,d6,03,86);
            			}
            			break;
            			case (int)-2280591: {
HXLINE(  93)				return HX_("fuchsiaPurple",73,ab,56,6b);
            			}
            			break;
            			case (int)-2100183: {
HXLINE(  79)				return HX_("spoiledEgg",f1,94,90,1e);
            			}
            			break;
            			case (int)-1098686: {
HXLINE(  70)				return HX_("redRadish",ba,6e,55,a4);
            			}
            			break;
            			case (int)-893376: {
HXLINE(  71)				return HX_("orangeSoda",27,09,8d,67);
            			}
            			break;
            			case (int)-884166: {
HXLINE(  72)				return HX_("gokuOrange",60,e2,58,38);
            			}
            			break;
            			case (int)-742865: {
HXLINE(  74)				return HX_("carona",ce,ea,e1,ba);
            			}
            			break;
            			case (int)-617161: {
HXLINE(  73)				return HX_("highlighterOrange",6f,b9,16,6f);
            			}
            			break;
            			case (int)-605897: {
HXLINE(  75)				return HX_("solarPower",04,63,81,a9);
            			}
            			break;
            			case (int)-338891: {
HXLINE(  76)				return HX_("flirtaious",a0,e7,c3,16);
            			}
            			break;
            			case (int)-134353: {
HXLINE(  77)				return HX_("yellowBellied",d1,bc,6e,04);
            			}
            			break;
            			case (int)-211: {
HXLINE(  78)				return HX_("daffodil",b5,78,47,e6);
            			}
            			break;
            		}
HXLINE(  69)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorWheel24_obj,getName,return )

int ColorWheel24_obj::next(int w){
            	HX_STACKFRAME(&_hx_pos_4fec8d54fe704ecb_97_next)
HXLINE(  98)		::Array< int > wheel = ::Array_obj< int >::fromData( _hx_array_data_23885d4a_6,24);
HXLINE(  99)		int i = wheel->indexOf(w,null());
HXLINE( 100)		int v;
HXDLIN( 100)		if ((i < 24)) {
HXLINE( 100)			v = (i + 1);
            		}
            		else {
HXLINE( 100)			v = 0;
            		}
HXLINE( 101)		return wheel->__get(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColorWheel24_obj,next,return )


ColorWheel24_obj::ColorWheel24_obj()
{
}

bool ColorWheel24_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"next") ) { outValue = next_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"random") ) { outValue = random_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { outValue = getName_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getWheel") ) { outValue = getWheel_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ColorWheel24_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ColorWheel24_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ColorWheel24_obj::__mClass;

static ::String ColorWheel24_obj_sStaticFields[] = {
	HX_("getWheel",25,44,91,29),
	HX_("random",03,22,8f,b7),
	HX_("getName",01,22,82,1b),
	HX_("next",f3,84,02,49),
	::String(null())
};

void ColorWheel24_obj::__register()
{
	ColorWheel24_obj _hx_dummy;
	ColorWheel24_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pallette.wheel.ColorWheel24",4a,5d,88,23);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ColorWheel24_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ColorWheel24_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ColorWheel24_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ColorWheel24_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ColorWheel24_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pallette
} // end namespace wheel
