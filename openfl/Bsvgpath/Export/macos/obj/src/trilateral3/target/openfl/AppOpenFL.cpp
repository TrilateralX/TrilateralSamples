// Generated by Haxe 4.2.0-rc.1+7dc565e63
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_dsHelper_flat_io__Float32Flat_Float32Flat_Impl_
#include <dsHelper/flat/io/_Float32Flat/Float32Flat_Impl_.h>
#endif
#ifndef INCLUDED_dsHelper_flatInterleave__FloatColorTriangles_FloatColorTriangles_Impl_
#include <dsHelper/flatInterleave/_FloatColorTriangles/FloatColorTriangles_Impl_.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_trilateral3_drawing_Pen
#include <trilateral3/drawing/Pen.h>
#endif
#ifndef INCLUDED_trilateral3_nodule_PenNodule
#include <trilateral3/nodule/PenNodule.h>
#endif
#ifndef INCLUDED_trilateral3_structure_TriInt
#include <trilateral3/structure/TriInt.h>
#endif
#ifndef INCLUDED_trilateral3_target_openfl_AppOpenFL
#include <trilateral3/target/openfl/AppOpenFL.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a64408609bc84cc3_16_new,"trilateral3.target.openfl.AppOpenFL","new",0x1071e05b,"trilateral3.target.openfl.AppOpenFL.new","trilateral3/target/openfl/AppOpenFL.hx",16,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_31_internalSetup,"trilateral3.target.openfl.AppOpenFL","internalSetup",0xa31051bb,"trilateral3.target.openfl.AppOpenFL.internalSetup","trilateral3/target/openfl/AppOpenFL.hx",31,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_40_animate,"trilateral3.target.openfl.AppOpenFL","animate",0x79b2041c,"trilateral3.target.openfl.AppOpenFL.animate","trilateral3/target/openfl/AppOpenFL.hx",40,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_43_firstDraw,"trilateral3.target.openfl.AppOpenFL","firstDraw",0x7b5d668f,"trilateral3.target.openfl.AppOpenFL.firstDraw","trilateral3/target/openfl/AppOpenFL.hx",43,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_49_draw,"trilateral3.target.openfl.AppOpenFL","draw",0x4ca017a9,"trilateral3.target.openfl.AppOpenFL.draw","trilateral3/target/openfl/AppOpenFL.hx",49,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_53_render,"trilateral3.target.openfl.AppOpenFL","render",0xebe74a3b,"trilateral3.target.openfl.AppOpenFL.render","trilateral3/target/openfl/AppOpenFL.hx",53,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_58_internalDraw,"trilateral3.target.openfl.AppOpenFL","internalDraw",0x101c3a86,"trilateral3.target.openfl.AppOpenFL.internalDraw","trilateral3/target/openfl/AppOpenFL.hx",58,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_82_renderDraw,"trilateral3.target.openfl.AppOpenFL","renderDraw",0x3841dbdf,"trilateral3.target.openfl.AppOpenFL.renderDraw","trilateral3/target/openfl/AppOpenFL.hx",82,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_87_this_onEnterFrame,"trilateral3.target.openfl.AppOpenFL","this_onEnterFrame",0x27cf00f0,"trilateral3.target.openfl.AppOpenFL.this_onEnterFrame","trilateral3/target/openfl/AppOpenFL.hx",87,0x42b382d6)
HX_LOCAL_STACK_FRAME(_hx_pos_a64408609bc84cc3_22_main,"trilateral3.target.openfl.AppOpenFL","main",0x528623de,"trilateral3.target.openfl.AppOpenFL.main","trilateral3/target/openfl/AppOpenFL.hx",22,0x42b382d6)
namespace trilateral3{
namespace target{
namespace openfl{

void AppOpenFL_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_a64408609bc84cc3_16_new)
HXLINE(  18)		this->nodule =  ::trilateral3::nodule::PenNodule_obj::__alloc( HX_CTX ,false);
HXLINE(  25)		super::__construct();
HXLINE(  26)		{
HXLINE(  26)			this->viewSprite =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXDLIN(  26)			this->g = this->viewSprite->get_graphics();
HXDLIN(  26)			this->addChild(this->viewSprite);
HXDLIN(  26)			this->pen = this->nodule->pen;
HXDLIN(  26)			this->tri = this->nodule->colorTriangles;
            		}
HXLINE(  27)		this->addEventListener(HX_("enterFrame",f5,03,50,02),this->this_onEnterFrame_dyn(),null(),null(),null());
HXLINE(  28)		{
HXLINE(  28)			this->draw();
HXDLIN(  28)			{
HXLINE(  28)				Float s = ((Float)1.);
HXDLIN(  28)				Float ox = ((Float)-1.);
HXDLIN(  28)				Float oy = ((Float)1.);
HXDLIN(  28)				this->g->clear();
HXDLIN(  28)				 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  28)				Float currPos =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  28)				{
HXLINE(  28)					int _g = 0;
HXDLIN(  28)					int _g1 = ::Std_obj::_hx_int(( (Float)((::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this->nodule->colorTriangles) * 3)) ));
HXDLIN(  28)					while((_g < _g1)){
HXLINE(  28)						_g = (_g + 1);
HXDLIN(  28)						int i = (_g - 1);
HXDLIN(  28)						{
HXLINE(  28)							 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  28)							 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,i);
HXDLIN(  28)							Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  28)							if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  28)								Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  28)								 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            							}
            						}
HXDLIN(  28)						 ::trilateral3::structure::TriInt col3 = ( ( ::trilateral3::structure::TriInt)(this->pen->colorType->__Field(HX_("getTriInt",ba,b1,09,c7),::hx::paccDynamic)()) );
HXDLIN(  28)						int colA = col3->a;
HXDLIN(  28)						this->g->lineStyle(((Float)0.),colA,((Float)0.),null(),null(),null(),null(),null());
HXDLIN(  28)						 ::openfl::display::Graphics _hx_tmp1 = this->g;
HXDLIN(  28)						Float _hx_tmp2 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  28)						_hx_tmp1->moveTo(_hx_tmp2,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  28)						 ::openfl::display::Graphics _hx_tmp3 = this->g;
HXDLIN(  28)						 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  28)						int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset)) * 21) + 6);
HXDLIN(  28)						_hx_tmp3->beginFill(colA, ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + ((k + 2) * 4))));
HXDLIN(  28)						 ::openfl::display::Graphics _hx_tmp4 = this->g;
HXDLIN(  28)						Float _hx_tmp5 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  28)						_hx_tmp4->lineTo(_hx_tmp5,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  28)						 ::openfl::display::Graphics _hx_tmp6 = this->g;
HXDLIN(  28)						Float _hx_tmp7 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this->tri) * s));
HXDLIN(  28)						_hx_tmp6->lineTo(_hx_tmp7,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this->tri) * s)));
HXDLIN(  28)						 ::openfl::display::Graphics _hx_tmp8 = this->g;
HXDLIN(  28)						Float _hx_tmp9 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this->tri) * s));
HXDLIN(  28)						_hx_tmp8->lineTo(_hx_tmp9,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this->tri) * s)));
HXDLIN(  28)						this->g->endFill();
            					}
            				}
HXDLIN(  28)				{
HXLINE(  28)					 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  28)					 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,currPos);
HXDLIN(  28)					Float _hx_tmp =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  28)					if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  28)						Float val =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  28)						 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),val);
            					}
            				}
            			}
            		}
            	}

Dynamic AppOpenFL_obj::__CreateEmpty() { return new AppOpenFL_obj; }

void *AppOpenFL_obj::_hx_vtable = 0;

Dynamic AppOpenFL_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AppOpenFL_obj > _hx_result = new AppOpenFL_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AppOpenFL_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x222f2689 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void AppOpenFL_obj::internalSetup(){
            	HX_GC_STACKFRAME(&_hx_pos_a64408609bc84cc3_31_internalSetup)
HXLINE(  32)		this->viewSprite =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  33)		this->g = this->viewSprite->get_graphics();
HXLINE(  34)		this->addChild(this->viewSprite);
HXLINE(  35)		this->pen = this->nodule->pen;
HXLINE(  36)		this->tri = this->nodule->colorTriangles;
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,internalSetup,(void))

void AppOpenFL_obj::animate(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_40_animate)
HXDLIN(  40)		this->addEventListener(HX_("enterFrame",f5,03,50,02),this->this_onEnterFrame_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,animate,(void))

void AppOpenFL_obj::firstDraw(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_43_firstDraw)
HXLINE(  44)		this->draw();
HXLINE(  45)		{
HXLINE(  45)			Float s = ((Float)1.);
HXDLIN(  45)			Float ox = ((Float)-1.);
HXDLIN(  45)			Float oy = ((Float)1.);
HXDLIN(  45)			this->g->clear();
HXDLIN(  45)			 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  45)			Float currPos =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  45)			{
HXLINE(  45)				int _g = 0;
HXDLIN(  45)				int _g1 = ::Std_obj::_hx_int(( (Float)((::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this->nodule->colorTriangles) * 3)) ));
HXDLIN(  45)				while((_g < _g1)){
HXLINE(  45)					_g = (_g + 1);
HXDLIN(  45)					int i = (_g - 1);
HXDLIN(  45)					{
HXLINE(  45)						 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  45)						 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,i);
HXDLIN(  45)						Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  45)						if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  45)							Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  45)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            						}
            					}
HXDLIN(  45)					 ::trilateral3::structure::TriInt col3 = ( ( ::trilateral3::structure::TriInt)(this->pen->colorType->__Field(HX_("getTriInt",ba,b1,09,c7),::hx::paccDynamic)()) );
HXDLIN(  45)					int colA = col3->a;
HXDLIN(  45)					this->g->lineStyle(((Float)0.),colA,((Float)0.),null(),null(),null(),null(),null());
HXDLIN(  45)					 ::openfl::display::Graphics _hx_tmp1 = this->g;
HXDLIN(  45)					Float _hx_tmp2 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  45)					_hx_tmp1->moveTo(_hx_tmp2,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  45)					 ::openfl::display::Graphics _hx_tmp3 = this->g;
HXDLIN(  45)					 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  45)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset)) * 21) + 6);
HXDLIN(  45)					_hx_tmp3->beginFill(colA, ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + ((k + 2) * 4))));
HXDLIN(  45)					 ::openfl::display::Graphics _hx_tmp4 = this->g;
HXDLIN(  45)					Float _hx_tmp5 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  45)					_hx_tmp4->lineTo(_hx_tmp5,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  45)					 ::openfl::display::Graphics _hx_tmp6 = this->g;
HXDLIN(  45)					Float _hx_tmp7 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this->tri) * s));
HXDLIN(  45)					_hx_tmp6->lineTo(_hx_tmp7,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this->tri) * s)));
HXDLIN(  45)					 ::openfl::display::Graphics _hx_tmp8 = this->g;
HXDLIN(  45)					Float _hx_tmp9 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this->tri) * s));
HXDLIN(  45)					_hx_tmp8->lineTo(_hx_tmp9,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this->tri) * s)));
HXDLIN(  45)					this->g->endFill();
            				}
            			}
HXDLIN(  45)			{
HXLINE(  45)				 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  45)				 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,currPos);
HXDLIN(  45)				Float _hx_tmp =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  45)				if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  45)					Float val =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  45)					 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),val);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,firstDraw,(void))

void AppOpenFL_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_49_draw)
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,draw,(void))

void AppOpenFL_obj::render(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_53_render)
HXLINE(  54)		this->draw();
HXLINE(  55)		{
HXLINE(  55)			Float s = ((Float)1.);
HXDLIN(  55)			Float ox = ((Float)-1.);
HXDLIN(  55)			Float oy = ((Float)1.);
HXDLIN(  55)			this->g->clear();
HXDLIN(  55)			 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  55)			Float currPos =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  55)			{
HXLINE(  55)				int _g = 0;
HXDLIN(  55)				int _g1 = ::Std_obj::_hx_int(( (Float)((::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this->nodule->colorTriangles) * 3)) ));
HXDLIN(  55)				while((_g < _g1)){
HXLINE(  55)					_g = (_g + 1);
HXDLIN(  55)					int i = (_g - 1);
HXDLIN(  55)					{
HXLINE(  55)						 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  55)						 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,i);
HXDLIN(  55)						Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  55)						if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  55)							Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  55)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            						}
            					}
HXDLIN(  55)					 ::trilateral3::structure::TriInt col3 = ( ( ::trilateral3::structure::TriInt)(this->pen->colorType->__Field(HX_("getTriInt",ba,b1,09,c7),::hx::paccDynamic)()) );
HXDLIN(  55)					int colA = col3->a;
HXDLIN(  55)					this->g->lineStyle(((Float)0.),colA,((Float)0.),null(),null(),null(),null(),null());
HXDLIN(  55)					 ::openfl::display::Graphics _hx_tmp1 = this->g;
HXDLIN(  55)					Float _hx_tmp2 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  55)					_hx_tmp1->moveTo(_hx_tmp2,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  55)					 ::openfl::display::Graphics _hx_tmp3 = this->g;
HXDLIN(  55)					 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  55)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset)) * 21) + 6);
HXDLIN(  55)					_hx_tmp3->beginFill(colA, ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + ((k + 2) * 4))));
HXDLIN(  55)					 ::openfl::display::Graphics _hx_tmp4 = this->g;
HXDLIN(  55)					Float _hx_tmp5 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  55)					_hx_tmp4->lineTo(_hx_tmp5,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  55)					 ::openfl::display::Graphics _hx_tmp6 = this->g;
HXDLIN(  55)					Float _hx_tmp7 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this->tri) * s));
HXDLIN(  55)					_hx_tmp6->lineTo(_hx_tmp7,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this->tri) * s)));
HXDLIN(  55)					 ::openfl::display::Graphics _hx_tmp8 = this->g;
HXDLIN(  55)					Float _hx_tmp9 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this->tri) * s));
HXDLIN(  55)					_hx_tmp8->lineTo(_hx_tmp9,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this->tri) * s)));
HXDLIN(  55)					this->g->endFill();
            				}
            			}
HXDLIN(  55)			{
HXLINE(  55)				 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  55)				 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,currPos);
HXDLIN(  55)				Float _hx_tmp =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  55)				if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  55)					Float val =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  55)					 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),val);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,render,(void))

void AppOpenFL_obj::internalDraw(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_58_internalDraw)
HXLINE(  59)		Float s = ((Float)1.);
HXLINE(  60)		Float ox = ((Float)-1.);
HXLINE(  61)		Float oy = ((Float)1.);
HXLINE(  62)		this->g->clear();
HXLINE(  63)		 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  63)		Float currPos =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXLINE(  64)		{
HXLINE(  64)			int _g = 0;
HXDLIN(  64)			int _g1 = ::Std_obj::_hx_int(( (Float)((::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this->nodule->colorTriangles) * 3)) ));
HXDLIN(  64)			while((_g < _g1)){
HXLINE(  64)				_g = (_g + 1);
HXDLIN(  64)				int i = (_g - 1);
HXLINE(  65)				{
HXLINE(  65)					 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  65)					 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,i);
HXDLIN(  65)					Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  65)					if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  65)						Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  65)						 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            					}
            				}
HXLINE(  66)				 ::trilateral3::structure::TriInt col3 = ( ( ::trilateral3::structure::TriInt)(this->pen->colorType->__Field(HX_("getTriInt",ba,b1,09,c7),::hx::paccDynamic)()) );
HXLINE(  67)				int colA = col3->a;
HXLINE(  68)				this->g->lineStyle(((Float)0.),colA,((Float)0.),null(),null(),null(),null(),null());
HXLINE(  70)				 ::openfl::display::Graphics _hx_tmp1 = this->g;
HXDLIN(  70)				Float _hx_tmp2 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  70)				_hx_tmp1->moveTo(_hx_tmp2,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXLINE(  71)				 ::openfl::display::Graphics _hx_tmp3 = this->g;
HXDLIN(  71)				 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  71)				int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset)) * 21) + 6);
HXDLIN(  71)				_hx_tmp3->beginFill(colA, ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + ((k + 2) * 4))));
HXLINE(  72)				 ::openfl::display::Graphics _hx_tmp4 = this->g;
HXDLIN(  72)				Float _hx_tmp5 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  72)				_hx_tmp4->lineTo(_hx_tmp5,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXLINE(  73)				 ::openfl::display::Graphics _hx_tmp6 = this->g;
HXDLIN(  73)				Float _hx_tmp7 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this->tri) * s));
HXDLIN(  73)				_hx_tmp6->lineTo(_hx_tmp7,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this->tri) * s)));
HXLINE(  74)				 ::openfl::display::Graphics _hx_tmp8 = this->g;
HXDLIN(  74)				Float _hx_tmp9 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this->tri) * s));
HXDLIN(  74)				_hx_tmp8->lineTo(_hx_tmp9,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this->tri) * s)));
HXLINE(  75)				this->g->endFill();
            			}
            		}
HXLINE(  78)		{
HXLINE(  78)			 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  78)			 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,currPos);
HXDLIN(  78)			Float _hx_tmp =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  78)			if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + 4)) - ( (Float)(1) )))) {
HXLINE(  78)				Float val =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  78)				 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),val);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,internalDraw,(void))

void AppOpenFL_obj::renderDraw(){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_82_renderDraw)
            	}


HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,renderDraw,(void))

void AppOpenFL_obj::this_onEnterFrame( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_a64408609bc84cc3_87_this_onEnterFrame)
HXDLIN(  87)		this->draw();
HXDLIN(  87)		{
HXDLIN(  87)			Float s = ((Float)1.);
HXDLIN(  87)			Float ox = ((Float)-1.);
HXDLIN(  87)			Float oy = ((Float)1.);
HXDLIN(  87)			this->g->clear();
HXDLIN(  87)			 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  87)			Float currPos =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  87)			{
HXDLIN(  87)				int _g = 0;
HXDLIN(  87)				int _g1 = ::Std_obj::_hx_int(( (Float)((::dsHelper::flat::io::_Float32Flat::Float32Flat_Impl__obj::get_size(this->nodule->colorTriangles) * 3)) ));
HXDLIN(  87)				while((_g < _g1)){
HXDLIN(  87)					_g = (_g + 1);
HXDLIN(  87)					int i = (_g - 1);
HXDLIN(  87)					{
HXDLIN(  87)						 ::lime::utils::ArrayBufferView this1 = this->tri;
HXDLIN(  87)						 ::__hxcpp_memory_set_float(this1->buffer->b,this1->byteOffset,i);
HXDLIN(  87)						Float _hx_tmp =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  87)						if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this1->buffer->b,(this1->byteOffset + 4)) - ( (Float)(1) )))) {
HXDLIN(  87)							Float val =  ::__hxcpp_memory_get_float(this1->buffer->b,this1->byteOffset);
HXDLIN(  87)							 ::__hxcpp_memory_set_float(this1->buffer->b,(this1->byteOffset + 4),val);
            						}
            					}
HXDLIN(  87)					 ::trilateral3::structure::TriInt col3 = ( ( ::trilateral3::structure::TriInt)(this->pen->colorType->__Field(HX_("getTriInt",ba,b1,09,c7),::hx::paccDynamic)()) );
HXDLIN(  87)					int colA = col3->a;
HXDLIN(  87)					this->g->lineStyle(((Float)0.),colA,((Float)0.),null(),null(),null(),null(),null());
HXDLIN(  87)					 ::openfl::display::Graphics _hx_tmp1 = this->g;
HXDLIN(  87)					Float _hx_tmp2 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  87)					_hx_tmp1->moveTo(_hx_tmp2,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  87)					 ::openfl::display::Graphics _hx_tmp3 = this->g;
HXDLIN(  87)					 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  87)					int k = ((::Std_obj::_hx_int( ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset)) * 21) + 6);
HXDLIN(  87)					_hx_tmp3->beginFill(colA, ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + ((k + 2) * 4))));
HXDLIN(  87)					 ::openfl::display::Graphics _hx_tmp4 = this->g;
HXDLIN(  87)					Float _hx_tmp5 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ax(this->tri) * s));
HXDLIN(  87)					_hx_tmp4->lineTo(_hx_tmp5,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_ay(this->tri) * s)));
HXDLIN(  87)					 ::openfl::display::Graphics _hx_tmp6 = this->g;
HXDLIN(  87)					Float _hx_tmp7 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_bx(this->tri) * s));
HXDLIN(  87)					_hx_tmp6->lineTo(_hx_tmp7,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_by(this->tri) * s)));
HXDLIN(  87)					 ::openfl::display::Graphics _hx_tmp8 = this->g;
HXDLIN(  87)					Float _hx_tmp9 = (ox + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cx(this->tri) * s));
HXDLIN(  87)					_hx_tmp8->lineTo(_hx_tmp9,(oy + (::dsHelper::flatInterleave::_FloatColorTriangles::FloatColorTriangles_Impl__obj::get_cy(this->tri) * s)));
HXDLIN(  87)					this->g->endFill();
            				}
            			}
HXDLIN(  87)			{
HXDLIN(  87)				 ::lime::utils::ArrayBufferView this2 = this->tri;
HXDLIN(  87)				 ::__hxcpp_memory_set_float(this2->buffer->b,this2->byteOffset,currPos);
HXDLIN(  87)				Float _hx_tmp =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  87)				if ((_hx_tmp > ( ::__hxcpp_memory_get_float(this2->buffer->b,(this2->byteOffset + 4)) - ( (Float)(1) )))) {
HXDLIN(  87)					Float val =  ::__hxcpp_memory_get_float(this2->buffer->b,this2->byteOffset);
HXDLIN(  87)					 ::__hxcpp_memory_set_float(this2->buffer->b,(this2->byteOffset + 4),val);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(AppOpenFL_obj,this_onEnterFrame,(void))

void AppOpenFL_obj::main(){
            	HX_GC_STACKFRAME(&_hx_pos_a64408609bc84cc3_22_main)
HXDLIN(  22)		 ::openfl::display::MovieClip _hx_tmp = ::openfl::Lib_obj::get_current();
HXDLIN(  22)		_hx_tmp->addChild( ::trilateral3::target::openfl::AppOpenFL_obj::__alloc( HX_CTX ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AppOpenFL_obj,main,(void))


::hx::ObjectPtr< AppOpenFL_obj > AppOpenFL_obj::__new() {
	::hx::ObjectPtr< AppOpenFL_obj > __this = new AppOpenFL_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< AppOpenFL_obj > AppOpenFL_obj::__alloc(::hx::Ctx *_hx_ctx) {
	AppOpenFL_obj *__this = (AppOpenFL_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AppOpenFL_obj), true, "trilateral3.target.openfl.AppOpenFL"));
	*(void **)__this = AppOpenFL_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

AppOpenFL_obj::AppOpenFL_obj()
{
}

void AppOpenFL_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AppOpenFL);
	HX_MARK_MEMBER_NAME(pen,"pen");
	HX_MARK_MEMBER_NAME(nodule,"nodule");
	HX_MARK_MEMBER_NAME(tri,"tri");
	HX_MARK_MEMBER_NAME(g,"g");
	HX_MARK_MEMBER_NAME(viewSprite,"viewSprite");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void AppOpenFL_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pen,"pen");
	HX_VISIT_MEMBER_NAME(nodule,"nodule");
	HX_VISIT_MEMBER_NAME(tri,"tri");
	HX_VISIT_MEMBER_NAME(g,"g");
	HX_VISIT_MEMBER_NAME(viewSprite,"viewSprite");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val AppOpenFL_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"g") ) { return ::hx::Val( g ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"pen") ) { return ::hx::Val( pen ); }
		if (HX_FIELD_EQ(inName,"tri") ) { return ::hx::Val( tri ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"nodule") ) { return ::hx::Val( nodule ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"animate") ) { return ::hx::Val( animate_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"firstDraw") ) { return ::hx::Val( firstDraw_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"viewSprite") ) { return ::hx::Val( viewSprite ); }
		if (HX_FIELD_EQ(inName,"renderDraw") ) { return ::hx::Val( renderDraw_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"internalDraw") ) { return ::hx::Val( internalDraw_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"internalSetup") ) { return ::hx::Val( internalSetup_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"this_onEnterFrame") ) { return ::hx::Val( this_onEnterFrame_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool AppOpenFL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

::hx::Val AppOpenFL_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"g") ) { g=inValue.Cast<  ::openfl::display::Graphics >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"pen") ) { pen=inValue.Cast<  ::trilateral3::drawing::Pen >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tri") ) { tri=inValue.Cast<  ::lime::utils::ArrayBufferView >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"nodule") ) { nodule=inValue.Cast<  ::trilateral3::nodule::PenNodule >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"viewSprite") ) { viewSprite=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AppOpenFL_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pen",d9,54,55,00));
	outFields->push(HX_("nodule",0b,91,2e,27));
	outFields->push(HX_("tri",2b,69,58,00));
	outFields->push(HX_("g",67,00,00,00));
	outFields->push(HX_("viewSprite",4a,dc,e2,04));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo AppOpenFL_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::trilateral3::drawing::Pen */ ,(int)offsetof(AppOpenFL_obj,pen),HX_("pen",d9,54,55,00)},
	{::hx::fsObject /*  ::trilateral3::nodule::PenNodule */ ,(int)offsetof(AppOpenFL_obj,nodule),HX_("nodule",0b,91,2e,27)},
	{::hx::fsObject /*  ::lime::utils::ArrayBufferView */ ,(int)offsetof(AppOpenFL_obj,tri),HX_("tri",2b,69,58,00)},
	{::hx::fsObject /*  ::openfl::display::Graphics */ ,(int)offsetof(AppOpenFL_obj,g),HX_("g",67,00,00,00)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(AppOpenFL_obj,viewSprite),HX_("viewSprite",4a,dc,e2,04)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *AppOpenFL_obj_sStaticStorageInfo = 0;
#endif

static ::String AppOpenFL_obj_sMemberFields[] = {
	HX_("pen",d9,54,55,00),
	HX_("nodule",0b,91,2e,27),
	HX_("tri",2b,69,58,00),
	HX_("g",67,00,00,00),
	HX_("viewSprite",4a,dc,e2,04),
	HX_("internalSetup",00,5a,16,9f),
	HX_("animate",a1,da,4c,7a),
	HX_("firstDraw",54,a8,3e,f9),
	HX_("draw",04,2c,70,42),
	HX_("render",56,6b,29,05),
	HX_("internalDraw",e1,a1,f0,2d),
	HX_("renderDraw",7a,26,7a,df),
	HX_("this_onEnterFrame",b5,0f,1f,8e),
	::String(null()) };

::hx::Class AppOpenFL_obj::__mClass;

static ::String AppOpenFL_obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void AppOpenFL_obj::__register()
{
	AppOpenFL_obj _hx_dummy;
	AppOpenFL_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("trilateral3.target.openfl.AppOpenFL",e9,16,96,75);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AppOpenFL_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(AppOpenFL_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AppOpenFL_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AppOpenFL_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AppOpenFL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AppOpenFL_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace trilateral3
} // end namespace target
} // end namespace openfl
